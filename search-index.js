antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1",[0,31.665,1,20.234]],["name/1",[2,2.299]],["text/1",[0,4.737,1,3.027]],["component/1",[3,2.388]],["title/2-1",[4,22.607,5,29.822]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[4,22.607,6,28.243]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[4,22.607,7,33.879]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2",[4,27.37]],["name/2",[4,1.418]],["text/2",[4,2.977,5,1.665,6,1.577,7,2.955,8,2.046,9,2.046,10,2.046,11,2.254,12,2.254,13,1.768,14,3.619,15,1.5,16,1.37,17,2.254,18,2.254,19,1.665,20,2.046,21,2.254,22,1.891,23,2.14,24,3.521,25,3.4,26,3.521,27,3.521,28,2.254,29,4.899,30,4.899,31,3.521,32,4.899,33,3.521,34,2.254,35,2.464,36,2.762,37,3.521,38,3.521,39,3.521,40,3.521,41,3.521,42,6.091,43,3.197,44,3.843,45,3.521,46,3.521,47,2.762,48,3.197,49,2.254,50,3.521,51,3.521,52,2.046,53,2.254,54,2.254,55,2.526,56,2.254,57,1.829,58,2.343,59,1.782,60,1.365,61,1.898,62,2.762,63,2.464,64,2.762,65,3.521,66,1.179,67,3.521,68,3.521,69,2.236,70,1.972,71,2.955]],["component/2",[72,1.05]],["title/3-1",[73,33.879,74,33.879]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[75,41.017]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3-3",[76,41.017]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["title/3",[15,22.88,77,21.835,78,25.402]],["name/3",[15,0.772,77,0.737,78,0.857]],["text/3",[5,1.797,55,2.651,59,2.185,63,1.702,73,5.489,74,5.489,75,5.377,76,4.622,77,3.241,78,3.361,79,2.042,80,1.909,81,4.13,82,6.975,83,3.868,84,3.974,85,2.433,86,2.433,87,4.549,88,2.433,89,2.433,90,2.433,91,1.102,92,2.363,93,2.433,94,2.433,95,2.433,96,2.433,97,2.433,98,2.433,99,2.433,100,1.264,101,2.433,102,3.136,103,2.433,104,1.619,105,1.909]],["component/3",[72,1.05]],["title/4-1",[14,29.822,106,26.862]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4",[106,32.521]],["name/4",[106,1.685]],["text/4",[15,3.621,57,2.827,58,4.059,59,1.721,60,2.109,62,3.224,63,4.268,64,3.224,69,2.61,70,2.302,71,3.449,106,4.618,107,1.746,108,5.441,109,4.11,110,4.567,111,5.441,112,4.941,113,5.441,114,4.941,115,4.11]],["component/4",[72,1.05]],["title/5-1",[16,18.197,84,18.197,116,22.122,117,17.453]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5",[16,20.895,84,20.895,116,25.402]],["name/5",[16,0.967,84,0.967]],["text/5",[13,1.768,14,1.665,16,2.634,19,1.665,22,1.891,23,1.37,55,1.314,59,2.324,60,0.873,70,1.262,77,1.431,83,2.343,84,3.891,116,3.619,117,1.314,118,6.402,119,2.254,120,2.254,121,2.254,122,2.254,123,1.891,124,3.521,125,4.334,126,2.254,127,2.046,128,2.046,129,2.254,130,2.254,131,1.5,132,1.431,133,1.768,134,3.521,135,2.254,136,2.046,137,2.254,138,2.254,139,1.891,140,3.111,141,2.254,142,1.891,143,1.577,144,1.768,145,2.254,146,1.891,147,2.254,148,1.891,149,2.254,150,1.665,151,2.254,152,2.254,153,4.334,154,3.521,155,2.254,156,2.254,157,2.254,158,2.254,159,3.521,160,2.254,161,1.577,162,2.254,163,2.254,164,2.254,165,3.521,166,1.577,167,2.254,168,2.254,169,2.254,170,2.254,171,1.768,172,2.254,173,3.521,174,1.768,175,1.665,176,2.254,177,2.254]],["component/5",[72,1.05]],["title/6-1",[178,41.017]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[179,41.017]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[180,38.336]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6",[181,28.857,182,28.857,183,25.402]],["name/6",[183,1.176,184,1.336]],["text/6",[19,1.642,36,3.815,59,1.102,60,1.35,61,1.198,92,2.232,131,1.479,143,1.555,178,4.702,179,4.081,180,4.143,181,2.924,182,1.866,183,4.479,184,4.432,185,2.223,186,2.223,187,2.223,188,2.223,189,4.296,190,2.223,191,1.866,192,1.198,193,2.223,194,2.223,195,2.018,196,2.924,197,2.018,198,2.223,199,2.223,200,2.223,201,5.281,202,3.484,203,3.484,204,3.484,205,5.856,206,4.702,207,3.484,208,3.484,209,3.484,210,4.296,211,3.484,212,2.437,213,3.484,214,3.484,215,3.484,216,4.862,217,2.437,218,3.484,219,3.484,220,3.484,221,3.484,222,3.484,223,2.018,224,2.223,225,1.866,226,3.163,227,3.484,228,3.484,229,3.484,230,2.437,231,3.163]],["component/6",[72,1.05]],["title/7-1",[4,22.607,5,29.822]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[4,22.607,6,28.243]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[4,22.607,7,33.879]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7",[4,27.37]],["name/7",[4,1.418]],["text/7",[4,2.977,5,1.665,6,1.577,7,2.955,8,2.046,9,2.046,10,2.046,11,2.254,12,2.254,13,1.768,14,3.619,15,1.5,16,1.37,17,2.254,18,2.254,19,1.665,20,2.046,21,2.254,22,1.891,23,2.14,24,3.521,25,3.4,26,3.521,27,3.521,28,2.254,29,4.899,30,4.899,31,3.521,32,4.899,33,3.521,34,2.254,35,2.464,36,2.762,37,3.521,38,3.521,39,3.521,40,3.521,41,3.521,42,6.091,43,3.197,44,3.843,45,3.521,46,3.521,47,2.762,48,3.197,49,2.254,50,3.521,51,3.521,52,2.046,53,2.254,54,2.254,55,2.526,56,2.254,57,1.829,58,2.343,59,1.782,60,1.365,61,1.898,62,2.762,63,2.464,64,2.762,65,3.521,66,1.179,67,3.521,68,3.521,69,2.236,70,1.972,71,2.955]],["component/7",[72,1.05]],["title/8-1",[73,33.879,74,33.879]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[75,41.017]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[76,41.017]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8",[15,22.88,77,21.835,78,25.402]],["name/8",[15,0.772,77,0.737,78,0.857]],["text/8",[5,1.797,55,2.651,59,2.185,63,1.702,73,5.489,74,5.489,75,5.377,76,4.622,77,3.241,78,3.361,79,2.042,80,1.909,81,4.13,82,6.975,83,3.868,84,3.974,85,2.433,86,2.433,87,4.549,88,2.433,89,2.433,90,2.433,91,1.102,92,2.363,93,2.433,94,2.433,95,2.433,96,2.433,97,2.433,98,2.433,99,2.433,100,1.264,101,2.433,102,3.136,103,2.433,104,1.619,105,1.909]],["component/8",[72,1.05]],["title/9-1",[14,29.822,106,26.862]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9",[106,32.521]],["name/9",[106,1.685]],["text/9",[15,3.621,57,2.827,58,4.059,59,1.721,60,2.109,62,3.224,63,4.268,64,3.224,69,2.61,70,2.302,71,3.449,106,4.618,107,1.746,108,5.441,109,4.11,110,4.567,111,5.441,112,4.941,113,5.441,114,4.941,115,4.11]],["component/9",[72,1.05]],["title/10-1",[16,18.197,84,18.197,116,22.122,117,17.453]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10",[16,20.895,84,20.895,116,25.402]],["name/10",[16,0.967,84,0.967]],["text/10",[13,1.768,14,1.665,16,2.634,19,1.665,22,1.891,23,1.37,55,1.314,59,2.324,60,0.873,70,1.262,77,1.431,83,2.343,84,3.891,116,3.619,117,1.314,118,6.402,119,2.254,120,2.254,121,2.254,122,2.254,123,1.891,124,3.521,125,4.334,126,2.254,127,2.046,128,2.046,129,2.254,130,2.254,131,1.5,132,1.431,133,1.768,134,3.521,135,2.254,136,2.046,137,2.254,138,2.254,139,1.891,140,3.111,141,2.254,142,1.891,143,1.577,144,1.768,145,2.254,146,1.891,147,2.254,148,1.891,149,2.254,150,1.665,151,2.254,152,2.254,153,4.334,154,3.521,155,2.254,156,2.254,157,2.254,158,2.254,159,3.521,160,2.254,161,1.577,162,2.254,163,2.254,164,2.254,165,3.521,166,1.577,167,2.254,168,2.254,169,2.254,170,2.254,171,1.768,172,2.254,173,3.521,174,1.768,175,1.665,176,2.254,177,2.254]],["component/10",[72,1.05]],["title/11-1",[178,41.017]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[179,41.017]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[180,38.336]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11",[181,28.857,182,28.857,183,25.402]],["name/11",[183,1.176,184,1.336]],["text/11",[19,1.642,36,3.815,59,1.102,60,1.35,61,1.198,92,2.232,131,1.479,143,1.555,178,4.702,179,4.081,180,4.143,181,2.924,182,1.866,183,4.479,184,4.432,185,2.223,186,2.223,187,2.223,188,2.223,189,4.296,190,2.223,191,1.866,192,1.198,193,2.223,194,2.223,195,2.018,196,2.924,197,2.018,198,2.223,199,2.223,200,2.223,201,5.281,202,3.484,203,3.484,204,3.484,205,5.856,206,4.702,207,3.484,208,3.484,209,3.484,210,4.296,211,3.484,212,2.437,213,3.484,214,3.484,215,3.484,216,4.862,217,2.437,218,3.484,219,3.484,220,3.484,221,3.484,222,3.484,223,2.018,224,2.223,225,1.866,226,3.163,227,3.484,228,3.484,229,3.484,230,2.437,231,3.163]],["component/11",[72,1.05]],["title/12-1",[66,13.514,232,23.527]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[66,11.511,232,20.04,233,25.402]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12",[66,13.514,232,23.527]],["name/12",[66,0.533,232,0.928]],["text/12",[57,2.544,58,3.748,59,2.227,66,2.038,91,2.758,100,3.163,104,4.052,230,2.462,232,2.854,233,2.599,234,4.999,235,4.896,236,6.089,237,4.11]],["component/12",[72,1.05]],["title/13-1",[66,13.514,238,24.531]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[66,11.511,233,25.402,238,20.895]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13",[66,13.514,238,24.531]],["name/13",[66,0.533,238,0.967]],["text/13",[57,2.65,58,3.866,59,2.256,66,1.945,161,4.369,225,6.348,237,4.281,238,2.269,239,3.966,240,5.101,241,6.244]],["component/13",[72,1.05]],["title/14-1",[66,13.514,232,23.527]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[66,11.511,232,20.04,233,25.402]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14",[66,13.514,232,23.527]],["name/14",[66,0.533,232,0.928]],["text/14",[57,2.544,58,3.748,59,2.227,66,2.038,91,2.758,100,3.163,104,4.052,230,2.462,232,2.854,233,2.599,234,4.999,235,4.896,236,6.089,237,4.11]],["component/14",[72,1.05]],["title/15-1",[66,13.514,238,24.531]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[66,11.511,233,25.402,238,20.895]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15",[66,13.514,238,24.531]],["name/15",[66,0.533,238,0.967]],["text/15",[57,2.65,58,3.866,59,2.256,66,1.945,161,4.369,225,6.348,237,4.281,238,2.269,239,3.966,240,5.101,241,6.244]],["component/15",[72,1.05]],["title/16-1",[1,20.234,69,25.635]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[0,18.67,1,11.93,242,19.975,243,19.975,244,19.975,245,19.975]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[0,20.804,1,13.294,196,22.259,246,26.52,247,26.52]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[1,13.294,117,15.457,140,16.842,248,22.259,249,19.593]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[1,13.294,132,16.842,192,14.295,249,19.593,250,22.259]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[1,15.01,192,16.14,249,22.122,251,27.189]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16",[242,22.259,243,22.259,244,22.259,245,22.259,252,30.222]],["name/16",[2,2.299]],["text/16",[0,1.938,1,3.506,60,1.779,61,2.773,69,1.569,72,1.895,91,1.119,117,2.998,140,3.267,143,1.728,150,2.793,166,1.728,171,1.938,180,2.965,191,4.317,192,2.475,196,3.172,197,2.243,206,3.172,242,3.854,243,3.854,244,4.317,245,4.317,246,4.591,247,2.47,248,4.317,250,2.073,253,4.308,254,2.965,255,2.47,256,2.037,257,2.815,258,2.243,259,2.47,260,2.815,261,2.815,262,2.815,263,2.243,264,1.825,265,2.815,266,4.308,267,2.815,268,2.815,269,2.073,270,3.78,271,3.056,272,2.47,273,2.815,274,2.815,275,2.815,276,1.728,277,3.432,278,5.144,279,2.815,280,2.815,281,2.815,282,2.47,283,2.815]],["component/16",[277,1.903]],["title/17-1",[1,20.234,69,25.635]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[1,13.294,117,15.457,140,16.842,248,22.259,249,19.593]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[1,13.294,132,16.842,192,14.295,249,19.593,250,22.259]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[1,15.01,192,16.14,249,22.122,251,27.189]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17",[256,18.533,271,22.88,284,28.857]],["name/17",[284,2.126]],["text/17",[1,3.507,61,3.242,69,2.172,91,1.549,117,2.798,140,3.819,191,2.87,192,2.99,239,2.172,242,2.87,243,2.87,244,4.029,245,4.655,248,5.047,250,2.87,255,3.42,256,2.587,258,4.359,270,3.42,271,3.691,276,2.393,278,6.014,282,3.42,285,3.897,286,3.897,287,5.47,288,3.897,289,3.897,290,6.321,291,3.897,292,3.897]],["component/17",[277,1.903]],["title/18-1",[35,24.057,293,24.057,294,17.861]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[100,17.861,295,34.381,296,25.402]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[293,18.556,297,17.649,298,13.777,299,20.804,300,22.259]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18-4",[234,17.649,293,18.556,297,17.649,301,30.222,302,24.08]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["title/18-5",[293,16.652,297,15.838,298,12.363,303,23.799,304,21.61,305,21.61]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["title/18-6",[293,20.951,306,34.124,307,34.124,308,19.927]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["title/18",[293,28.243,294,20.969]],["name/18",[309,2.886]],["text/18",[25,0.636,35,0.567,57,1.681,59,2.32,60,1.12,61,0.437,66,0.493,70,0.454,91,1.309,92,1.501,100,1.294,104,0.981,107,1.058,123,0.681,133,1.954,139,0.681,166,1.417,212,1.031,217,1.449,234,1.347,239,2.701,254,0.636,256,0.794,264,0.599,271,0.981,293,3.339,294,0.765,296,3.526,297,0.54,298,1.052,299,1.588,300,0.681,302,1.839,304,1.338,305,1.338,308,2.354,310,1.156,311,3.117,312,1.031,313,1.286,314,2.795,315,3.438,316,3.939,317,1.452,318,1.156,319,1.089,320,1.089,321,2.585,322,0.859,323,1.052,324,1.231,325,0.599,326,1.588,327,1.588,328,1.338,329,0.736,330,1.679,331,1.338,332,1.839,333,1.839,334,1.347,335,1.417,336,1.954,337,1.679,338,0.981,339,3.293,340,0.924,341,0.924,342,0.636,343,1.679,344,0.811,345,0.736,346,0.636,347,1.981,348,0.924,349,0.924,350,2.89,351,3.293,352,0.736,353,2.091,354,0.811,355,0.924,356,0.924,357,0.924,358,0.736,359,0.924,360,0.924,361,2.025,362,1.588,363,1.679,364,2.839,365,0.924,366,0.924,367,0.924,368,0.924,369,0.924,370,1.338,371,0.924,372,2.025,373,2.308,374,0.811,375,0.811,376,1.473,377,0.636,378,0.681,379,0.811,380,0.924,381,0.924,382,1.679,383,0.736,384,1.338,385,0.736,386,1.237,387,0.924,388,0.736,389,1.089,390,1.839,391,0.811,392,0.493,393,0.811,394,0.515,395,0.736,396,0.736,397,0.924,398,0.811,399,2.307,400,0.924,401,0.924,402,1.588,403,1.679,404,1.473,405,1.473,406,1.473,407,0.736,408,0.924,409,1.679,410,0.924,411,0.924,412,0.924,413,0.924,414,1.496,415,0.681,416,0.811,417,0.567,418,0.811,419,0.811,420,0.636,421,0.924,422,0.924,423,0.924,424,1.237,425,1.237,426,0.924,427,0.924,428,1.031,429,0.924]],["component/18",[430,0.981]],["title/19",[373,17.861,392,20.895,431,31.219]],["name/19",[432,2.886]],["text/19",[59,2.318,60,1.313,83,1.427,91,0.971,100,1.114,107,2.544,174,1.683,256,1.156,264,1.585,269,1.8,294,1.114,297,1.427,298,1.76,314,1.76,317,1.974,323,3.627,324,2.058,326,1.683,338,2.254,347,1.897,373,2.181,392,2.058,394,2.666,433,1.948,434,2.145,435,1.948,436,1.948,437,3.632,438,1.948,439,2.145,440,2.444,441,2.145,442,2.444,443,1.948,444,2.145,445,4.197,446,2.444,447,1.948,448,2.145,449,1.948,450,2.444,451,6.824,452,2.145,453,3.86,454,2.145,455,3.86,456,5.433,457,5.433,458,2.444,459,2.145,460,1.8,461,2.444,462,1.585,463,2.145,464,1.948,465,2.444,466,2.444,467,2.502,468,1.683,469,2.145,470,1.501,471,2.145,472,2.444,473,2.444]],["component/19",[430,0.981]],["title/20",[294,17.861,333,31.219,474,31.219]],["name/20",[475,2.886]],["text/20",[57,0.959,59,2.194,60,1.471,70,1.034,81,1.676,91,1.719,92,2.272,100,0.959,102,3.186,107,0.784,132,1.172,144,2.355,148,1.549,175,1.363,212,1.291,217,1.505,234,1.228,239,1.172,264,1.363,271,1.228,272,1.845,294,1.56,295,3.002,296,2.218,308,1.228,310,2.978,311,2.889,313,1.172,314,1.56,315,2.526,316,3.721,317,1.75,318,1.448,319,1.363,320,1.363,321,2.889,322,1.076,323,3.203,324,1.121,327,1.448,331,1.676,332,1.676,333,4.37,334,1.228,335,1.291,336,2.355,345,1.676,346,1.448,347,1.681,350,1.845,352,1.676,353,2.52,358,1.676,373,2.272,376,1.845,384,3.971,385,1.676,388,1.676,392,2.658,394,1.172,417,1.291,443,1.676,460,3.186,462,1.363,467,1.363,474,3.446,476,2.103,477,3.421,478,1.845,479,3.796,480,2.103,481,1.676,482,1.676,483,1.676,484,2.103,485,2.103,486,2.103,487,1.845,488,1.448,489,2.103,490,2.103,491,2.103,492,2.103,493,2.103,494,2.103,495,3.421,496,2.103,497,2.103,498,1.549,499,2.103,500,1.845,501,1.549,502,1.845,503,2.103]],["component/20",[430,0.981]],["title/21",[294,25.387]],["name/21",[504,2.886]],["text/21",[25,1.626,57,2.429,59,2.225,60,0.803,91,0.938,92,2.132,107,2.169,128,2.993,132,2.093,150,1.531,174,1.626,192,1.776,212,1.45,217,1.039,256,1.117,264,1.531,276,2.306,294,1.712,296,2.435,298,1.076,308,1.379,310,2.585,311,3.044,312,1.45,313,1.316,314,3.371,315,2.731,316,3.871,317,2.726,318,1.626,319,1.531,320,1.531,321,1.846,322,1.208,323,2.824,324,2.494,325,1.531,326,2.585,327,1.626,328,1.882,329,1.882,334,1.379,335,1.45,336,2.585,347,1.846,373,2.652,386,1.739,390,4.635,392,2.003,394,2.97,395,2.993,414,1.531,420,1.626,428,1.45,431,1.882,449,1.882,498,2.766,505,3.296,506,2.361,507,2.072,508,2.072,509,2.361,510,2.072,511,2.072,512,2.361,513,2.072,514,2.361]],["component/21",[430,0.981]],["title/22",[107,14.607,437,24.057,515,34.381]],["name/22",[516,2.886]],["text/22",[8,1.553,47,2.213,55,1.644,59,1.904,60,1.395,61,0.922,64,1.341,66,1.665,91,0.774,92,0.888,100,0.888,107,3.032,110,1.435,131,1.138,171,1.341,217,0.857,256,1.94,269,1.435,276,1.973,297,1.877,298,2.17,311,2.016,312,1.196,314,2.401,317,0.997,321,0.958,322,0.997,323,1.465,324,1.714,325,1.263,338,1.877,344,3.6,347,0.958,370,2.561,373,2.401,383,1.553,392,3.023,393,1.71,394,1.086,414,1.263,417,1.196,424,1.435,425,1.435,428,1.973,431,1.553,433,1.553,435,1.553,436,1.553,437,3.989,438,2.561,443,2.561,444,1.71,445,2.82,460,4.175,467,2.084,468,1.341,470,1.196,483,3.269,515,4.622,517,2.824,518,1.949,519,1.435,520,1.435,521,1.435,522,1.949,523,1.71,524,1.949,525,4.103,526,1.949,527,1.71,528,1.949,529,1.949,530,1.949,531,1.949,532,1.949,533,1.949,534,1.435,535,1.949,536,3.214,537,1.71,538,1.553,539,3.214,540,1.71,541,2.82,542,1.949,543,1.949,544,1.949,545,1.949,546,1.949,547,3.214,548,1.71,549,1.949,550,1.949,551,1.71,552,1.949,553,1.949,554,1.71,555,1.949,556,1.949,557,1.949]],["component/22",[430,0.981]],["title/23",[317,23.527,558,40.364]],["name/23",[559,2.886]],["text/23",[44,2.272,55,0.74,59,2.374,60,1.509,61,0.685,83,0.845,91,0.575,100,0.66,105,0.996,107,0.54,117,0.74,133,0.996,161,3.378,192,1.183,217,0.637,239,3.066,263,4.384,264,1.621,271,2.295,294,0.66,298,0.66,311,1.229,313,1.839,314,3.027,315,3.492,317,2.662,320,2.14,321,2.18,322,0.74,323,1.791,338,3.707,346,0.996,352,1.153,353,2.894,372,1.27,373,1.791,377,0.996,378,1.841,388,1.153,392,1.333,396,1.992,402,3.342,417,0.889,420,0.996,447,1.153,488,0.996,505,1.27,534,1.066,560,1.27,561,1.27,562,1.27,563,4.765,564,1.447,565,1.447,566,1.447,567,1.447,568,1.27,569,1.447,570,1.447,571,1.27,572,1.447,573,1.27,574,1.447,575,1.447,576,1.153,577,1.27,578,1.447,579,6.035,580,3.131,581,3.448,582,3.93,583,3.448,584,5.502,585,2.63,586,2.63,587,2.63,588,1.447,589,1.447,590,1.447,591,1.447,592,1.447,593,1.992,594,1.992,595,1.447,596,1.447]],["component/23",[430,0.981]],["title/24-1",[66,13.514,298,20.969]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[560,40.364,561,40.364]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24",[66,11.511,107,14.607,437,24.057]],["name/24",[597,2.886]],["text/24",[35,2.057,59,2.281,61,1.584,66,1.878,79,1.509,83,1.196,92,1.527,107,2.285,127,2.669,132,1.142,142,1.509,175,1.328,192,1.584,217,1.869,230,1.258,256,0.969,271,1.956,294,1.527,297,1.196,298,0.934,311,2.659,314,2.237,316,2.368,317,2.767,319,3.181,321,2.659,322,1.713,323,1.937,324,2.617,338,1.956,347,1.007,354,3.728,362,1.41,373,1.527,386,1.509,389,1.328,394,2.368,395,2.669,402,2.306,414,1.328,428,2.057,460,4.277,464,2.669,468,1.41,470,1.258,471,1.798,483,1.632,501,2.467,520,1.509,521,1.509,538,1.632,551,2.939,598,2.939,599,2.049,600,1.798,601,1.632,602,2.049,603,2.049,604,2.049,605,4.907,606,2.049,607,4.907,608,4.907,609,4.907,610,3.35,611,3.35,612,3.35,613,2.049,614,2.049,615,2.049,616,2.049,617,3.35,618,2.939,619,2.049,620,2.049,621,2.049,622,2.049,623,2.049,624,4.249]],["component/24",[430,0.981]],["title/25",[470,28.243,517,31.665]],["name/25",[625,2.886]],["text/25",[55,1.469,59,2.324,61,1.359,70,1.412,80,1.977,105,1.977,107,1.631,217,1.264,234,1.678,311,2.15,314,3.362,316,1.601,321,2.604,322,1.469,323,1.994,335,1.764,338,4.079,347,2.15,362,1.977,373,1.994,389,2.836,392,1.532,396,2.289,402,3.648,414,1.862,417,1.764,452,3.839,454,3.839,462,1.862,517,4.956,563,5.565,576,2.289,626,2.873,627,2.873,628,2.521,629,2.289,630,2.289,631,2.289,632,2.521,633,4.375,634,4.375,635,2.873,636,5.924,637,2.521,638,2.873,639,2.521,640,2.873,641,2.873,642,2.873]],["component/25",[430,0.981]],["title/26",[470,28.243,594,36.652]],["name/26",[593,2.299]],["text/26",[44,2.145,59,2.371,60,0.638,91,2.344,100,2.12,104,3.443,107,1.161,131,1.096,161,4.055,217,1.37,239,3.68,254,1.292,263,2.482,298,0.855,311,1.531,312,1.152,313,2.592,314,2.537,315,3.74,321,1.531,322,0.96,323,0.855,334,1.096,335,1.152,338,2.716,346,1.292,362,1.292,373,0.855,377,1.292,392,1.001,402,3.831,407,1.495,424,1.382,463,1.646,488,1.292,534,1.382,562,1.646,563,3.706,573,1.646,579,5.174,580,1.495,581,4.081,583,3.505,585,2.482,586,2.482,587,2.482,593,3.183,594,3.183,630,1.495,631,1.495,643,1.876,644,1.876,645,1.382,646,1.876,647,4.651,648,5.897,649,1.876,650,1.876,651,4.651,652,3.115,653,1.876,654,5.566,655,1.876,656,1.876]],["component/26",[430,0.981]],["title/27",[470,28.243,657,40.364]],["name/27",[658,2.532]],["text/27",[35,1.118,48,1.451,59,2.34,60,1.33,80,1.254,91,0.724,92,2.5,100,0.83,107,0.679,131,1.063,166,1.118,175,1.181,217,1.337,239,2.179,256,1.437,276,1.118,299,2.692,300,2.88,311,1.922,313,2.544,314,2.314,315,2.964,316,3.056,321,1.922,323,2.081,325,1.181,331,1.451,332,1.451,342,2.092,347,0.895,358,1.451,362,1.254,373,1.783,374,3.431,375,1.598,377,2.092,379,2.667,389,1.181,407,1.451,441,6.142,459,1.598,462,1.181,469,1.598,470,1.118,479,1.598,482,1.451,488,1.254,519,2.88,630,1.451,639,1.598,645,1.341,657,2.667,658,3.431,659,1.821,660,1.598,661,1.821,662,1.821,663,3.116,664,1.598,665,3.431,666,1.821,667,1.821,668,3.911,669,1.821,670,3.911,671,1.821,672,1.598,673,1.821,674,1.821,675,5.075,676,1.821,677,1.821,678,1.821,679,4.565,680,3.039,681,3.039,682,3.039,683,3.039,684,3.039,685,3.039,686,1.598,687,1.821,688,1.821,689,1.451,690,1.598,691,1.821,692,1.598,693,1.598,694,4.565,695,1.821,696,3.911,697,1.821,698,1.821,699,1.821]],["component/27",[430,0.981]],["title/28",[60,10.277,107,11.267,298,13.777,425,22.259,437,18.556]],["name/28",[700,2.886]],["text/28",[59,1.875,60,2.459,61,2.092,77,2.465,91,1.758,92,2.016,100,2.016,104,2.583,114,3.524,132,3.326,142,3.258,254,4.108,298,2.721,317,3.053,323,2.721,324,3.856,347,3.554,394,4.03,425,4.975,428,2.716,448,3.881,576,4.755,701,5.237,702,3.881]],["component/28",[430,0.981]],["title/29",[107,17.149,437,28.243]],["name/29",[703,2.886]],["text/29",[44,1.115,47,1.115,59,2.324,60,0.936,70,1.353,92,0.738,107,2.052,150,1.785,217,0.713,230,0.995,234,0.946,256,1.302,259,2.416,269,1.193,294,0.738,298,1.637,299,4.159,311,1.353,312,0.995,313,2.645,314,1.637,316,2.876,321,0.796,322,0.829,323,1.255,324,0.864,338,2.097,347,0.796,373,1.637,377,1.115,378,1.193,389,1.05,392,1.915,417,0.995,433,1.291,434,1.422,435,1.291,436,1.291,437,2.205,438,1.291,449,2.194,462,2.328,467,1.05,487,1.422,520,1.193,521,1.193,537,1.422,568,1.422,577,1.422,580,1.291,601,1.291,629,2.194,645,1.193,660,1.422,665,3.151,672,3.151,692,3.717,702,1.422,704,2.754,705,1.62,706,2.754,707,1.62,708,4.236,709,5.263,710,1.62,711,4.747,712,1.62,713,4.747,714,5.506,715,1.62,716,4.747,717,5.795,718,1.62,719,1.62,720,1.193,721,5.085,722,3.591,723,3.591,724,4.236,725,5.795,726,3.717,727,1.62,728,1.62,729,2.754,730,1.62,731,1.291,732,2.754,733,1.62,734,1.62,735,1.62,736,1.62,737,1.62,738,1.62,739,1.62,740,1.422,741,1.62,742,1.62]],["component/29",[430,0.981]],["title/30",[294,20.969,296,29.822]],["name/30",[743,2.886]],["text/30",[6,1.669,55,1.39,57,2.624,59,2.216,91,1.08,92,1.239,107,1.013,117,1.39,123,2.002,143,1.669,166,1.669,212,1.669,217,1.845,256,1.286,294,1.239,296,4.44,297,1.588,308,1.588,310,2.887,311,3.23,312,1.669,313,1.515,314,3.379,315,2.99,316,3.942,317,2.145,318,1.871,319,1.762,320,1.762,321,1.336,322,1.39,323,2.996,324,2.731,325,1.762,326,2.887,327,1.871,328,2.166,329,2.166,334,1.588,335,1.669,336,2.887,342,1.871,347,1.336,353,2.002,373,1.239,394,1.515,420,1.871,428,2.575,468,1.871,478,2.385,501,2.002,510,2.385,519,2.002,523,2.385,600,3.68,689,4.586,744,2.719,745,2.719,746,2.719,747,2.719,748,2.385,749,2.385]],["component/30",[430,0.981]],["title/31",[294,20.969,308,26.862]],["name/31",[750,2.886]],["text/31",[55,1.154,57,1.651,59,2.257,60,1.231,70,1.78,91,0.897,92,1.651,107,0.841,144,2.493,192,1.067,212,1.385,217,0.992,234,1.318,256,1.067,271,1.318,276,1.385,298,2.767,299,1.553,300,2.667,302,1.798,304,2.886,305,2.886,308,4.1,310,2.493,311,2.552,312,1.385,313,1.257,314,2.767,315,3.032,316,3.912,317,1.852,318,1.553,319,1.463,320,1.463,321,1.78,322,1.154,323,2.592,324,1.203,325,1.463,326,1.553,327,1.553,334,2.649,335,1.385,336,3.123,342,2.493,347,2.23,370,2.886,373,2.068,384,1.798,386,1.662,390,2.886,394,1.257,404,1.98,405,1.98,406,1.98,414,1.463,418,1.98,464,1.798,467,1.463,481,1.798,498,1.662,511,1.98,520,2.667,521,2.667,628,1.98,689,1.798,709,1.798,726,1.98,748,3.178,749,3.178,751,2.256,752,2.256,753,2.256,754,2.256,755,2.256,756,2.256,757,2.256,758,2.256,759,2.256,760,2.256,761,2.256]],["component/31",[430,0.981]],["title/32",[23,24.531,762,40.364]],["name/32",[284,2.126]],["text/32",[23,3.096,59,2.133,762,5.095,763,5.095,764,4.626,765,5.806,766,5.806,767,5.806,768,5.095,769,5.806,770,5.806,771,5.806,772,5.806,773,5.095,774,5.806]],["component/32",[430,0.981]],["title/33-1",[6,34.193]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[517,31.665,775,26.862]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[140,31.036]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33-4",[776,40.364,777,40.364]],["name/33-4",[]],["text/33-4",[]],["component/33-4",[]],["title/33-5",[140,19.016,334,19.927,778,29.943,779,29.943]],["name/33-5",[]],["text/33-5",[]],["component/33-5",[]],["title/33-6",[731,36.652,780,40.364]],["name/33-6",[]],["text/33-6",[]],["component/33-6",[]],["title/33-7",[415,33.879,775,26.862]],["name/33-7",[]],["text/33-7",[]],["component/33-7",[]],["title/33-8",[720,33.879,781,40.364]],["name/33-8",[]],["text/33-8",[]],["component/33-8",[]],["title/33-9",[720,33.879,780,40.364]],["name/33-9",[]],["text/33-9",[]],["component/33-9",[]],["title/33-10",[415,28.857,782,39.182,783,34.381]],["name/33-10",[]],["text/33-10",[]],["component/33-10",[]],["title/33-11",[775,26.862,784,33.879]],["name/33-11",[]],["text/33-11",[]],["component/33-11",[]],["title/33-12",[775,22.88,785,31.219,786,31.219]],["name/33-12",[]],["text/33-12",[]],["component/33-12",[]],["title/33-13",[60,8.364,775,22.653,784,18.116,785,19.599,786,19.599,787,21.584]],["name/33-13",[]],["text/33-13",[]],["component/33-13",[]],["title/33-14",[10,24.08,775,17.649,784,22.259,788,30.222,789,26.52]],["name/33-14",[]],["text/33-14",[]],["component/33-14",[]],["title/33",[23,24.531,775,26.862]],["name/33",[284,2.126]],["text/33",[1,0.289,6,0.403,9,0.524,13,0.452,20,0.524,23,0.35,25,0.452,35,0.403,36,0.844,43,0.977,47,0.844,52,0.524,57,0.3,59,0.806,60,1.094,61,1.522,62,0.452,63,1.059,66,0.507,69,2.095,70,0.603,79,0.484,80,0.844,83,0.384,91,0.487,100,0.559,102,0.484,104,0.384,105,0.452,107,0.643,110,0.484,112,0.524,117,0.336,131,0.384,132,0.366,133,0.452,136,1.724,139,1.881,140,2.742,144,0.452,146,0.484,148,0.484,150,0.795,161,0.753,166,0.753,171,1.489,174,1.758,175,0.795,192,0.311,195,0.524,206,0.903,217,0.952,223,0.977,226,0.524,230,0.403,231,0.524,232,0.336,239,0.366,251,1.374,254,1.187,256,1.89,258,0.524,276,0.403,303,1.513,308,0.384,314,0.3,334,1.491,342,0.452,345,0.977,346,0.844,361,0.577,378,0.484,383,0.977,385,0.524,389,1.118,391,0.577,398,1.076,415,1.881,416,0.577,417,0.753,419,0.577,420,1.998,424,0.484,428,1.059,439,0.577,447,1.374,462,2.086,467,0.795,468,0.452,474,1.374,481,1.724,482,0.977,488,1.758,498,1.27,500,1.076,501,0.903,502,0.577,507,1.076,508,0.577,513,2.241,517,1.758,519,1.593,527,3.299,534,0.903,538,0.977,540,0.577,541,0.577,548,1.513,554,1.076,558,1.513,571,0.577,585,0.977,586,0.524,587,0.524,598,0.577,601,0.977,618,0.577,629,0.977,631,2.563,632,0.577,637,0.577,645,2.579,663,0.977,664,1.076,686,0.577,690,0.577,693,1.513,701,2.241,709,0.524,720,0.484,721,0.577,731,4.345,740,0.577,763,0.577,768,1.076,773,1.076,775,4.138,776,0.577,777,0.577,778,5.918,779,1.513,781,1.076,783,0.577,784,3.102,785,2.035,786,2.035,787,0.577,789,0.577,790,2.554,791,3.76,792,0.657,793,0.657,794,0.657,795,0.657,796,1.226,797,0.657,798,2.903,799,0.657,800,4.211,801,0.657,802,1.226,803,1.724,804,0.657,805,0.657,806,2.554,807,3.501,808,1.226,809,2.164,810,0.657,811,2.164,812,2.164,813,1.724,814,3.501,815,1.226,816,1.226,817,0.657,818,0.657,819,0.657,820,0.657,821,0.657,822,0.657,823,0.657,824,0.657,825,3.217,826,2.554,827,1.226,828,1.226,829,0.657,830,0.657,831,0.657,832,0.657,833,1.226,834,1.724,835,0.657,836,2.164,837,1.724,838,1.226,839,0.657,840,0.657,841,0.657,842,0.657,843,0.657,844,0.657,845,3.995,846,0.657,847,0.657,848,0.657,849,0.657,850,0.657,851,0.657,852,0.657,853,0.657,854,0.657,855,0.657,856,0.657,857,0.657,858,0.657,859,0.657,860,0.657,861,0.657,862,0.657,863,0.657,864,0.657,865,0.657,866,0.657,867,1.226,868,0.657,869,0.657,870,1.724,871,2.554,872,0.657,873,1.226,874,1.226,875,1.226,876,1.226,877,1.226,878,0.657,879,0.657,880,0.657,881,0.657,882,0.657,883,1.226,884,0.657,885,1.226,886,0.657,887,0.657,888,0.657,889,0.657,890,0.657,891,0.657,892,0.657,893,0.657,894,1.226,895,1.724,896,0.657,897,0.657,898,1.226,899,0.657,900,0.657,901,0.657,902,0.657,903,2.164,904,2.164,905,1.724,906,1.724,907,1.724,908,1.226,909,1.226,910,0.657,911,0.657,912,0.657,913,0.657,914,1.226,915,0.657,916,0.657,917,0.657,918,0.657,919,0.657,920,0.657,921,0.657,922,0.657,923,1.226,924,1.226,925,0.657,926,0.657,927,0.657,928,1.226,929,2.554,930,0.657,931,1.724,932,0.657,933,0.657,934,0.657,935,0.657,936,0.657,937,0.657,938,0.657,939,0.657,940,1.724,941,1.724,942,1.226,943,0.657,944,0.657,945,0.657,946,0.657,947,0.657,948,1.226,949,0.657,950,0.657,951,0.657,952,0.657,953,0.657,954,0.657,955,0.657,956,0.657,957,0.657,958,0.657,959,0.657,960,0.657,961,0.657,962,0.657,963,0.657,964,0.657]],["component/33",[430,0.981]],["title/34",[23,24.531,764,36.652]],["name/34",[2,2.299]],["text/34",[23,4.023,143,3.934,146,4.719,663,5.105,764,5.105,965,6.407,966,6.407]],["component/34",[430,0.981]]],"invertedIndex":[["",{"_index":59,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{}},"component":{}}],["0",{"_index":581,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["1",{"_index":91,"title":{},"name":{},"text":{"3":{},"8":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"30":{},"31":{},"33":{}},"component":{}}],["1.0",{"_index":282,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{}}],["10;11;12",{"_index":610,"title":{},"name":{},"text":{"24":{}},"component":{}}],["12",{"_index":648,"title":{},"name":{},"text":{"26":{}},"component":{}}],["1;2;3",{"_index":608,"title":{},"name":{},"text":{"24":{}},"component":{}}],["2",{"_index":100,"title":{"18-2":{}},"name":{},"text":{"3":{},"8":{},"12":{},"14":{},"18":{},"19":{},"20":{},"22":{},"23":{},"26":{},"27":{},"28":{},"33":{}},"component":{}}],["2a",{"_index":235,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{}}],["2b",{"_index":236,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{}}],["3",{"_index":104,"title":{},"name":{},"text":{"3":{},"8":{},"12":{},"14":{},"18":{},"26":{},"28":{},"33":{}},"component":{}}],["4",{"_index":361,"title":{},"name":{},"text":{"18":{},"33":{}},"component":{}}],["40",{"_index":827,"title":{},"name":{},"text":{"33":{}},"component":{}}],["42",{"_index":452,"title":{},"name":{},"text":{"19":{},"25":{}},"component":{}}],["43",{"_index":454,"title":{},"name":{},"text":{"19":{},"25":{}},"component":{}}],["5",{"_index":855,"title":{},"name":{},"text":{"33":{}},"component":{}}],["6",{"_index":927,"title":{},"name":{},"text":{"33":{}},"component":{}}],["7",{"_index":930,"title":{},"name":{},"text":{"33":{}},"component":{}}],["8",{"_index":932,"title":{},"name":{},"text":{"33":{}},"component":{}}],["_",{"_index":692,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["_*monospac",{"_index":97,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__**``acter``**__s__",{"_index":99,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__**acter**__s__",{"_index":90,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__``acter``__s__",{"_index":96,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__acter__s__",{"_index":88,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["_bold",{"_index":89,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["_ital",{"_index":86,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["_monospac",{"_index":95,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["a,b",{"_index":331,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["a.k.a",{"_index":588,"title":{},"name":{},"text":{"23":{}},"component":{}}],["a;b",{"_index":360,"title":{},"name":{},"text":{"18":{}},"component":{}}],["abbrev",{"_index":813,"title":{},"name":{},"text":{"33":{}},"component":{}}],["abov",{"_index":407,"title":{},"name":{},"text":{"18":{},"26":{},"27":{}},"component":{}}],["accept",{"_index":617,"title":{},"name":{},"text":{"24":{}},"component":{}}],["access",{"_index":259,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{}}],["actual",{"_index":872,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ad",{"_index":551,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["add",{"_index":79,"title":{},"name":{},"text":{"3":{},"8":{},"24":{},"33":{}},"component":{}}],["added=%a",{"_index":611,"title":{},"name":{},"text":{"24":{}},"component":{}}],["addedm",{"_index":612,"title":{},"name":{},"text":{"24":{}},"component":{}}],["admonit",{"_index":4,"title":{"2":{},"7":{},"2-1":{},"2-2":{},"2-3":{},"7-1":{},"7-2":{},"7-3":{}},"name":{"2":{},"7":{}},"text":{"2":{},"7":{}},"component":{}}],["affect",{"_index":837,"title":{},"name":{},"text":{"33":{}},"component":{}}],["again",{"_index":934,"title":{},"name":{},"text":{"33":{}},"component":{}}],["aka",{"_index":261,"title":{},"name":{},"text":{"16":{}},"component":{}}],["alia",{"_index":819,"title":{},"name":{},"text":{"33":{}},"component":{}}],["alias.graph",{"_index":821,"title":{},"name":{},"text":{"33":{}},"component":{}}],["alic",{"_index":672,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["allow",{"_index":689,"title":{},"name":{},"text":{"27":{},"30":{},"31":{}},"component":{}}],["alreadi",{"_index":461,"title":{},"name":{},"text":{"19":{}},"component":{}}],["alway",{"_index":132,"title":{"16-5":{},"17-3":{}},"name":{},"text":{"5":{},"10":{},"20":{},"21":{},"24":{},"28":{},"33":{}},"component":{}}],["amend",{"_index":867,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ampersand",{"_index":152,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["annoy",{"_index":627,"title":{},"name":{},"text":{"25":{}},"component":{}}],["anoth",{"_index":276,"title":{},"name":{},"text":{"16":{},"17":{},"21":{},"22":{},"27":{},"31":{},"33":{}},"component":{}}],["answer",{"_index":523,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["antora",{"_index":196,"title":{"16-3":{}},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{}}],["antora.yml",{"_index":194,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["anyth",{"_index":511,"title":{},"name":{},"text":{"21":{},"31":{}},"component":{}}],["apostroph",{"_index":153,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["appli",{"_index":598,"title":{},"name":{},"text":{"24":{},"33":{}},"component":{}}],["approach",{"_index":372,"title":{},"name":{},"text":{"18":{},"23":{}},"component":{}}],["appropri",{"_index":123,"title":{},"name":{},"text":{"5":{},"10":{},"18":{},"30":{}},"component":{}}],["architectur",{"_index":243,"title":{"16":{},"16-2":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["argument",{"_index":789,"title":{"33-14":{}},"name":{},"text":{"33":{}},"component":{}}],["arrow",{"_index":173,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["asciidoc",{"_index":265,"title":{},"name":{},"text":{"16":{}},"component":{}}],["asciidoctor",{"_index":19,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"10":{},"11":{}},"component":{}}],["assign",{"_index":272,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["associ",{"_index":438,"title":{},"name":{},"text":{"19":{},"22":{},"29":{}},"component":{}}],["async",{"_index":749,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["attempt",{"_index":646,"title":{},"name":{},"text":{"26":{}},"component":{}}],["attent",{"_index":12,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["attribut",{"_index":188,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["automat",{"_index":253,"title":{},"name":{},"text":{"16":{}},"component":{}}],["auxiliari",{"_index":111,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["avoid",{"_index":476,"title":{},"name":{},"text":{"20":{}},"component":{}}],["awrappedvalu",{"_index":455,"title":{},"name":{},"text":{"19":{}},"component":{}}],["axi",{"_index":956,"title":{},"name":{},"text":{"33":{}},"component":{}}],["azur",{"_index":242,"title":{"16":{},"16-2":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["azurearchitecturestarterpack",{"_index":277,"title":{},"name":{},"text":{"16":{}},"component":{"16":{},"17":{}}}],["azurearchitecturestarterpack/docs/modules/modul",{"_index":285,"title":{},"name":{},"text":{"17":{}},"component":{}}],["azurearchitecturestarterpack/docs/modules/root/pag",{"_index":268,"title":{},"name":{},"text":{"16":{}},"component":{}}],["b",{"_index":239,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"18":{},"20":{},"23":{},"26":{},"27":{},"33":{}},"component":{}}],["b1",{"_index":240,"title":{},"name":{},"text":{"13":{},"15":{}},"component":{}}],["b2",{"_index":241,"title":{},"name":{},"text":{"13":{},"15":{}},"component":{}}],["back",{"_index":701,"title":{},"name":{},"text":{"28":{},"33":{}},"component":{}}],["backward",{"_index":349,"title":{},"name":{},"text":{"18":{}},"component":{}}],["bad",{"_index":649,"title":{},"name":{},"text":{"26":{}},"component":{}}],["bad1",{"_index":655,"title":{},"name":{},"text":{"26":{}},"component":{}}],["bad2",{"_index":656,"title":{},"name":{},"text":{"26":{}},"component":{}}],["bar",{"_index":942,"title":{},"name":{},"text":{"33":{}},"component":{}}],["basement",{"_index":42,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["basic",{"_index":6,"title":{"2-2":{},"7-2":{},"33-1":{}},"name":{},"text":{"2":{},"7":{},"30":{},"33":{}},"component":{}}],["battl",{"_index":900,"title":{},"name":{},"text":{"33":{}},"component":{}}],["be",{"_index":481,"title":{},"name":{},"text":{"20":{},"31":{},"33":{}},"component":{}}],["becom",{"_index":381,"title":{},"name":{},"text":{"18":{}},"component":{}}],["befor",{"_index":811,"title":{},"name":{},"text":{"33":{}},"component":{}}],["behavior",{"_index":846,"title":{},"name":{},"text":{"33":{}},"component":{}}],["behind",{"_index":520,"title":{},"name":{},"text":{"22":{},"24":{},"29":{},"31":{}},"component":{}}],["below",{"_index":122,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["belt",{"_index":783,"title":{"33-10":{}},"name":{},"text":{"33":{}},"component":{}}],["benefit",{"_index":442,"title":{},"name":{},"text":{"19":{}},"component":{}}],["beta.1",{"_index":255,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{}}],["between",{"_index":165,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["big",{"_index":735,"title":{},"name":{},"text":{"29":{}},"component":{}}],["bind",{"_index":317,"title":{"23":{}},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"28":{},"30":{},"31":{}},"component":{}}],["bind(1",{"_index":564,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bind(2",{"_index":565,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bind(x",{"_index":566,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bit",{"_index":112,"title":{},"name":{},"text":{"4":{},"9":{},"33":{}},"component":{}}],["black",{"_index":782,"title":{"33-10":{}},"name":{},"text":{},"component":{}}],["blatantli",{"_index":767,"title":{},"name":{},"text":{"32":{}},"component":{}}],["block",{"_index":14,"title":{"4-1":{},"9-1":{}},"name":{},"text":{"2":{},"5":{},"7":{},"10":{}},"component":{}}],["bob",{"_index":673,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bold",{"_index":73,"title":{"3-1":{},"8-1":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["boss",{"_index":901,"title":{},"name":{},"text":{"33":{}},"component":{}}],["both",{"_index":439,"title":{},"name":{},"text":{"19":{},"33":{}},"component":{}}],["bottom",{"_index":263,"title":{},"name":{},"text":{"16":{},"23":{},"26":{}},"component":{}}],["boundari",{"_index":167,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["box",{"_index":39,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["brace",{"_index":485,"title":{},"name":{},"text":{"20":{}},"component":{}}],["branch",{"_index":731,"title":{"33-6":{}},"name":{},"text":{"29":{},"33":{}},"component":{}}],["breaker",{"_index":38,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["browser",{"_index":219,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["btn",{"_index":185,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["btn:[open",{"_index":209,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["btn:[submit",{"_index":202,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["build",{"_index":303,"title":{"18-5":{}},"name":{},"text":{"33":{}},"component":{}}],["builder",{"_index":470,"title":{"25":{},"26":{},"27":{}},"name":{},"text":{"19":{},"22":{},"24":{},"27":{}},"component":{}}],["built",{"_index":22,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"10":{}},"component":{}}],["bundl",{"_index":868,"title":{},"name":{},"text":{"33":{}},"component":{}}],["button",{"_index":178,"title":{"6-1":{},"11-1":{}},"name":{},"text":{"6":{},"11":{}},"component":{}}],["byte",{"_index":828,"title":{},"name":{},"text":{"33":{}},"component":{}}],["c",{"_index":161,"title":{},"name":{},"text":{"5":{},"10":{},"13":{},"15":{},"23":{},"26":{},"33":{}},"component":{}}],["ca",{"_index":675,"title":{},"name":{},"text":{"27":{}},"component":{}}],["california",{"_index":676,"title":{},"name":{},"text":{"27":{}},"component":{}}],["call",{"_index":467,"title":{},"name":{},"text":{"19":{},"20":{},"22":{},"29":{},"31":{},"33":{}},"component":{}}],["came",{"_index":810,"title":{},"name":{},"text":{"33":{}},"component":{}}],["can’t",{"_index":687,"title":{},"name":{},"text":{"27":{}},"component":{}}],["captur",{"_index":705,"title":{},"name":{},"text":{"29":{}},"component":{}}],["cascad",{"_index":688,"title":{},"name":{},"text":{"27":{}},"component":{}}],["case",{"_index":414,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"24":{},"25":{},"31":{}},"component":{}}],["categori",{"_index":542,"title":{},"name":{},"text":{"22":{}},"component":{}}],["caus",{"_index":489,"title":{},"name":{},"text":{"20":{}},"component":{}}],["caution",{"_index":26,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["certain",{"_index":599,"title":{},"name":{},"text":{"24":{}},"component":{}}],["chain",{"_index":377,"title":{},"name":{},"text":{"18":{},"23":{},"26":{},"27":{},"29":{}},"component":{}}],["chang",{"_index":845,"title":{},"name":{},"text":{"33":{}},"component":{}}],["char**``acter``**",{"_index":94,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["char**acter**",{"_index":85,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["char``acter``",{"_index":93,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["charact",{"_index":84,"title":{"5":{},"10":{},"5-1":{},"10-1":{}},"name":{"5":{},"10":{}},"text":{"3":{},"5":{},"8":{},"10":{}},"component":{}}],["chart",{"_index":954,"title":{},"name":{},"text":{"33":{}},"component":{}}],["check",{"_index":859,"title":{},"name":{},"text":{"33":{}},"component":{}}],["checkout",{"_index":940,"title":{},"name":{},"text":{"33":{}},"component":{}}],["cherri",{"_index":785,"title":{"33-12":{},"33-13":{}},"name":{},"text":{"33":{}},"component":{}}],["child",{"_index":448,"title":{},"name":{},"text":{"19":{},"28":{}},"component":{}}],["choos",{"_index":492,"title":{},"name":{},"text":{"20":{}},"component":{}}],["circuit",{"_index":37,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["class",{"_index":471,"title":{},"name":{},"text":{"19":{},"24":{}},"component":{}}],["clean",{"_index":890,"title":{},"name":{},"text":{"33":{}},"component":{}}],["cleaner",{"_index":738,"title":{},"name":{},"text":{"29":{}},"component":{}}],["clear",{"_index":757,"title":{},"name":{},"text":{"31":{}},"component":{}}],["click",{"_index":208,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["code",{"_index":70,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"9":{},"10":{},"18":{},"20":{},"25":{},"29":{},"31":{},"33":{}},"component":{}}],["collect",{"_index":777,"title":{"33-4":{}},"name":{},"text":{"33":{}},"component":{}}],["color",{"_index":817,"title":{},"name":{},"text":{"33":{}},"component":{}}],["colour",{"_index":824,"title":{},"name":{},"text":{"33":{}},"component":{}}],["combin",{"_index":293,"title":{"18":{},"18-1":{},"18-3":{},"18-4":{},"18-5":{},"18-6":{}},"name":{},"text":{"18":{}},"component":{}}],["combine(a,zero",{"_index":427,"title":{},"name":{},"text":{"18":{}},"component":{}}],["combine(zero,a",{"_index":429,"title":{},"name":{},"text":{"18":{}},"component":{}}],["combinemethod",{"_index":309,"title":{},"name":{"18":{}},"text":{},"component":{}}],["come",{"_index":20,"title":{},"name":{},"text":{"2":{},"7":{},"33":{}},"component":{}}],["comfort",{"_index":915,"title":{},"name":{},"text":{"33":{}},"component":{}}],["command",{"_index":836,"title":{},"name":{},"text":{"33":{}},"component":{}}],["comment",{"_index":129,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["commit",{"_index":778,"title":{"33-5":{}},"name":{},"text":{"33":{}},"component":{}}],["commit’",{"_index":894,"title":{},"name":{},"text":{"33":{}},"component":{}}],["commun",{"_index":200,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["compar",{"_index":575,"title":{},"name":{},"text":{"23":{}},"component":{}}],["complet",{"_index":873,"title":{},"name":{},"text":{"33":{}},"component":{}}],["complex",{"_index":7,"title":{"2-3":{},"7-3":{}},"name":{},"text":{"2":{},"7":{}},"component":{}}],["compon",{"_index":191,"title":{},"name":{},"text":{"6":{},"11":{},"16":{},"17":{}},"component":{}}],["compos",{"_index":553,"title":{},"name":{},"text":{"22":{}},"component":{}}],["composit",{"_index":431,"title":{"19":{}},"name":{},"text":{"21":{},"22":{}},"component":{}}],["comput",{"_index":392,"title":{"19":{}},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"29":{}},"component":{}}],["computationexpressioncomposit",{"_index":432,"title":{},"name":{"19":{}},"text":{},"component":{}}],["concept",{"_index":370,"title":{},"name":{},"text":{"18":{},"22":{},"31":{}},"component":{}}],["concern",{"_index":753,"title":{},"name":{},"text":{"31":{}},"component":{}}],["config",{"_index":820,"title":{},"name":{},"text":{"33":{}},"component":{}}],["conform",{"_index":556,"title":{},"name":{},"text":{"22":{}},"component":{}}],["connect",{"_index":426,"title":{},"name":{},"text":{"18":{}},"component":{}}],["consid",{"_index":916,"title":{},"name":{},"text":{"33":{}},"component":{}}],["consist",{"_index":802,"title":{},"name":{},"text":{"33":{}},"component":{}}],["constructor",{"_index":536,"title":{},"name":{},"text":{"22":{}},"component":{}}],["consum",{"_index":446,"title":{},"name":{},"text":{"19":{}},"component":{}}],["contain",{"_index":62,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"33":{}},"component":{}}],["content",{"_index":63,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"8":{},"9":{},"33":{}},"component":{}}],["context",{"_index":760,"title":{},"name":{},"text":{"31":{}},"component":{}}],["continu",{"_index":319,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"24":{},"30":{},"31":{}},"component":{}}],["control",{"_index":661,"title":{},"name":{},"text":{"27":{}},"component":{}}],["convers",{"_index":120,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["convert",{"_index":362,"title":{},"name":{},"text":{"18":{},"24":{},"25":{},"26":{},"27":{}},"component":{}}],["copi",{"_index":768,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["copyright",{"_index":160,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["correspond",{"_index":469,"title":{},"name":{},"text":{"19":{},"27":{}},"component":{}}],["creat",{"_index":61,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"28":{},"33":{}},"component":{}}],["cross",{"_index":248,"title":{"16-4":{},"17-2":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["curli",{"_index":484,"title":{},"name":{},"text":{"20":{}},"component":{}}],["curv",{"_index":154,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["cust42",{"_index":712,"title":{},"name":{},"text":{"29":{}},"component":{}}],["custid",{"_index":714,"title":{},"name":{},"text":{"29":{}},"component":{}}],["d",{"_index":931,"title":{},"name":{},"text":{"33":{}},"component":{}}],["dark",{"_index":40,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["dash",{"_index":164,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["data",{"_index":304,"title":{"18-5":{}},"name":{},"text":{"18":{},"31":{}},"component":{}}],["databas",{"_index":704,"title":{},"name":{},"text":{"29":{}},"component":{}}],["date",{"_index":852,"title":{},"name":{},"text":{"33":{}},"component":{}}],["dbresult",{"_index":708,"title":{},"name":{},"text":{"29":{}},"component":{}}],["dbresultbuild",{"_index":732,"title":{},"name":{},"text":{"29":{}},"component":{}}],["decid",{"_index":876,"title":{},"name":{},"text":{"33":{}},"component":{}}],["decim",{"_index":137,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["decor",{"_index":816,"title":{},"name":{},"text":{"33":{}},"component":{}}],["decorate=short",{"_index":822,"title":{},"name":{},"text":{"33":{}},"component":{}}],["default",{"_index":231,"title":{},"name":{},"text":{"6":{},"11":{},"33":{}},"component":{}}],["defin",{"_index":424,"title":{},"name":{},"text":{"18":{},"22":{},"26":{},"33":{}},"component":{}}],["definit",{"_index":544,"title":{},"name":{},"text":{"22":{}},"component":{}}],["delay",{"_index":333,"title":{"20":{}},"name":{},"text":{"18":{},"20":{}},"component":{}}],["delayrunmethod",{"_index":475,"title":{},"name":{"20":{}},"text":{},"component":{}}],["delet",{"_index":885,"title":{},"name":{},"text":{"33":{}},"component":{}}],["demo",{"_index":246,"title":{"16-3":{}},"name":{},"text":{"16":{}},"component":{}}],["depend",{"_index":662,"title":{},"name":{},"text":{"27":{}},"component":{}}],["deploy",{"_index":849,"title":{},"name":{},"text":{"33":{}},"component":{}}],["descriptor",{"_index":193,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["design",{"_index":741,"title":{},"name":{},"text":{"29":{}},"component":{}}],["develop",{"_index":529,"title":{},"name":{},"text":{"22":{}},"component":{}}],["dictionari",{"_index":667,"title":{},"name":{},"text":{"27":{}},"component":{}}],["didn’t",{"_index":886,"title":{},"name":{},"text":{"33":{}},"component":{}}],["differ",{"_index":420,"title":{},"name":{},"text":{"18":{},"21":{},"23":{},"30":{},"33":{}},"component":{}}],["directli",{"_index":326,"title":{},"name":{},"text":{"18":{},"19":{},"21":{},"30":{},"31":{}},"component":{}}],["directori",{"_index":832,"title":{},"name":{},"text":{"33":{}},"component":{}}],["discuss",{"_index":549,"title":{},"name":{},"text":{"22":{}},"component":{}}],["disk",{"_index":833,"title":{},"name":{},"text":{"33":{}},"component":{}}],["display",{"_index":854,"title":{},"name":{},"text":{"33":{}},"component":{}}],["divid",{"_index":573,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["dividebi",{"_index":579,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["dividebyexplicit",{"_index":578,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dividebywithbindfunct",{"_index":590,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dividebywithbindoper",{"_index":596,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dividebywithcompexpr",{"_index":592,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dividebyworkflow",{"_index":583,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["dividebyworkflowm",{"_index":651,"title":{},"name":{},"text":{"26":{}},"component":{}}],["do",{"_index":487,"title":{},"name":{},"text":{"20":{},"29":{}},"component":{}}],["doc",{"_index":257,"title":{},"name":{},"text":{"16":{}},"component":{}}],["document",{"_index":143,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"16":{},"30":{},"34":{}},"component":{}}],["doesn’t",{"_index":510,"title":{},"name":{},"text":{"21":{},"30":{}},"component":{}}],["domethod",{"_index":504,"title":{},"name":{"21":{}},"text":{},"component":{}}],["don't",{"_index":28,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["done",{"_index":482,"title":{},"name":{},"text":{"20":{},"27":{},"33":{}},"component":{}}],["don’t",{"_index":52,"title":{},"name":{},"text":{"2":{},"7":{},"33":{}},"component":{}}],["doubl",{"_index":172,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["down",{"_index":892,"title":{},"name":{},"text":{"33":{}},"component":{}}],["draw",{"_index":11,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["drawer",{"_index":262,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dure",{"_index":119,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["e",{"_index":929,"title":{},"name":{},"text":{"33":{}},"component":{}}],["each",{"_index":389,"title":{},"name":{},"text":{"18":{},"24":{},"25":{},"27":{},"29":{},"33":{}},"component":{}}],["earli",{"_index":479,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["earlier",{"_index":550,"title":{},"name":{},"text":{"22":{}},"component":{}}],["easi",{"_index":506,"title":{},"name":{},"text":{"21":{}},"component":{}}],["easili",{"_index":552,"title":{},"name":{},"text":{"22":{}},"component":{}}],["eason",{"_index":772,"title":{},"name":{},"text":{"32":{}},"component":{}}],["effect",{"_index":385,"title":{},"name":{},"text":{"18":{},"20":{},"33":{}},"component":{}}],["electr",{"_index":31,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["element",{"_index":127,"title":{},"name":{},"text":{"5":{},"10":{},"24":{}},"component":{}}],["ellips",{"_index":162,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["em",{"_index":163,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["empti",{"_index":418,"title":{},"name":{},"text":{"18":{},"31":{}},"component":{}}],["enabl",{"_index":199,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["end",{"_index":883,"title":{},"name":{},"text":{"33":{}},"component":{}}],["enforc",{"_index":747,"title":{},"name":{},"text":{"30":{}},"component":{}}],["english",{"_index":952,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ensur",{"_index":555,"title":{},"name":{},"text":{"22":{}},"component":{}}],["entir",{"_index":81,"title":{},"name":{},"text":{"3":{},"8":{},"20":{}},"component":{}}],["entiti",{"_index":125,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["equival",{"_index":391,"title":{},"name":{},"text":{"18":{},"33":{}},"component":{}}],["error",{"_index":709,"title":{},"name":{},"text":{"29":{},"31":{},"33":{}},"component":{}}],["etc",{"_index":567,"title":{},"name":{},"text":{"23":{}},"component":{}}],["evalu",{"_index":384,"title":{},"name":{},"text":{"18":{},"20":{},"31":{}},"component":{}}],["even",{"_index":554,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["event",{"_index":962,"title":{},"name":{},"text":{"33":{}},"component":{}}],["everyon",{"_index":913,"title":{},"name":{},"text":{"33":{}},"component":{}}],["everyone’",{"_index":917,"title":{},"name":{},"text":{"33":{}},"component":{}}],["everyth",{"_index":686,"title":{},"name":{},"text":{"27":{},"33":{}},"component":{}}],["exact",{"_index":922,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exactli",{"_index":501,"title":{},"name":{},"text":{"20":{},"24":{},"30":{},"33":{}},"component":{}}],["exampl",{"_index":55,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"22":{},"23":{},"25":{},"30":{},"31":{}},"component":{}}],["except",{"_index":128,"title":{},"name":{},"text":{"5":{},"10":{},"21":{}},"component":{}}],["execut",{"_index":961,"title":{},"name":{},"text":{"33":{}},"component":{}}],["exist",{"_index":500,"title":{},"name":{},"text":{"20":{},"33":{}},"component":{}}],["exit",{"_index":212,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"20":{},"21":{},"30":{},"31":{}},"component":{}}],["experiment",{"_index":187,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["explain",{"_index":904,"title":{},"name":{},"text":{"33":{}},"component":{}}],["explicit",{"_index":577,"title":{},"name":{},"text":{"23":{},"29":{}},"component":{}}],["explicitli",{"_index":628,"title":{},"name":{},"text":{"25":{},"31":{}},"component":{}}],["expr1",{"_index":408,"title":{},"name":{},"text":{"18":{}},"component":{}}],["expr2",{"_index":410,"title":{},"name":{},"text":{"18":{}},"component":{}}],["express",{"_index":373,"title":{"19":{}},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["f",{"_index":321,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["fact",{"_index":524,"title":{},"name":{},"text":{"22":{}},"component":{}}],["fail",{"_index":665,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["failur",{"_index":300,"title":{"18-3":{}},"name":{},"text":{"18":{},"27":{},"31":{}},"component":{}}],["fals",{"_index":405,"title":{},"name":{},"text":{"18":{},"31":{}},"component":{}}],["far",{"_index":574,"title":{},"name":{},"text":{"23":{}},"component":{}}],["fast",{"_index":835,"title":{},"name":{},"text":{"33":{}},"component":{}}],["fed",{"_index":444,"title":{},"name":{},"text":{"19":{},"22":{}},"component":{}}],["fetch",{"_index":841,"title":{},"name":{},"text":{"33":{}},"component":{}}],["figur",{"_index":807,"title":{},"name":{},"text":{"33":{}},"component":{}}],["file",{"_index":206,"title":{},"name":{},"text":{"6":{},"11":{},"16":{},"33":{}},"component":{}}],["final",{"_index":388,"title":{},"name":{},"text":{"18":{},"20":{},"23":{}},"component":{}}],["find",{"_index":48,"title":{},"name":{},"text":{"2":{},"7":{},"27":{}},"component":{}}],["finish",{"_index":203,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["first",{"_index":133,"title":{},"name":{},"text":{"5":{},"10":{},"18":{},"23":{},"33":{}},"component":{}}],["first_thi",{"_index":963,"title":{},"name":{},"text":{"33":{}},"component":{}}],["fit",{"_index":541,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["five",{"_index":21,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["flank",{"_index":168,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["flatten",{"_index":602,"title":{},"name":{},"text":{"24":{}},"component":{}}],["flow",{"_index":660,"title":{},"name":{},"text":{"27":{},"29":{}},"component":{}}],["fluff",{"_index":905,"title":{},"name":{},"text":{"33":{}},"component":{}}],["focu",{"_index":734,"title":{},"name":{},"text":{"29":{}},"component":{}}],["follow",{"_index":80,"title":{},"name":{},"text":{"3":{},"8":{},"25":{},"27":{},"33":{}},"component":{}}],["foo",{"_index":834,"title":{},"name":{},"text":{"33":{}},"component":{}}],["for..in..do",{"_index":616,"title":{},"name":{},"text":{"24":{}},"component":{}}],["forgot",{"_index":860,"title":{},"name":{},"text":{"33":{}},"component":{}}],["fork",{"_index":30,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["form",{"_index":159,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["format",{"_index":78,"title":{"3":{},"8":{}},"name":{"3":{},"8":{}},"text":{"3":{},"8":{}},"component":{}}],["four",{"_index":571,"title":{},"name":{},"text":{"23":{},"33":{}},"component":{}}],["fsharp",{"_index":762,"title":{"32":{}},"name":{},"text":{"32":{}},"component":{}}],["fun",{"_index":402,"title":{},"name":{},"text":{"18":{},"23":{},"24":{},"25":{},"26":{}},"component":{}}],["function",{"_index":460,"title":{},"name":{},"text":{"19":{},"20":{},"22":{},"24":{}},"component":{}}],["functorun",{"_index":496,"title":{},"name":{},"text":{"20":{}},"component":{}}],["game",{"_index":899,"title":{},"name":{},"text":{"33":{}},"component":{}}],["garbag",{"_index":776,"title":{"33-4":{}},"name":{},"text":{"33":{}},"component":{}}],["gc",{"_index":880,"title":{},"name":{},"text":{"33":{}},"component":{}}],["gener",{"_index":483,"title":{},"name":{},"text":{"20":{},"22":{},"24":{}},"component":{}}],["getcustomerid",{"_index":711,"title":{},"name":{},"text":{"29":{}},"component":{}}],["getlastorderforcustom",{"_index":713,"title":{},"name":{},"text":{"29":{}},"component":{}}],["getlastproductforord",{"_index":716,"title":{},"name":{},"text":{"29":{}},"component":{}}],["giant",{"_index":799,"title":{},"name":{},"text":{"33":{}},"component":{}}],["git",{"_index":775,"title":{"33":{},"33-2":{},"33-7":{},"33-11":{},"33-12":{},"33-13":{},"33-14":{}},"name":{},"text":{"33":{}},"component":{}}],["git.net",{"_index":791,"title":{},"name":{},"text":{"33":{}},"component":{}}],["git.net/sections/rebas",{"_index":935,"title":{},"name":{},"text":{"33":{}},"component":{}}],["git.net/sections/test",{"_index":906,"title":{},"name":{},"text":{"33":{}},"component":{}}],["git/refs/head",{"_index":831,"title":{},"name":{},"text":{"33":{}},"component":{}}],["gitx",{"_index":823,"title":{},"name":{},"text":{"33":{}},"component":{}}],["give",{"_index":585,"title":{},"name":{},"text":{"23":{},"26":{},"33":{}},"component":{}}],["given",{"_index":920,"title":{},"name":{},"text":{"33":{}},"component":{}}],["global",{"_index":195,"title":{},"name":{},"text":{"6":{},"11":{},"33":{}},"component":{}}],["go",{"_index":44,"title":{},"name":{},"text":{"2":{},"7":{},"23":{},"26":{},"29":{}},"component":{}}],["good",{"_index":463,"title":{},"name":{},"text":{"19":{},"26":{}},"component":{}}],["good1",{"_index":652,"title":{},"name":{},"text":{"26":{}},"component":{}}],["good2",{"_index":653,"title":{},"name":{},"text":{"26":{}},"component":{}}],["graph",{"_index":800,"title":{},"name":{},"text":{"33":{}},"component":{}}],["grasp",{"_index":535,"title":{},"name":{},"text":{"22":{}},"component":{}}],["greater",{"_index":170,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["ground",{"_index":936,"title":{},"name":{},"text":{"33":{}},"component":{}}],["guidelin",{"_index":306,"title":{"18-6":{}},"name":{},"text":{},"component":{}}],["h",{"_index":928,"title":{},"name":{},"text":{"33":{}},"component":{}}],["hand",{"_index":449,"title":{},"name":{},"text":{"19":{},"21":{},"29":{}},"component":{}}],["handl",{"_index":729,"title":{},"name":{},"text":{"29":{}},"component":{}}],["happen",{"_index":345,"title":{},"name":{},"text":{"18":{},"20":{},"33":{}},"component":{}}],["hard",{"_index":943,"title":{},"name":{},"text":{"33":{}},"component":{}}],["hash",{"_index":870,"title":{},"name":{},"text":{"33":{}},"component":{}}],["header",{"_index":190,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["hello",{"_index":404,"title":{},"name":{},"text":{"18":{},"31":{}},"component":{}}],["help",{"_index":10,"title":{"33-14":{}},"name":{},"text":{"2":{},"7":{}},"component":{}}],["here",{"_index":645,"title":{},"name":{},"text":{"26":{},"27":{},"29":{},"33":{}},"component":{}}],["here’",{"_index":951,"title":{},"name":{},"text":{"33":{}},"component":{}}],["hexadecim",{"_index":138,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["hey",{"_index":945,"title":{},"name":{},"text":{"33":{}},"component":{}}],["hide",{"_index":632,"title":{},"name":{},"text":{"25":{},"33":{}},"component":{}}],["highlight",{"_index":76,"title":{"3-3":{},"8-3":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["histori",{"_index":895,"title":{},"name":{},"text":{"33":{}},"component":{}}],["home",{"_index":0,"title":{"1":{},"16-2":{},"16-3":{}},"name":{},"text":{"1":{},"16":{}},"component":{}}],["homesit",{"_index":3,"title":{},"name":{},"text":{},"component":{"1":{}}}],["html",{"_index":134,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["https://think",{"_index":790,"title":{},"name":{},"text":{"33":{}},"component":{}}],["i.",{"_index":853,"title":{},"name":{},"text":{"33":{}},"component":{}}],["icon",{"_index":18,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["id",{"_index":871,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ident",{"_index":515,"title":{"22":{}},"name":{},"text":{"22":{}},"component":{}}],["identifi",{"_index":829,"title":{},"name":{},"text":{"33":{}},"component":{}}],["identitybuild",{"_index":547,"title":{},"name":{},"text":{"22":{}},"component":{}}],["identitywrappertyp",{"_index":516,"title":{},"name":{"22":{}},"text":{},"component":{}}],["if/els",{"_index":643,"title":{},"name":{},"text":{"26":{}},"component":{}}],["ignor",{"_index":493,"title":{},"name":{},"text":{"20":{}},"component":{}}],["imag",{"_index":71,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{}},"component":{}}],["imagin",{"_index":857,"title":{},"name":{},"text":{"33":{}},"component":{}}],["immedi",{"_index":491,"title":{},"name":{},"text":{"20":{}},"component":{}}],["implement",{"_index":297,"title":{"18-3":{},"18-4":{},"18-5":{}},"name":{},"text":{"18":{},"19":{},"22":{},"24":{},"30":{}},"component":{}}],["implicitli",{"_index":434,"title":{},"name":{},"text":{"19":{},"29":{}},"component":{}}],["import",{"_index":25,"title":{},"name":{},"text":{"2":{},"7":{},"18":{},"21":{},"33":{}},"component":{}}],["includ",{"_index":838,"title":{},"name":{},"text":{"33":{}},"component":{}}],["incognito",{"_index":221,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["incomplet",{"_index":526,"title":{},"name":{},"text":{"22":{}},"component":{}}],["increas",{"_index":957,"title":{},"name":{},"text":{"33":{}},"component":{}}],["inde",{"_index":543,"title":{},"name":{},"text":{"22":{}},"component":{}}],["index",{"_index":2,"title":{},"name":{"1":{},"16":{},"34":{}},"text":{},"component":{}}],["index.adoc",{"_index":266,"title":{},"name":{},"text":{"16":{}},"component":{}}],["indic",{"_index":422,"title":{},"name":{},"text":{"18":{}},"component":{}}],["infix",{"_index":595,"title":{},"name":{},"text":{"23":{}},"component":{}}],["init",{"_index":647,"title":{},"name":{},"text":{"26":{}},"component":{}}],["inlin",{"_index":77,"title":{"3":{},"8":{}},"name":{"3":{},"8":{}},"text":{"3":{},"5":{},"8":{},"10":{},"28":{}},"component":{}}],["input",{"_index":445,"title":{},"name":{},"text":{"19":{},"22":{}},"component":{}}],["insert",{"_index":213,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["insid",{"_index":512,"title":{},"name":{},"text":{"21":{}},"component":{}}],["instanc",{"_index":335,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"25":{},"26":{},"30":{},"31":{}},"component":{}}],["instead",{"_index":693,"title":{},"name":{},"text":{"27":{},"33":{}},"component":{}}],["intend",{"_index":794,"title":{},"name":{},"text":{"33":{}},"component":{}}],["interfac",{"_index":182,"title":{"6":{},"11":{}},"name":{},"text":{"6":{},"11":{}},"component":{}}],["intern",{"_index":639,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["introduc",{"_index":558,"title":{"23":{}},"name":{},"text":{"33":{}},"component":{}}],["introducingbind",{"_index":559,"title":{},"name":{"23":{}},"text":{},"component":{}}],["issu",{"_index":958,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ital",{"_index":74,"title":{"3-1":{},"8-1":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["item",{"_index":225,"title":{},"name":{},"text":{"6":{},"11":{},"13":{},"15":{}},"component":{}}],["it’",{"_index":877,"title":{},"name":{},"text":{"33":{}},"component":{}}],["j",{"_index":609,"title":{},"name":{},"text":{"24":{}},"component":{}}],["kbd",{"_index":186,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["kbd:[ctrl+shift+n",{"_index":220,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["kbd:[ctrl+t",{"_index":215,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["kbd:[esc",{"_index":211,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["keep",{"_index":587,"title":{},"name":{},"text":{"23":{},"26":{},"33":{}},"component":{}}],["kenny'",{"_index":49,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["kenny’",{"_index":54,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["key",{"_index":441,"title":{},"name":{},"text":{"19":{},"27":{}},"component":{}}],["keyboard",{"_index":179,"title":{"6-2":{},"11-2":{}},"name":{},"text":{"6":{},"11":{}},"component":{}}],["keyword",{"_index":478,"title":{},"name":{},"text":{"20":{},"30":{}},"component":{}}],["kind",{"_index":691,"title":{},"name":{},"text":{"27":{}},"component":{}}],["kit",{"_index":771,"title":{},"name":{},"text":{"32":{}},"component":{}}],["know",{"_index":946,"title":{},"name":{},"text":{"33":{}},"component":{}}],["known",{"_index":8,"title":{},"name":{},"text":{"2":{},"7":{},"22":{}},"component":{}}],["label",{"_index":815,"title":{},"name":{},"text":{"33":{}},"component":{}}],["labl",{"_index":17,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["last",{"_index":350,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{}}],["later",{"_index":893,"title":{},"name":{},"text":{"33":{}},"component":{}}],["latest",{"_index":250,"title":{"16-5":{},"17-3":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["lazi",{"_index":903,"title":{},"name":{},"text":{"33":{}},"component":{}}],["lead",{"_index":440,"title":{},"name":{},"text":{"19":{}},"component":{}}],["learn",{"_index":793,"title":{},"name":{},"text":{"33":{}},"component":{}}],["left",{"_index":171,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"22":{},"33":{}},"component":{}}],["let",{"_index":719,"title":{},"name":{},"text":{"29":{}},"component":{}}],["let'",{"_index":101,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["let’",{"_index":105,"title":{},"name":{},"text":{"3":{},"8":{},"23":{},"25":{},"33":{}},"component":{}}],["level",{"_index":230,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"14":{},"24":{},"29":{},"33":{}},"component":{}}],["librari",{"_index":603,"title":{},"name":{},"text":{"24":{}},"component":{}}],["limit",{"_index":65,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["line",{"_index":13,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"10":{},"33":{}},"component":{}}],["list",{"_index":66,"title":{"12":{},"13":{},"14":{},"15":{},"24":{},"12-1":{},"12-2":{},"13-1":{},"13-2":{},"14-1":{},"14-2":{},"15-1":{},"15-2":{},"24-1":{}},"name":{"12":{},"13":{},"14":{},"15":{}},"text":{"2":{},"7":{},"12":{},"13":{},"14":{},"15":{},"18":{},"22":{},"24":{},"33":{}},"component":{}}],["list.collect",{"_index":354,"title":{},"name":{},"text":{"18":{},"24":{}},"component":{}}],["list.concat",{"_index":359,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuild",{"_index":351,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuilder.combine(listbuilder.yield(a",{"_index":367,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuilder.combine(listbuilder.yield(i",{"_index":366,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuilder.combine(listbuilder.yield(x",{"_index":365,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuilder.delay(fun",{"_index":364,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuilder.yield(b",{"_index":368,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listbuilder4",{"_index":363,"title":{},"name":{},"text":{"18":{}},"component":{}}],["listworkflow",{"_index":607,"title":{},"name":{},"text":{"24":{}},"component":{}}],["listworkflow.bind([10;11;12",{"_index":614,"title":{},"name":{},"text":{"24":{}},"component":{}}],["listworkflow.bind([1;2;3",{"_index":613,"title":{},"name":{},"text":{"24":{}},"component":{}}],["listworkflow.return",{"_index":615,"title":{},"name":{},"text":{"24":{}},"component":{}}],["listworkflowbuild",{"_index":605,"title":{},"name":{},"text":{"24":{}},"component":{}}],["listwrappertyp",{"_index":597,"title":{},"name":{"24":{}},"text":{},"component":{}}],["littl",{"_index":897,"title":{},"name":{},"text":{"33":{}},"component":{}}],["live",{"_index":46,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["local",{"_index":825,"title":{},"name":{},"text":{"33":{}},"component":{}}],["locat",{"_index":267,"title":{},"name":{},"text":{"16":{}},"component":{}}],["log",{"_index":517,"title":{"25":{},"33-2":{}},"name":{},"text":{"22":{},"25":{},"33":{}},"component":{}}],["logbuild",{"_index":625,"title":{},"name":{"25":{}},"text":{},"component":{}}],["loggedworkflow",{"_index":626,"title":{},"name":{},"text":{"25":{}},"component":{}}],["loggedworkflow1",{"_index":638,"title":{},"name":{},"text":{"25":{}},"component":{}}],["logger",{"_index":636,"title":{},"name":{},"text":{"25":{}},"component":{}}],["logger.bind(42",{"_index":640,"title":{},"name":{},"text":{"25":{}},"component":{}}],["logger.bind(43",{"_index":641,"title":{},"name":{},"text":{"25":{}},"component":{}}],["logger.bind(x",{"_index":642,"title":{},"name":{},"text":{"25":{}},"component":{}}],["loggingbuild",{"_index":633,"title":{},"name":{},"text":{"25":{}},"component":{}}],["logic",{"_index":702,"title":{},"name":{},"text":{"28":{},"29":{}},"component":{}}],["look",{"_index":419,"title":{},"name":{},"text":{"18":{},"33":{}},"component":{}}],["lookup",{"_index":668,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lst",{"_index":621,"title":{},"name":{},"text":{"24":{}},"component":{}}],["m",{"_index":353,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"30":{}},"component":{}}],["m,f",{"_index":591,"title":{},"name":{},"text":{"23":{}},"component":{}}],["macro",{"_index":183,"title":{"6":{},"11":{}},"name":{"6":{},"11":{}},"text":{"6":{},"11":{}},"component":{}}],["made",{"_index":874,"title":{},"name":{},"text":{"33":{}},"component":{}}],["main",{"_index":114,"title":{},"name":{},"text":{"4":{},"9":{},"28":{}},"component":{}}],["mainli",{"_index":746,"title":{},"name":{},"text":{"30":{}},"component":{}}],["major",{"_index":433,"title":{},"name":{},"text":{"19":{},"22":{},"29":{}},"component":{}}],["make",{"_index":334,"title":{"33-5":{}},"name":{},"text":{"18":{},"20":{},"21":{},"26":{},"30":{},"31":{},"33":{}},"component":{}}],["manag",{"_index":742,"title":{},"name":{},"text":{"29":{}},"component":{}}],["manipul",{"_index":754,"title":{},"name":{},"text":{"31":{}},"component":{}}],["map",{"_index":539,"title":{},"name":{},"text":{"22":{}},"component":{}}],["map.oflist",{"_index":670,"title":{},"name":{},"text":{"27":{}},"component":{}}],["map1",{"_index":669,"title":{},"name":{},"text":{"27":{}},"component":{}}],["map1.tryfind",{"_index":680,"title":{},"name":{},"text":{"27":{}},"component":{}}],["map2",{"_index":671,"title":{},"name":{},"text":{"27":{}},"component":{}}],["map2.tryfind",{"_index":682,"title":{},"name":{},"text":{"27":{}},"component":{}}],["map3",{"_index":674,"title":{},"name":{},"text":{"27":{}},"component":{}}],["map3.tryfind",{"_index":684,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mark",{"_index":773,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["masquerad",{"_index":56,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["match",{"_index":313,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"23":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["mayb",{"_index":594,"title":{"26":{}},"name":{},"text":{"23":{},"26":{}},"component":{}}],["maybe.bind(dividebi",{"_index":654,"title":{},"name":{},"text":{"26":{}},"component":{}}],["maybebuild",{"_index":593,"title":{},"name":{"26":{}},"text":{"23":{},"26":{}},"component":{}}],["mean",{"_index":538,"title":{},"name":{},"text":{"22":{},"24":{},"33":{}},"component":{}}],["member",{"_index":311,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["menu",{"_index":180,"title":{"6-3":{},"11-3":{}},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{}}],["menu:file[sav",{"_index":227,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["menu:view[zoom",{"_index":228,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["merg",{"_index":415,"title":{"33-7":{},"33-10":{}},"name":{},"text":{"18":{},"33":{}},"component":{}}],["merges/black",{"_index":910,"title":{},"name":{},"text":{"33":{}},"component":{}}],["merges/th",{"_index":908,"title":{},"name":{},"text":{"33":{}},"component":{}}],["merging.html",{"_index":911,"title":{},"name":{},"text":{"33":{}},"component":{}}],["method",{"_index":294,"title":{"18":{},"20":{},"21":{},"30":{},"31":{},"18-1":{}},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"23":{},"24":{},"29":{},"30":{}},"component":{}}],["mix",{"_index":307,"title":{"18-6":{}},"name":{},"text":{},"component":{}}],["mnemon",{"_index":788,"title":{"33-14":{}},"name":{},"text":{},"component":{}}],["mode",{"_index":214,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["modul",{"_index":271,"title":{"17":{}},"name":{},"text":{"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"31":{}},"component":{}}],["moment",{"_index":805,"title":{},"name":{},"text":{"33":{}},"component":{}}],["monospac",{"_index":75,"title":{"3-2":{},"8-2":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["monster",{"_index":45,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["more",{"_index":346,"title":{},"name":{},"text":{"18":{},"20":{},"23":{},"26":{},"33":{}},"component":{}}],["move",{"_index":843,"title":{},"name":{},"text":{"33":{}},"component":{}}],["msdn",{"_index":744,"title":{},"name":{},"text":{"30":{}},"component":{}}],["much",{"_index":737,"title":{},"name":{},"text":{"29":{}},"component":{}}],["multilookup",{"_index":679,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multilookupexpand",{"_index":695,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multilookupm",{"_index":694,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multipl",{"_index":67,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["multipli",{"_index":624,"title":{},"name":{},"text":{"24":{}},"component":{}}],["myworkflow",{"_index":451,"title":{},"name":{},"text":{"19":{}},"component":{}}],["nail",{"_index":891,"title":{},"name":{},"text":{"33":{}},"component":{}}],["name",{"_index":150,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"21":{},"29":{},"33":{}},"component":{}}],["navig",{"_index":207,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["need",{"_index":35,"title":{"18-1":{}},"name":{},"text":{"2":{},"7":{},"18":{},"24":{},"27":{},"33":{}},"component":{}}],["nest",{"_index":233,"title":{"12-2":{},"13-2":{},"14-2":{},"15-2":{}},"name":{},"text":{"12":{},"14":{}},"component":{}}],["net",{"_index":528,"title":{},"name":{},"text":{"22":{}},"component":{}}],["never",{"_index":43,"title":{},"name":{},"text":{"2":{},"7":{},"33":{}},"component":{}}],["new",{"_index":217,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"33":{}},"component":{}}],["newbar",{"_index":941,"title":{},"name":{},"text":{"33":{}},"component":{}}],["next",{"_index":396,"title":{},"name":{},"text":{"18":{},"23":{},"25":{}},"component":{}}],["nice",{"_index":568,"title":{},"name":{},"text":{"23":{},"29":{}},"component":{}}],["node",{"_index":809,"title":{},"name":{},"text":{"33":{}},"component":{}}],["none",{"_index":315,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"23":{},"26":{},"27":{},"30":{},"31":{}},"component":{}}],["normal",{"_index":386,"title":{},"name":{},"text":{"18":{},"21":{},"24":{},"31":{}},"component":{}}],["note",{"_index":23,"title":{"32":{},"33":{},"34":{}},"name":{},"text":{"2":{},"5":{},"7":{},"10":{},"32":{},"33":{},"34":{}},"component":{}}],["notic",{"_index":9,"title":{},"name":{},"text":{"2":{},"7":{},"33":{}},"component":{}}],["now",{"_index":601,"title":{},"name":{},"text":{"24":{},"29":{},"33":{}},"component":{}}],["number",{"_index":562,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["numer",{"_index":149,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["ny",{"_index":677,"title":{},"name":{},"text":{"27":{}},"component":{}}],["occur",{"_index":126,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["ok",{"_index":761,"title":{},"name":{},"text":{"31":{}},"component":{}}],["on",{"_index":256,"title":{"17":{}},"name":{},"text":{"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"24":{},"27":{},"29":{},"30":{},"31":{},"33":{}},"component":{}}],["onc",{"_index":534,"title":{},"name":{},"text":{"22":{},"23":{},"26":{},"33":{}},"component":{}}],["one/pages/overview.adoc",{"_index":286,"title":{},"name":{},"text":{"17":{}},"component":{}}],["one:overview.adoc",{"_index":290,"title":{},"name":{},"text":{"17":{}},"component":{}}],["onelin",{"_index":812,"title":{},"name":{},"text":{"33":{}},"component":{}}],["open",{"_index":216,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["oper",{"_index":505,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["option",{"_index":57,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"18":{},"20":{},"21":{},"30":{},"31":{},"33":{}},"component":{}}],["option.bind",{"_index":320,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"23":{},"30":{},"31":{}},"component":{}}],["or/els",{"_index":659,"title":{},"name":{},"text":{"27":{}},"component":{}}],["orang",{"_index":50,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["order",{"_index":232,"title":{"12":{},"14":{},"12-1":{},"12-2":{},"14-1":{},"14-2":{}},"name":{"12":{},"14":{}},"text":{"12":{},"14":{},"33":{}},"component":{}}],["order123",{"_index":715,"title":{},"name":{},"text":{"29":{}},"component":{}}],["orderid",{"_index":717,"title":{},"name":{},"text":{"29":{}},"component":{}}],["orels",{"_index":657,"title":{"27":{}},"name":{},"text":{"27":{}},"component":{}}],["orelse.combine(orelse.returnfrom(map1.tryfind",{"_index":697,"title":{},"name":{},"text":{"27":{}},"component":{}}],["orelse.combine(orelse.returnfrom(map2.tryfind",{"_index":698,"title":{},"name":{},"text":{"27":{}},"component":{}}],["orelse.delay(fun",{"_index":696,"title":{},"name":{},"text":{"27":{}},"component":{}}],["orelse.returnfrom(map3.tryfind",{"_index":699,"title":{},"name":{},"text":{"27":{}},"component":{}}],["orelsebuild",{"_index":658,"title":{},"name":{"27":{}},"text":{"27":{}},"component":{}}],["origin",{"_index":576,"title":{},"name":{},"text":{"23":{},"25":{},"28":{}},"component":{}}],["otherwis",{"_index":375,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["ourselv",{"_index":569,"title":{},"name":{},"text":{"23":{}},"component":{}}],["out",{"_index":907,"title":{},"name":{},"text":{"33":{}},"component":{}}],["output",{"_index":443,"title":{},"name":{},"text":{"19":{},"20":{},"22":{}},"component":{}}],["over",{"_index":948,"title":{},"name":{},"text":{"33":{}},"component":{}}],["overal",{"_index":382,"title":{},"name":{},"text":{"18":{}},"component":{}}],["overview",{"_index":284,"title":{"17":{}},"name":{"17":{},"32":{},"33":{}},"text":{},"component":{}}],["p",{"_index":634,"title":{},"name":{},"text":{"25":{}},"component":{}}],["pack",{"_index":245,"title":{"16":{},"16-2":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["packag",{"_index":848,"title":{},"name":{},"text":{"33":{}},"component":{}}],["page",{"_index":1,"title":{"1":{},"16-1":{},"16-2":{},"16-3":{},"16-4":{},"16-5":{},"16-6":{},"17-1":{},"17-2":{},"17-3":{},"17-4":{}},"name":{},"text":{"1":{},"16":{},"17":{},"33":{}},"component":{}}],["paragraph",{"_index":68,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["parallel",{"_index":751,"title":{},"name":{},"text":{"31":{}},"component":{}}],["paramet",{"_index":344,"title":{},"name":{},"text":{"18":{},"22":{}},"component":{}}],["parametr",{"_index":530,"title":{},"name":{},"text":{"22":{}},"component":{}}],["parent",{"_index":806,"title":{},"name":{},"text":{"33":{}},"component":{}}],["parka",{"_index":51,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["part",{"_index":102,"title":{},"name":{},"text":{"3":{},"8":{},"20":{},"33":{}},"component":{}}],["part1",{"_index":497,"title":{},"name":{},"text":{"20":{}},"component":{}}],["part2",{"_index":499,"title":{},"name":{},"text":{"20":{}},"component":{}}],["particular",{"_index":851,"title":{},"name":{},"text":{"33":{}},"component":{}}],["particularli",{"_index":509,"title":{},"name":{},"text":{"21":{}},"component":{}}],["pass",{"_index":395,"title":{},"name":{},"text":{"18":{},"21":{},"24":{}},"component":{}}],["passthrough",{"_index":130,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["path",{"_index":884,"title":{},"name":{},"text":{"33":{}},"component":{}}],["pattern",{"_index":720,"title":{"33-8":{},"33-9":{}},"name":{},"text":{"29":{},"33":{}},"component":{}}],["pattern.html",{"_index":909,"title":{},"name":{},"text":{"33":{}},"component":{}}],["peopl",{"_index":765,"title":{},"name":{},"text":{"32":{}},"component":{}}],["perform",{"_index":490,"title":{},"name":{},"text":{"20":{}},"component":{}}],["person",{"_index":763,"title":{},"name":{},"text":{"32":{},"33":{}},"component":{}}],["phrase",{"_index":82,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["phrase*_",{"_index":98,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["phrase_",{"_index":87,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["pick",{"_index":786,"title":{"33-12":{},"33-13":{}},"name":{},"text":{"33":{}},"component":{}}],["pictur",{"_index":736,"title":{},"name":{},"text":{"29":{}},"component":{}}],["pipeinto",{"_index":589,"title":{},"name":{},"text":{"23":{}},"component":{}}],["place",{"_index":548,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["play",{"_index":925,"title":{},"name":{},"text":{"33":{}},"component":{}}],["playbook",{"_index":197,"title":{},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{}}],["playbook.yml",{"_index":198,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["point",{"_index":139,"title":{},"name":{},"text":{"5":{},"10":{},"18":{},"33":{}},"component":{}}],["pointer",{"_index":803,"title":{},"name":{},"text":{"33":{}},"component":{}}],["polymorph",{"_index":531,"title":{},"name":{},"text":{"22":{}},"component":{}}],["possibl",{"_index":546,"title":{},"name":{},"text":{"22":{}},"component":{}}],["post",{"_index":518,"title":{},"name":{},"text":{"22":{}},"component":{}}],["press",{"_index":201,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["pretend",{"_index":950,"title":{},"name":{},"text":{"33":{}},"component":{}}],["previou",{"_index":383,"title":{},"name":{},"text":{"18":{},"22":{},"33":{}},"component":{}}],["previous",{"_index":840,"title":{},"name":{},"text":{"33":{}},"component":{}}],["primarili",{"_index":752,"title":{},"name":{},"text":{"31":{}},"component":{}}],["printfn",{"_index":316,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{}},"component":{}}],["problem",{"_index":295,"title":{"18-2":{}},"name":{},"text":{"20":{}},"component":{}}],["process",{"_index":144,"title":{},"name":{},"text":{"5":{},"10":{},"20":{},"31":{},"33":{}},"component":{}}],["produc",{"_index":142,"title":{},"name":{},"text":{"5":{},"10":{},"24":{},"28":{}},"component":{}}],["product",{"_index":721,"title":{},"name":{},"text":{"29":{},"33":{}},"component":{}}],["product456",{"_index":718,"title":{},"name":{},"text":{"29":{}},"component":{}}],["productid",{"_index":725,"title":{},"name":{},"text":{"29":{}},"component":{}}],["project",{"_index":258,"title":{},"name":{},"text":{"16":{},"17":{},"33":{}},"component":{}}],["projectstarterpack",{"_index":72,"title":{},"name":{},"text":{"16":{}},"component":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}}}],["project’",{"_index":830,"title":{},"name":{},"text":{"33":{}},"component":{}}],["pull",{"_index":918,"title":{},"name":{},"text":{"33":{}},"component":{}}],["push",{"_index":842,"title":{},"name":{},"text":{"33":{}},"component":{}}],["put",{"_index":447,"title":{},"name":{},"text":{"19":{},"23":{},"33":{}},"component":{}}],["r1",{"_index":722,"title":{},"name":{},"text":{"29":{}},"component":{}}],["r2",{"_index":723,"title":{},"name":{},"text":{"29":{}},"component":{}}],["r3",{"_index":724,"title":{},"name":{},"text":{"29":{}},"component":{}}],["reach",{"_index":398,"title":{},"name":{},"text":{"18":{},"33":{}},"component":{}}],["reachabl",{"_index":779,"title":{"33-5":{}},"name":{},"text":{"33":{}},"component":{}}],["read",{"_index":953,"title":{},"name":{},"text":{"33":{}},"component":{}}],["reader",{"_index":224,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["real",{"_index":525,"title":{},"name":{},"text":{"22":{}},"component":{}}],["realiz",{"_index":508,"title":{},"name":{},"text":{"21":{},"33":{}},"component":{}}],["realli",{"_index":537,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["reason",{"_index":502,"title":{},"name":{},"text":{"20":{},"33":{}},"component":{}}],["rebas",{"_index":784,"title":{"33-11":{},"33-13":{},"33-14":{}},"name":{},"text":{"33":{}},"component":{}}],["rebase.html",{"_index":938,"title":{},"name":{},"text":{"33":{}},"component":{}}],["recogn",{"_index":141,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["record",{"_index":921,"title":{},"name":{},"text":{"33":{}},"component":{}}],["refer",{"_index":140,"title":{"16-4":{},"17-2":{},"33-3":{},"33-5":{}},"name":{},"text":{"5":{},"10":{},"16":{},"17":{},"33":{}},"component":{}}],["regardless",{"_index":147,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["relat",{"_index":796,"title":{},"name":{},"text":{"33":{}},"component":{}}],["rememb",{"_index":507,"title":{},"name":{},"text":{"21":{},"33":{}},"component":{}}],["remot",{"_index":826,"title":{},"name":{},"text":{"33":{}},"component":{}}],["render",{"_index":151,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["replac",{"_index":118,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["replay",{"_index":933,"title":{},"name":{},"text":{"33":{}},"component":{}}],["repositori",{"_index":798,"title":{},"name":{},"text":{"33":{}},"component":{}}],["requir",{"_index":464,"title":{},"name":{},"text":{"19":{},"24":{},"31":{}},"component":{}}],["rescu",{"_index":730,"title":{},"name":{},"text":{"29":{}},"component":{}}],["reset",{"_index":36,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"11":{},"33":{}},"component":{}}],["result",{"_index":92,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"11":{},"18":{},"20":{},"21":{},"22":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["result1",{"_index":681,"title":{},"name":{},"text":{"27":{}},"component":{}}],["result2",{"_index":683,"title":{},"name":{},"text":{"27":{}},"component":{}}],["result3",{"_index":685,"title":{},"name":{},"text":{"27":{}},"component":{}}],["return",{"_index":323,"title":{},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["returnfrom",{"_index":472,"title":{},"name":{},"text":{"19":{}},"component":{}}],["rewrap",{"_index":435,"title":{},"name":{},"text":{"19":{},"22":{},"29":{}},"component":{}}],["rewrit",{"_index":637,"title":{},"name":{},"text":{"25":{},"33":{}},"component":{}}],["right",{"_index":174,"title":{},"name":{},"text":{"5":{},"10":{},"19":{},"21":{},"33":{}},"component":{}}],["root",{"_index":270,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{}}],["rule",{"_index":425,"title":{"28":{}},"name":{},"text":{"18":{},"22":{},"28":{}},"component":{}}],["run",{"_index":474,"title":{"20":{}},"name":{},"text":{"20":{},"33":{}},"component":{}}],["runresult",{"_index":495,"title":{},"name":{},"text":{"20":{}},"component":{}}],["s",{"_index":726,"title":{},"name":{},"text":{"29":{},"31":{}},"component":{}}],["safe",{"_index":572,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sam'",{"_index":155,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["same",{"_index":428,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"24":{},"28":{},"30":{},"33":{}},"component":{}}],["sample1",{"_index":604,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sample2",{"_index":619,"title":{},"name":{},"text":{"24":{}},"component":{}}],["sample3_introducingzero",{"_index":755,"title":{},"name":{},"text":{"31":{}},"component":{}}],["sam’",{"_index":157,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["sam␁",{"_index":156,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["save",{"_index":226,"title":{},"name":{},"text":{"6":{},"11":{},"33":{}},"component":{}}],["savepoint",{"_index":780,"title":{"33-6":{},"33-9":{}},"name":{},"text":{},"component":{}}],["say",{"_index":944,"title":{},"name":{},"text":{"33":{}},"component":{}}],["scari",{"_index":41,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["scenario",{"_index":858,"title":{},"name":{},"text":{"33":{}},"component":{}}],["scene",{"_index":521,"title":{},"name":{},"text":{"22":{},"24":{},"29":{},"31":{}},"component":{}}],["scienc",{"_index":532,"title":{},"name":{},"text":{"22":{}},"component":{}}],["scott",{"_index":769,"title":{},"name":{},"text":{"32":{}},"component":{}}],["scout",{"_index":781,"title":{"33-8":{}},"name":{},"text":{"33":{}},"component":{}}],["search",{"_index":795,"title":{},"name":{},"text":{"33":{}},"component":{}}],["second",{"_index":376,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{}}],["secret",{"_index":888,"title":{},"name":{},"text":{"33":{}},"component":{}}],["section",{"_index":146,"title":{},"name":{},"text":{"5":{},"10":{},"33":{},"34":{}},"component":{}}],["see",{"_index":47,"title":{},"name":{},"text":{"2":{},"7":{},"22":{},"29":{},"33":{}},"component":{}}],["seemann",{"_index":774,"title":{},"name":{},"text":{"32":{}},"component":{}}],["select",{"_index":205,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["selector",{"_index":260,"title":{},"name":{},"text":{"16":{}},"component":{}}],["sens",{"_index":759,"title":{},"name":{},"text":{"31":{}},"component":{}}],["sensibl",{"_index":557,"title":{},"name":{},"text":{"22":{}},"component":{}}],["separ",{"_index":109,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["seper",{"_index":115,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["seq",{"_index":748,"title":{},"name":{},"text":{"30":{},"31":{}},"component":{}}],["sequenc",{"_index":618,"title":{},"name":{},"text":{"24":{},"33":{}},"component":{}}],["sequenti",{"_index":302,"title":{"18-4":{}},"name":{},"text":{"18":{},"31":{}},"component":{}}],["seri",{"_index":379,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["server",{"_index":850,"title":{},"name":{},"text":{"33":{}},"component":{}}],["set",{"_index":189,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["setup",{"_index":818,"title":{},"name":{},"text":{"33":{}},"component":{}}],["sever",{"_index":960,"title":{},"name":{},"text":{"33":{}},"component":{}}],["sha",{"_index":869,"title":{},"name":{},"text":{"33":{}},"component":{}}],["shamelessli",{"_index":766,"title":{},"name":{},"text":{"32":{}},"component":{}}],["share",{"_index":912,"title":{},"name":{},"text":{"33":{}},"component":{}}],["shell",{"_index":959,"title":{},"name":{},"text":{"33":{}},"component":{}}],["short",{"_index":110,"title":{},"name":{},"text":{"4":{},"9":{},"22":{},"33":{}},"component":{}}],["shortcut",{"_index":210,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["show",{"_index":223,"title":{},"name":{},"text":{"6":{},"11":{},"33":{}},"component":{}}],["shown",{"_index":955,"title":{},"name":{},"text":{"33":{}},"component":{}}],["side",{"_index":264,"title":{},"name":{},"text":{"16":{},"18":{},"19":{},"20":{},"21":{},"23":{}},"component":{}}],["sidebar",{"_index":106,"title":{"4":{},"9":{},"4-1":{},"9-1":{}},"name":{"4":{},"9":{}},"text":{"4":{},"9":{}},"component":{}}],["signatur",{"_index":600,"title":{},"name":{},"text":{"24":{},"30":{}},"component":{}}],["similar",{"_index":514,"title":{},"name":{},"text":{"21":{}},"component":{}}],["simpl",{"_index":756,"title":{},"name":{},"text":{"31":{}},"component":{}}],["simplest",{"_index":545,"title":{},"name":{},"text":{"22":{}},"component":{}}],["simplifi",{"_index":690,"title":{},"name":{},"text":{"27":{},"33":{}},"component":{}}],["simul",{"_index":787,"title":{"33-13":{}},"name":{},"text":{"33":{}},"component":{}}],["singl",{"_index":175,"title":{},"name":{},"text":{"5":{},"10":{},"20":{},"24":{},"27":{},"33":{}},"component":{}}],["site",{"_index":247,"title":{"16-3":{}},"name":{},"text":{"16":{}},"component":{}}],["site.yml",{"_index":275,"title":{},"name":{},"text":{"16":{}},"component":{}}],["site’",{"_index":274,"title":{},"name":{},"text":{"16":{}},"component":{}}],["socket",{"_index":32,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["softwar",{"_index":847,"title":{},"name":{},"text":{"33":{}},"component":{}}],["solut",{"_index":465,"title":{},"name":{},"text":{"19":{}},"component":{}}],["some(%a",{"_index":318,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"30":{},"31":{}},"component":{}}],["some(top/bottom",{"_index":582,"title":{},"name":{},"text":{"23":{}},"component":{}}],["someon",{"_index":33,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["someth",{"_index":488,"title":{},"name":{},"text":{"20":{},"23":{},"26":{},"27":{},"33":{}},"component":{}}],["sometim",{"_index":459,"title":{},"name":{},"text":{"19":{},"27":{}},"component":{}}],["somewher",{"_index":924,"title":{},"name":{},"text":{"33":{}},"component":{}}],["sort",{"_index":436,"title":{},"name":{},"text":{"19":{},"22":{},"29":{}},"component":{}}],["sourc",{"_index":69,"title":{"16-1":{},"17-1":{}},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"16":{},"17":{},"33":{}},"component":{}}],["space",{"_index":169,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["special",{"_index":16,"title":{"5":{},"10":{},"5-1":{},"10-1":{}},"name":{"5":{},"10":{}},"text":{"2":{},"5":{},"7":{},"10":{}},"component":{}}],["specif",{"_index":251,"title":{"16-6":{},"17-4":{}},"name":{},"text":{"33":{}},"component":{}}],["spot",{"_index":862,"title":{},"name":{},"text":{"33":{}},"component":{}}],["spring",{"_index":889,"title":{},"name":{},"text":{"33":{}},"component":{}}],["standard",{"_index":371,"title":{},"name":{},"text":{"18":{}},"component":{}}],["start",{"_index":254,"title":{},"name":{},"text":{"16":{},"18":{},"26":{},"28":{},"33":{}},"component":{}}],["start_pag",{"_index":273,"title":{},"name":{},"text":{"16":{}},"component":{}}],["starter",{"_index":244,"title":{"16":{},"16-2":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["state",{"_index":804,"title":{},"name":{},"text":{"33":{}},"component":{}}],["statement",{"_index":630,"title":{},"name":{},"text":{"25":{},"26":{},"27":{}},"component":{}}],["step",{"_index":234,"title":{"18-4":{}},"name":{},"text":{"12":{},"14":{},"18":{},"20":{},"25":{},"29":{},"31":{}},"component":{}}],["stick",{"_index":29,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["still",{"_index":875,"title":{},"name":{},"text":{"33":{}},"component":{}}],["stop",{"_index":480,"title":{},"name":{},"text":{"20":{}},"component":{}}],["store",{"_index":269,"title":{},"name":{},"text":{"16":{},"19":{},"22":{},"29":{}},"component":{}}],["strategi",{"_index":919,"title":{},"name":{},"text":{"33":{}},"component":{}}],["string",{"_index":710,"title":{},"name":{},"text":{"29":{}},"component":{}}],["structur",{"_index":305,"title":{"18-5":{}},"name":{},"text":{"18":{},"31":{}},"component":{}}],["studi",{"_index":764,"title":{"34":{}},"name":{},"text":{"32":{},"34":{}},"component":{}}],["studynot",{"_index":430,"title":{},"name":{},"text":{},"component":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{}}}],["stuff",{"_index":797,"title":{},"name":{},"text":{"33":{}},"component":{}}],["style",{"_index":5,"title":{"2-1":{},"7-1":{}},"name":{},"text":{"2":{},"3":{},"7":{},"8":{}},"component":{}}],["sub",{"_index":237,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{}},"component":{}}],["submerg",{"_index":728,"title":{},"name":{},"text":{"29":{}},"component":{}}],["substitut",{"_index":145,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["subtl",{"_index":348,"title":{},"name":{},"text":{"18":{}},"component":{}}],["subworkflow0",{"_index":450,"title":{},"name":{},"text":{"19":{}},"component":{}}],["subworkflow1",{"_index":453,"title":{},"name":{},"text":{"19":{}},"component":{}}],["subworkflow2",{"_index":458,"title":{},"name":{},"text":{"19":{}},"component":{}}],["succe",{"_index":374,"title":{},"name":{},"text":{"18":{},"27":{}},"component":{}}],["success",{"_index":299,"title":{"18-3":{}},"name":{},"text":{"18":{},"27":{},"29":{},"31":{}},"component":{}}],["success/error",{"_index":706,"title":{},"name":{},"text":{"29":{}},"component":{}}],["success/failur",{"_index":421,"title":{},"name":{},"text":{"18":{}},"component":{}}],["such",{"_index":64,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"22":{}},"component":{}}],["sugar",{"_index":561,"title":{"24-2":{}},"name":{},"text":{"23":{}},"component":{}}],["summar",{"_index":939,"title":{},"name":{},"text":{"33":{}},"component":{}}],["supplement",{"_index":113,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["sure",{"_index":540,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["surfac",{"_index":801,"title":{},"name":{},"text":{"33":{}},"component":{}}],["survey",{"_index":204,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["symbol",{"_index":116,"title":{"5":{},"10":{},"5-1":{},"10-1":{}},"name":{},"text":{"5":{},"10":{}},"component":{}}],["syntact",{"_index":560,"title":{"24-2":{}},"name":{},"text":{"23":{}},"component":{}}],["syntax",{"_index":117,"title":{"5-1":{},"10-1":{},"16-4":{},"17-2":{}},"name":{},"text":{"5":{},"10":{},"16":{},"17":{},"23":{},"30":{},"33":{}},"component":{}}],["system",{"_index":287,"title":{},"name":{},"text":{"17":{}},"component":{}}],["t",{"_index":745,"title":{},"name":{},"text":{"30":{}},"component":{}}],["tab",{"_index":218,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["tabl",{"_index":121,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["tack",{"_index":866,"title":{},"name":{},"text":{"33":{}},"component":{}}],["tag",{"_index":814,"title":{},"name":{},"text":{"33":{}},"component":{}}],["take",{"_index":468,"title":{},"name":{},"text":{"19":{},"22":{},"24":{},"30":{},"33":{}},"component":{}}],["target",{"_index":249,"title":{"16-4":{},"16-5":{},"16-6":{},"17-2":{},"17-3":{},"17-4":{}},"name":{},"text":{},"component":{}}],["tell",{"_index":740,"title":{},"name":{},"text":{"29":{},"33":{}},"component":{}}],["temporari",{"_index":896,"title":{},"name":{},"text":{"33":{}},"component":{}}],["terminolog",{"_index":533,"title":{},"name":{},"text":{"22":{}},"component":{}}],["test",{"_index":342,"title":{},"name":{},"text":{"18":{},"27":{},"30":{},"31":{},"33":{}},"component":{}}],["text",{"_index":15,"title":{"3":{},"8":{}},"name":{"3":{},"8":{}},"text":{"2":{},"4":{},"7":{},"9":{}},"component":{}}],["th##i",{"_index":103,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["that’",{"_index":839,"title":{},"name":{},"text":{"33":{}},"component":{}}],["then_thi",{"_index":964,"title":{},"name":{},"text":{"33":{}},"component":{}}],["they’ll",{"_index":923,"title":{},"name":{},"text":{"33":{}},"component":{}}],["thing",{"_index":519,"title":{},"name":{},"text":{"22":{},"27":{},"30":{},"33":{}},"component":{}}],["think",{"_index":527,"title":{},"name":{},"text":{"22":{},"33":{}},"component":{}}],["third",{"_index":666,"title":{},"name":{},"text":{"27":{}},"component":{}}],["this.bind(a",{"_index":401,"title":{},"name":{},"text":{"18":{}},"component":{}}],["this.bind(list,f",{"_index":606,"title":{},"name":{},"text":{"24":{}},"component":{}}],["this.bind(lst",{"_index":623,"title":{},"name":{},"text":{"24":{}},"component":{}}],["this.bind(lst,f",{"_index":620,"title":{},"name":{},"text":{"24":{}},"component":{}}],["this.bind(m",{"_index":352,"title":{},"name":{},"text":{"18":{},"20":{},"23":{}},"component":{}}],["this.bind(m,f",{"_index":357,"title":{},"name":{},"text":{"18":{}},"component":{}}],["this.bind(x",{"_index":635,"title":{},"name":{},"text":{"25":{}},"component":{}}],["this.bind(x,f",{"_index":312,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"26":{},"29":{},"30":{},"31":{}},"component":{}}],["this.combin",{"_index":358,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["this.combine(a,b",{"_index":330,"title":{},"name":{},"text":{"18":{}},"component":{}}],["this.delay(f",{"_index":332,"title":{},"name":{},"text":{"18":{},"20":{},"27":{}},"component":{}}],["this.for(lst",{"_index":622,"title":{},"name":{},"text":{"24":{}},"component":{}}],["this.for(m,f",{"_index":356,"title":{},"name":{},"text":{"18":{}},"component":{}}],["this.return",{"_index":400,"title":{},"name":{},"text":{"18":{}},"component":{}}],["this.return(x",{"_index":322,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"31":{}},"component":{}}],["this.returnfrom(x",{"_index":325,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"27":{},"30":{},"31":{}},"component":{}}],["this.run(functorun",{"_index":494,"title":{},"name":{},"text":{"20":{}},"component":{}}],["this.yield(x",{"_index":328,"title":{},"name":{},"text":{"18":{},"21":{},"30":{}},"component":{}}],["this.yieldfrom(m",{"_index":355,"title":{},"name":{},"text":{"18":{}},"component":{}}],["this.yieldfrom(x",{"_index":329,"title":{},"name":{},"text":{"18":{},"21":{},"30":{}},"component":{}}],["this.zero",{"_index":327,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"30":{},"31":{}},"component":{}}],["those",{"_index":947,"title":{},"name":{},"text":{"33":{}},"component":{}}],["thought",{"_index":865,"title":{},"name":{},"text":{"33":{}},"component":{}}],["three",{"_index":131,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"22":{},"26":{},"27":{},"33":{}},"component":{}}],["through",{"_index":882,"title":{},"name":{},"text":{"33":{}},"component":{}}],["time",{"_index":631,"title":{},"name":{},"text":{"25":{},"26":{},"33":{}},"component":{}}],["timelin",{"_index":949,"title":{},"name":{},"text":{"33":{}},"component":{}}],["tip",{"_index":24,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["titl",{"_index":58,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["tm",{"_index":177,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["togeth",{"_index":378,"title":{},"name":{},"text":{"18":{},"23":{},"29":{},"33":{}},"component":{}}],["tool",{"_index":856,"title":{},"name":{},"text":{"33":{}},"component":{}}],["top",{"_index":580,"title":{},"name":{},"text":{"23":{},"26":{},"29":{}},"component":{}}],["top/bottom",{"_index":644,"title":{},"name":{},"text":{"26":{}},"component":{}}],["topic",{"_index":966,"title":{},"name":{},"text":{"34":{}},"component":{}}],["trace",{"_index":336,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"30":{},"31":{}},"component":{}}],["trace.combine(expr1",{"_index":411,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace.combine(expr2",{"_index":412,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace.combine(trace.yield(x",{"_index":340,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace.delay(fun",{"_index":339,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace.return(1",{"_index":413,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace.yield(i",{"_index":341,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace.zero",{"_index":409,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trace2",{"_index":337,"title":{},"name":{},"text":{"18":{}},"component":{}}],["tracebuild",{"_index":310,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"30":{},"31":{}},"component":{}}],["tracebuilder1",{"_index":399,"title":{},"name":{},"text":{"18":{}},"component":{}}],["trademark",{"_index":176,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["trap",{"_index":739,"title":{},"name":{},"text":{"29":{}},"component":{}}],["treat",{"_index":393,"title":{},"name":{},"text":{"18":{},"22":{}},"component":{}}],["tri",{"_index":663,"title":{},"name":{},"text":{"27":{},"33":{},"34":{}},"component":{}}],["trigger",{"_index":878,"title":{},"name":{},"text":{"33":{}},"component":{}}],["true",{"_index":403,"title":{},"name":{},"text":{"18":{}},"component":{}}],["tsuccess",{"_index":733,"title":{},"name":{},"text":{"29":{}},"component":{}}],["two",{"_index":166,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"18":{},"27":{},"30":{},"33":{}},"component":{}}],["type",{"_index":107,"title":{"22":{},"24":{},"28":{},"29":{}},"name":{},"text":{"4":{},"9":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"33":{}},"component":{}}],["type(maybebuild",{"_index":650,"title":{},"name":{},"text":{"26":{}},"component":{}}],["typic",{"_index":473,"title":{},"name":{},"text":{"19":{}},"component":{}}],["typo",{"_index":863,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ugli",{"_index":727,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ui",{"_index":184,"title":{},"name":{"6":{},"11":{}},"text":{"6":{},"11":{}},"component":{}}],["unchang",{"_index":522,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unclear",{"_index":902,"title":{},"name":{},"text":{"33":{}},"component":{}}],["uncov",{"_index":861,"title":{},"name":{},"text":{"33":{}},"component":{}}],["undo",{"_index":503,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unicod",{"_index":124,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["union",{"_index":707,"title":{},"name":{},"text":{"29":{}},"component":{}}],["unit",{"_index":390,"title":{},"name":{},"text":{"18":{},"21":{},"31":{}},"component":{}}],["unnecessari",{"_index":477,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unord",{"_index":238,"title":{"13":{},"15":{},"13-1":{},"13-2":{},"15-1":{},"15-2":{}},"name":{"13":{},"15":{}},"text":{"13":{},"15":{}},"component":{}}],["unsur",{"_index":898,"title":{},"name":{},"text":{"33":{}},"component":{}}],["until",{"_index":397,"title":{},"name":{},"text":{"18":{}},"component":{}}],["unwant",{"_index":486,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unwrap",{"_index":324,"title":{},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["unwrappedvalue1",{"_index":456,"title":{},"name":{},"text":{"19":{}},"component":{}}],["unwrappedvalue2",{"_index":457,"title":{},"name":{},"text":{"19":{}},"component":{}}],["up",{"_index":586,"title":{},"name":{},"text":{"23":{},"26":{},"33":{}},"component":{}}],["up/us",{"_index":937,"title":{},"name":{},"text":{"33":{}},"component":{}}],["us",{"_index":60,"title":{"28":{},"33-13":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"31":{},"33":{}},"component":{}}],["user",{"_index":181,"title":{"6":{},"11":{}},"name":{},"text":{"6":{},"11":{}},"component":{}}],["valu",{"_index":347,"title":{},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["value1",{"_index":343,"title":{},"name":{},"text":{"18":{}},"component":{}}],["value2",{"_index":369,"title":{},"name":{},"text":{"18":{}},"component":{}}],["variant",{"_index":466,"title":{},"name":{},"text":{"19":{}},"component":{}}],["variou",{"_index":792,"title":{},"name":{},"text":{"33":{}},"component":{}}],["veri",{"_index":513,"title":{},"name":{},"text":{"21":{},"33":{}},"component":{}}],["version",{"_index":192,"title":{"16-5":{},"16-6":{},"17-3":{},"17-4":{}},"name":{},"text":{"6":{},"11":{},"16":{},"17":{},"21":{},"23":{},"24":{},"31":{},"33":{}},"component":{}}],["vertic",{"_index":158,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["view",{"_index":808,"title":{},"name":{},"text":{"33":{}},"component":{}}],["visit",{"_index":887,"title":{},"name":{},"text":{"33":{}},"component":{}}],["visual",{"_index":108,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["w",{"_index":584,"title":{},"name":{},"text":{"23":{}},"component":{}}],["walk",{"_index":881,"title":{},"name":{},"text":{"33":{}},"component":{}}],["want",{"_index":462,"title":{},"name":{},"text":{"19":{},"20":{},"25":{},"27":{},"29":{},"33":{}},"component":{}}],["warn",{"_index":27,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["way",{"_index":417,"title":{},"name":{},"text":{"18":{},"20":{},"22":{},"23":{},"25":{},"29":{},"33":{}},"component":{}}],["websit",{"_index":965,"title":{},"name":{},"text":{"34":{}},"component":{}}],["welcom",{"_index":252,"title":{"16":{}},"name":{},"text":{},"component":{}}],["well",{"_index":136,"title":{},"name":{},"text":{"5":{},"10":{},"33":{}},"component":{}}],["weren’t",{"_index":864,"title":{},"name":{},"text":{"33":{}},"component":{}}],["we’v",{"_index":570,"title":{},"name":{},"text":{"23":{}},"component":{}}],["whatev",{"_index":416,"title":{},"name":{},"text":{"18":{},"33":{}},"component":{}}],["wherev",{"_index":926,"title":{},"name":{},"text":{"33":{}},"component":{}}],["whether",{"_index":148,"title":{},"name":{},"text":{"5":{},"10":{},"20":{},"33":{}},"component":{}}],["whole",{"_index":758,"title":{},"name":{},"text":{"31":{}},"component":{}}],["win",{"_index":380,"title":{},"name":{},"text":{"18":{}},"component":{}}],["window",{"_index":222,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["without",{"_index":498,"title":{},"name":{},"text":{"20":{},"21":{},"31":{},"33":{}},"component":{}}],["wlaschin",{"_index":770,"title":{},"name":{},"text":{"32":{}},"component":{}}],["won",{"_index":423,"title":{},"name":{},"text":{"18":{}},"component":{}}],["word",{"_index":83,"title":{},"name":{},"text":{"3":{},"5":{},"8":{},"10":{},"19":{},"23":{},"24":{},"33":{}},"component":{}}],["worflow",{"_index":301,"title":{"18-4":{}},"name":{},"text":{},"component":{}}],["work",{"_index":914,"title":{},"name":{},"text":{"33":{}},"component":{}}],["workflow",{"_index":298,"title":{"28":{},"18-3":{},"18-5":{},"24-1":{}},"name":{},"text":{"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"31":{}},"component":{}}],["workflowrulesforwrappertyp",{"_index":700,"title":{},"name":{"28":{}},"text":{},"component":{}}],["world",{"_index":406,"title":{},"name":{},"text":{"18":{},"31":{}},"component":{}}],["wrap",{"_index":394,"title":{},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"28":{},"30":{},"31":{}},"component":{}}],["wrapper",{"_index":437,"title":{"22":{},"24":{},"28":{},"29":{}},"name":{},"text":{"19":{},"22":{},"29":{}},"component":{}}],["wrappertyp",{"_index":703,"title":{},"name":{"29":{}},"text":{},"component":{}}],["write",{"_index":629,"title":{},"name":{},"text":{"25":{},"29":{},"33":{}},"component":{}}],["written",{"_index":387,"title":{},"name":{},"text":{"18":{}},"component":{}}],["x",{"_index":314,"title":{},"name":{},"text":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"33":{}},"component":{}}],["xml",{"_index":135,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["xref",{"_index":278,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{}}],["xref:1.0@azurearchitecturepack:modul",{"_index":292,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:1.0@azurearchitecturestarterpack::index.adoc",{"_index":283,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xref:azurearchitecturepack:modul",{"_index":291,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:azurearchitecturestarterpack::index.adoc",{"_index":281,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xref:index.adoc",{"_index":279,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xref:modul",{"_index":289,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:overview.adoc",{"_index":288,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:root:index.adoc",{"_index":280,"title":{},"name":{},"text":{"16":{}},"component":{}}],["y",{"_index":338,"title":{},"name":{},"text":{"18":{},"19":{},"22":{},"23":{},"24":{},"25":{},"26":{},"29":{}},"component":{}}],["yield",{"_index":296,"title":{"30":{},"18-2":{}},"name":{},"text":{"18":{},"20":{},"21":{},"30":{}},"component":{}}],["yieldmethod",{"_index":743,"title":{},"name":{"30":{}},"text":{},"component":{}}],["york",{"_index":678,"title":{},"name":{},"text":{"27":{}},"component":{}}],["you'll",{"_index":34,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["yourself",{"_index":879,"title":{},"name":{},"text":{"33":{}},"component":{}}],["you’ll",{"_index":53,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["you’r",{"_index":664,"title":{},"name":{},"text":{"27":{},"33":{}},"component":{}}],["you’v",{"_index":844,"title":{},"name":{},"text":{"33":{}},"component":{}}],["z",{"_index":563,"title":{},"name":{},"text":{"23":{},"25":{},"26":{}},"component":{}}],["zero",{"_index":308,"title":{"31":{},"18-6":{}},"name":{},"text":{"18":{},"20":{},"21":{},"30":{},"31":{},"33":{}},"component":{}}],["zeromethod",{"_index":750,"title":{},"name":{"31":{}},"text":{},"component":{}}],["zoom",{"_index":229,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"This is the home page","title":"Home Page","component":"homesite","version":"1.0.0","name":"index","url":"/homesite/1.0.0/index.html","titles":[]},"2":{"id":2,"text":"An admonition, also known as a notice, helps draw attention to a line or block of text with a special lable or icon. Asciidoctor comes in with five built-in styles. NOTE TIP IMPORTANT CAUTION WARNING Basic admonitions CAUTION: Don't stick forks in electric sockets. TIP: After someone sticks a fork in a socket, you'll need to reset the circuit in the breaker box in the dark and scary basement. WARNING: Never go into the basement. IMPORTANT: A monster lives in the basement. NOTE: If you go into the basement, see if you can find Kenny's orange parka. Don’t stick forks in electric sockets. After someone sticks a fork in a socket, you’ll need to reset the circuit in the breaker box in the dark and scary basement. Never go into the basement. A monster lives in the basement. If you go into the basement, see if you can find Kenny’s orange parka. Example block masquerading as an admonition [IMPORTANT] .Optional title ==== Use an example block to create an admonition that contains complex content, such as (but not limited to): * Lists * Multiple paragraphs * Source code * Images ==== Optional title Use an example block to create an admonition that contains complex content, such as (but not limited to): Lists Multiple paragraphs Source code Images","title":"Admonition","component":"projectstarterpack","version":"1.0.0","name":"admonition","url":"/projectstarterpack/1.0.0/admonition.html","titles":[{"text":"Admonition Styles","hash":"_admonition_styles","id":1},{"text":"Basic Admonition","hash":"_basic_admonition","id":2},{"text":"Complex admonition","hash":"_complex_admonition","id":3}]},"3":{"id":3,"text":"You can add the following inline styles to your content: Bold Italic Monospace Highlight You can bold and italic entire phrases, a word, and characters in a word. Bold and italic inline formatting *bold phrase* & **char**acter**s** _italic phrase_ & __char__acter__s__ *_bold italic phrase_* & **__char__**acter**__s__** Example 1. Result bold phrase & characters italic phrase & characters bold italic phrase & characters You can monospace entire phrases, a word, and characters in a word. Monospace inline formatting `monospace phrase` * ``char``acter``s`` `*monospace bold phrase*` & ``**char**``acter``**s**`` `_monospace italic phrase_` & ``__char__``acter``__s__`` `_*monospace bold italic phrase*_` & ``**__char__**``acter``**__s__**`` Example 2. Result monospace phrase * characters monospace bold phrase & characters monospace italic phrase & characters *monospace bold italic phrase* & characters You can highlight entire phrases, a word, and characters in a word. Highlight inline formatting Let's #highlight this phrase# and part of th##is##. Example 3. Result Let’s highlight this phrase and part of this.","title":"Inline Text Formatting","component":"projectstarterpack","version":"1.0.0","name":"inline-text-formatting","url":"/projectstarterpack/1.0.0/inline-text-formatting.html","titles":[{"text":"Bold and italic","hash":"_bold_and_italic","id":1},{"text":"Monospace","hash":"_monospace","id":2},{"text":"Highlight","hash":"_highlight","id":3}]},"4":{"id":4,"text":"A sidebar can be titled and contain any type of content such as source code and images. Sidebar .Optional title of sidebar **** Sidebars are used to visually separate short, auxiliary bits of content that supplement the main text. **** Optional title of sidebar Sidebars are used to visually seperate short, auxiliary bits of content that supplement the main text.","title":"Sidebar","component":"projectstarterpack","version":"1.0.0","name":"sidebar","url":"/projectstarterpack/1.0.0/sidebar.html","titles":[{"text":"Sidebar block","hash":"_sidebar_block","id":1}]},"5":{"id":5,"text":"Special character and symbol replacement is built into Asciidoctor. During conversion, the characters in the table below are replaced with the appropriate character or Unicode entity. Replacement of special characters and symbols occur in all inline and block elements except for comments and passthroughs. The three special characters, , and &, are always replaced first. HTML and XML character entities as well as decimal and hexadecimal Unicode code point references are also recognized and replaced. For example, to produce the § symbol you can use §, §, or § (HTML only). When the document is processed, the replacements substitution will replace the section symbol reference ,regardless of whether it is a character entity reference or a numeric character reference, with §. Name Syntax Replacement Rendered Notes Ampersand & & & Apostrophe, curved Sam's Sam␁s Sam’s The vertical form apostrophe is replace with the curved form apostrophe Copyright (C) © © Ellipses ... … …​ Em dash -- — — Only replaced if between two word characters, between a word character and a line boundary, or flanked by spaces. Greater than > > > Left double arrow ⇒ ⇒ Right single arrow -> → → Trademark (TM) ™ ™","title":"Special Characters and Symbols","component":"projectstarterpack","version":"1.0.0","name":"special-characters","url":"/projectstarterpack/1.0.0/special-characters.html","titles":[{"text":"Special character and symbol syntax","hash":"_special_character_and_symbol_syntax","id":1}]},"6":{"id":6,"text":"Asciidoctor has three user interface (UI) macros: Button btn:[] Keyboard kbd:[] Menu menu:[] The :experimental: attribute must be set in the document header, component version descriptor (antora.yml), or globally in your Antora playbook (antora-playbook.yml) to enable UI macros. Communicate that a user should press a button with the button macro. Button UI macro Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Result Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Create keyboard shortcuts with the keyboard macro. Keyboard UI macro Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Result Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Show readers how to select a menu item with the menu macro. Menu UI macro To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting. Result To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting.","title":"User Interface Macros","component":"projectstarterpack","version":"1.0.0","name":"ui-macros","url":"/projectstarterpack/1.0.0/ui-macros.html","titles":[{"text":"Button","hash":"_button","id":1},{"text":"Keyboard","hash":"_keyboard","id":2},{"text":"Menu","hash":"_menu","id":3}]},"7":{"id":7,"text":"An admonition, also known as a notice, helps draw attention to a line or block of text with a special lable or icon. Asciidoctor comes in with five built-in styles. NOTE TIP IMPORTANT CAUTION WARNING Basic admonitions CAUTION: Don't stick forks in electric sockets. TIP: After someone sticks a fork in a socket, you'll need to reset the circuit in the breaker box in the dark and scary basement. WARNING: Never go into the basement. IMPORTANT: A monster lives in the basement. NOTE: If you go into the basement, see if you can find Kenny's orange parka. Don’t stick forks in electric sockets. After someone sticks a fork in a socket, you’ll need to reset the circuit in the breaker box in the dark and scary basement. Never go into the basement. A monster lives in the basement. If you go into the basement, see if you can find Kenny’s orange parka. Example block masquerading as an admonition [IMPORTANT] .Optional title ==== Use an example block to create an admonition that contains complex content, such as (but not limited to): * Lists * Multiple paragraphs * Source code * Images ==== Optional title Use an example block to create an admonition that contains complex content, such as (but not limited to): Lists Multiple paragraphs Source code Images","title":"Admonition","component":"projectstarterpack","version":"1.0.0","name":"admonition","url":"/projectstarterpack/1.0.0/root/admonition.html","titles":[{"text":"Admonition Styles","hash":"_admonition_styles","id":1},{"text":"Basic Admonition","hash":"_basic_admonition","id":2},{"text":"Complex admonition","hash":"_complex_admonition","id":3}]},"8":{"id":8,"text":"You can add the following inline styles to your content: Bold Italic Monospace Highlight You can bold and italic entire phrases, a word, and characters in a word. Bold and italic inline formatting *bold phrase* & **char**acter**s** _italic phrase_ & __char__acter__s__ *_bold italic phrase_* & **__char__**acter**__s__** Example 1. Result bold phrase & characters italic phrase & characters bold italic phrase & characters You can monospace entire phrases, a word, and characters in a word. Monospace inline formatting `monospace phrase` * ``char``acter``s`` `*monospace bold phrase*` & ``**char**``acter``**s**`` `_monospace italic phrase_` & ``__char__``acter``__s__`` `_*monospace bold italic phrase*_` & ``**__char__**``acter``**__s__**`` Example 2. Result monospace phrase * characters monospace bold phrase & characters monospace italic phrase & characters *monospace bold italic phrase* & characters You can highlight entire phrases, a word, and characters in a word. Highlight inline formatting Let's #highlight this phrase# and part of th##is##. Example 3. Result Let’s highlight this phrase and part of this.","title":"Inline Text Formatting","component":"projectstarterpack","version":"1.0.0","name":"inline-text-formatting","url":"/projectstarterpack/1.0.0/root/inline-text-formatting.html","titles":[{"text":"Bold and italic","hash":"_bold_and_italic","id":1},{"text":"Monospace","hash":"_monospace","id":2},{"text":"Highlight","hash":"_highlight","id":3}]},"9":{"id":9,"text":"A sidebar can be titled and contain any type of content such as source code and images. Sidebar .Optional title of sidebar **** Sidebars are used to visually separate short, auxiliary bits of content that supplement the main text. **** Optional title of sidebar Sidebars are used to visually seperate short, auxiliary bits of content that supplement the main text.","title":"Sidebar","component":"projectstarterpack","version":"1.0.0","name":"sidebar","url":"/projectstarterpack/1.0.0/root/sidebar.html","titles":[{"text":"Sidebar block","hash":"_sidebar_block","id":1}]},"10":{"id":10,"text":"Special character and symbol replacement is built into Asciidoctor. During conversion, the characters in the table below are replaced with the appropriate character or Unicode entity. Replacement of special characters and symbols occur in all inline and block elements except for comments and passthroughs. The three special characters, , and &, are always replaced first. HTML and XML character entities as well as decimal and hexadecimal Unicode code point references are also recognized and replaced. For example, to produce the § symbol you can use §, §, or § (HTML only). When the document is processed, the replacements substitution will replace the section symbol reference ,regardless of whether it is a character entity reference or a numeric character reference, with §. Name Syntax Replacement Rendered Notes Ampersand & & & Apostrophe, curved Sam's Sam␁s Sam’s The vertical form apostrophe is replace with the curved form apostrophe Copyright (C) © © Ellipses ... … …​ Em dash -- — — Only replaced if between two word characters, between a word character and a line boundary, or flanked by spaces. Greater than > > > Left double arrow ⇒ ⇒ Right single arrow -> → → Trademark (TM) ™ ™","title":"Special Characters and Symbols","component":"projectstarterpack","version":"1.0.0","name":"special-characters","url":"/projectstarterpack/1.0.0/root/special-characters.html","titles":[{"text":"Special character and symbol syntax","hash":"_special_character_and_symbol_syntax","id":1}]},"11":{"id":11,"text":"Asciidoctor has three user interface (UI) macros: Button btn:[] Keyboard kbd:[] Menu menu:[] The :experimental: attribute must be set in the document header, component version descriptor (antora.yml), or globally in your Antora playbook (antora-playbook.yml) to enable UI macros. Communicate that a user should press a button with the button macro. Button UI macro Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Result Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Create keyboard shortcuts with the keyboard macro. Keyboard UI macro Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Result Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Show readers how to select a menu item with the menu macro. Menu UI macro To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting. Result To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting.","title":"User Interface Macros","component":"projectstarterpack","version":"1.0.0","name":"ui-macros","url":"/projectstarterpack/1.0.0/root/ui-macros.html","titles":[{"text":"Button","hash":"_button","id":1},{"text":"Keyboard","hash":"_keyboard","id":2},{"text":"Menu","hash":"_menu","id":3}]},"12":{"id":12,"text":"Ordered list with title .Optional title of list . Step 1 . Step 2 . Step 3 Optional title of list Step 1 Step 2 Step 3 Ordered list with nested levels . Step 1 . Step 2 .. Step 2a .. Step 2b ... Sub-step 2b . Step 3 Step 1 Step 2 Step 2a Step 2b Sub-step 2b Step 3","title":"Ordered Lists","component":"projectstarterpack","version":"1.0.0","name":"ordered-list","url":"/projectstarterpack/1.0.0/lists/ordered-list.html","titles":[{"text":"Ordered list","hash":"_ordered_list","id":1},{"text":"Nested Ordered list","hash":"_nested_ordered_list","id":2}]},"13":{"id":13,"text":"Unordered list with title .Optional title of list * Item A * Item B * Item C Optional title of list Item A Item B Item C * Item A * Item B ** Item B1 ** Item B2 *** Sub-item of B2 * Item C Item A Item B Item B1 Item B2 Sub-item of B2 Item C","title":"Unordered Lists","component":"projectstarterpack","version":"1.0.0","name":"unordered-list","url":"/projectstarterpack/1.0.0/lists/unordered-list.html","titles":[{"text":"Unordered list","hash":"_unordered_list","id":1},{"text":"Nested unordered list","hash":"_nested_unordered_list","id":2}]},"14":{"id":14,"text":"Ordered list with title .Optional title of list . Step 1 . Step 2 . Step 3 Optional title of list Step 1 Step 2 Step 3 Ordered list with nested levels . Step 1 . Step 2 .. Step 2a .. Step 2b ... Sub-step 2b . Step 3 Step 1 Step 2 Step 2a Step 2b Sub-step 2b Step 3","title":"Ordered Lists","component":"projectstarterpack","version":"1.0.0","name":"ordered-list","url":"/projectstarterpack/1.0.0/root/lists/ordered-list.html","titles":[{"text":"Ordered list","hash":"_ordered_list","id":1},{"text":"Nested Ordered list","hash":"_nested_ordered_list","id":2}]},"15":{"id":15,"text":"Unordered list with title .Optional title of list * Item A * Item B * Item C Optional title of list Item A Item B Item C * Item A * Item B ** Item B1 ** Item B2 *** Sub-item of B2 * Item C Item A Item B Item B1 Item B2 Sub-item of B2 Item C","title":"Unordered Lists","component":"projectstarterpack","version":"1.0.0","name":"unordered-list","url":"/projectstarterpack/1.0.0/root/lists/unordered-list.html","titles":[{"text":"Unordered list","hash":"_unordered_list","id":1},{"text":"Nested unordered list","hash":"_nested_unordered_list","id":2}]},"16":{"id":16,"text":"This is the automatic start page for version *1-beta.1 of Azure Architecture Starter Pack. Azure Architecture Starter Pack is one of two documentation components in the Antora Demo. The other docs component, Project Starter Pack, can be accessed using the component selector menu (aka component drawer) at the bottom of the menu on the left side of the page. This page is sourced from the AsciiDoc file name index.adoc that is located at azurearchitecturestarterpack/docs/modules/ROOT/pages. This page is automatically used as the start page of Azure Architecture Starter Pack because it is stored in the ROOT module and named index.adoc. This page is used as the home page for the Antora Demo because it is assigned as the site start_page in the Demo site’s playbook file site.yml. To create a cross reference to this page from another page in the ROOT module of AzureArchitectureStarterPack, the xref syntax would be xref:index.adoc[]. To create a cross reference to this page from a page in Module One of AzureArchitectureStarterPack, the xref syntax would be xref:ROOT:index.adoc[]. To create a cross reference to the latest version of this page from a page in ProjectStarterPack, the xref syntax would be \\xref:azurearchitecturestarterpack::index.adoc. To create a cross reference to version 1.0 of this page from a page in ProjectStarterPack, the xref syntax would be xref:1.0@azurearchitecturestarterpack::index.adoc[]","title":"Welcome to Azure Architecture Starter Pack","component":"azurearchitecturestarterpack","version":"1","name":"index","url":"/azurearchitecturestarterpack/1/index.html","titles":[{"text":"Page source","hash":"_page_source","id":1},{"text":"Why is this the home page of Azure Architecture Starter Pack?","hash":"_why_is_this_the_home_page_of_azure_architecture_starter_pack","id":2},{"text":"Why is this the home page of the Antora Demo site?","hash":"_why_is_this_the_home_page_of_the_antora_demo_site","id":3},{"text":"Cross reference syntax to target this page","hash":"_cross_reference_syntax_to_target_this_page","id":4},{"text":"Always target the latest version of this page","hash":"_always_target_the_latest_version_of_this_page","id":5},{"text":"Target a specific version of this page","hash":"_target_a_specific_version_of_this_page","id":6}]},"17":{"id":17,"text":"This is version 1-beta.1 of Module One in Component B. This page is sourced from azurearchitecturestarterpack/docs/modules/module-one/pages/overview.adoc. To create a cross reference to this page from another page in Module One, the xref system would be xref:overview.adoc[]. To create a cross reference to this page from a page in the ROOT module of Azure Architecture Pack, the xref system would be xref:module-one:overview.adoc[]. To create a cross reference to the latest version of this page from a page in Project Starter Pack, the xref syntax would be xref:azurearchitecturepack:module-one:overview.adoc[]. To create a cross reference to version 1.0 of this page from a page in Project Starter Pack, the xref syntax would be xref:1.0@azurearchitecturepack:module-one:overview.adoc[]","title":"Module One Overview","component":"azurearchitecturestarterpack","version":"1","name":"overview","url":"/azurearchitecturestarterpack/1/module-one/overview.html","titles":[{"text":"Page source","hash":"_page_source","id":1},{"text":"Cross reference syntax to target this page","hash":"_cross_reference_syntax_to_target_this_page","id":2},{"text":"Always target the latest version of this page","hash":"_always_target_the_latest_version_of_this_page","id":3},{"text":"Target a specific version of this page","hash":"_target_a_specific_version_of_this_page","id":4}]},"18":{"id":18,"text":"type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None member this.Yield(x) = printfn \"Yield an unwrapped %A as an option\" x Some x member this.YieldFrom(x) = printfn \"Yield an option (%A) directly\" x x member this.Combine(a,b) = match a,b with | Some a', Some b' -> printfn \"combining %A and %A\" a' b' Some (a' + b') | Some a', None -> printfn \"combining %A with None\" a' Some a' | None, Some b' -> printfn \"combining None with %A\" b' Some b' | None, None -> printfn \"combining None with None\" None member this.Delay(f) = printfn \"Delay\" f() //make a new instance let trace = new TraceBuilder() let trace2 x y = trace.Delay(fun () -> trace.Combine(trace.Yield(x), trace.Delay(fun () -> trace.Yield(y)))) //test trace { yield 1 yield 2 } |> printfn \"Result for yield then yield: %A\" let value1 = trace2 1 2 The Combine method only has two parameters. So what happens when you combine more than two values? A subtle but important point is that they are combined “backwards”, starting from the last value. module ListBuilder = type ListBuilder() = member this.Bind(m, f) = m |> List.collect f member this.Zero() = printfn \"Zero\" [] member this.Yield(x) = printfn \"Yield an unwrapped %A as a list\" x [x] member this.YieldFrom(m) = printfn \"Yield a list (%A) directly\" m m member this.For(m,f) = printfn \"For %A\" m this.Bind(m,f) member this.Combine (a,b) = printfn \"combining %A and %A\" a b List.concat [a;b] member this.Delay(f) = printfn \"Delay\" f() // make an instance of the workflow let listbuilder = new ListBuilder() listbuilder { yield 1 yield 2 yield 3 yield 4 } |> printfn \"Result for yield x 4: %A\" What F# converts to: let listBuilder4 x y a b = listbuilder.Delay(fun () -> listbuilder.Combine(listbuilder.Yield(x), listbuilder.Delay(fun () -> listbuilder.Combine(listbuilder.Yield(y), listbuilder.Delay(fun () -> listbuilder.Combine(listbuilder.Yield(a), listbuilder.Delay(fun () -> listbuilder.Yield(b)))))))) let value2 = listBuilder4 1 2 3 4 If the workflow has some concept of \"success\" or \"failure\", then a standard approach is: - If the first expression \"succeeds\" then use that value. - Otherwise use the value of the second expression. This approach is useful for chaining together a series of \"or else\" expressions where the first success \"wins\" and becomes the overall result. If the workflow has the concept of sequential steps, then the overall result is just the value of the last step, and all the previous steps are evaluated only for their side effects. In normal F#, this would be written: do some expression do some other expression final expression In normal F#, each expression (other than the last) evaluates to the unit value. The equivalent approach for computation expression is to treat each expression (other than the last) as a wrapped unit value, and \"pass it into\" the next expression, and so on, until you reach the last expression. module TraceBuilder1 = type TraceBuilder1 () = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = Some x member this.Zero() = printfn \"Zero\" this.Return () //unit not None member this.Combine(a,b) = printfn \"Combining %A with %A\" a b this.Bind(a, fun () -> b) member this.Delay(f) = printfn \"Delay\" f() // make a new instance let trace = new TraceBuilder1() trace { if true then printfn \"hello......\" if false then printfn \".......world\" return 1 } |> printfn \"Result for sequential combine: %A\" F# converts the above code to: //What F# converts to let expr1 = fun () -> if false then printfn \"hello......\"; trace.Zero(); let expr2 = fun () -> if true then printfn \"......world\"; trace.Zero(); let value1 = trace.Delay(fun () -> trace.Combine(expr1(), trace.Delay(fun () -> trace.Combine(expr2(), trace.Delay(fun () -> trace.Return(1)))))) In this case, Combine should merge the two data structures in whatever way is appropriate. And the Zero method should create an empty data structure, if needed. We have looked at different implementations for Combine for option types. - The first one used options as \"success/failure\" indicators, when the first success \"won\". In this case Zero was defined as None - The second one was sequential. In this case Zero was defined as Some () There is a useful rule that connects Zero and Combine Rule:- Combine(a,Zero) should be the same as Combine(Zero,a) which should be the same as just a","title":"Combine method","component":"studynotes","version":"0.1","name":"CombineMethod","url":"/studynotes/0.1/FSharp/CombineMethod.html","titles":[{"text":"Why do we need combine method","hash":"_why_do_we_need_combine_method","id":1},{"text":"The problem with 2 yields","hash":"_the_problem_with_2_yields","id":2},{"text":"Implementing Combine for workflows with \"success\" or \"failure\"","hash":"_implementing_combine_for_workflows_with_success_or_failure","id":3},{"text":"Implementing Combine for worflows with sequential steps","hash":"_implementing_combine_for_worflows_with_sequential_steps","id":4},{"text":"Implementing combine for workflows that build data structures","hash":"_implementing_combine_for_workflows_that_build_data_structures","id":5},{"text":"Guidelines for mixing \"Combine\" and \"Zero\"","hash":"_guidelines_for_mixing_combine_and_zero","id":6}]},"19":{"id":19,"text":"One of the major uses of computation expressions is to implicitly unwrap and rewrap values that are stored in some sort of wrapper type. Every computation expression must have an associated wrapper type. This wrapper type is used in both Bind and Return, which leads to a key benefit: the output of a Return can be fed to the input of a Bind In other words, because a workflow returns a wrapper type, and because let! consumes a wrapper type, you can put a “child” workflow on the right hand side of a let! expression. let subworkflow0 = myworkflow { return 42 } let subworkflow1 = myworkflow { return 43 } let aWrappedValue = myworkflow { let! unwrappedValue1 = subworkflow1 let! unwrappedValue2 = subworkflow2 return unwrappedValue1 + unwrappedValue2 } let aWrappedValue = myworkflow { let! unwrappedValue1 = myworkflow { let! x = myworkflow { return 1 } return x } let! unwrappedValue2 = myworkflow { let! y = myworkflow { return 2 } return y } return unwrappedValue1 + unwrappedValue2 } Sometimes we have a function that already returns a wrapped value, and we want to return it directly. return is no good for this, because it requires an unwrapped type as input. The solution is a variant on return called return!, which takes a wrapped type as input and returns it. The corresponding method in the “builder” class is called ReturnFrom. Typically the implementation just returns the wrapped type “as is”","title":"Composition of computation expression","component":"studynotes","version":"0.1","name":"ComputationExpressionComposition","url":"/studynotes/0.1/FSharp/ComputationExpressionComposition.html","titles":[]},"20":{"id":20,"text":"Avoiding unnecessary evaluations. We want to use the “return” keyword to return early and stop any more processing being done. return and yield do not generate an early return from a computation expression. The entire computation expression, all the way to the last curly brace, is always evaluated and results in a single value. This is a problem, because you might get unwanted side effects and your code is doing something unnecessary, which might cause performance problems. Use the delay method to do this. Any result from Return or Yield is immediately wrapped in a “delay” function like this, and then you can choose whether to run it or not. module TraceBuilder = type TraceBuilder() = member this.Bind(m, f) = match m with | None -> printfn \"Binding with None. Exiting.\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f m member this.Return(x) = printfn \"Return an unwrapped %A as an option\" x Some x member this.Zero() = printfn \"Zero\" None member this.Combine (a,b) = printfn \"Returning early with %A. Ignoring second part: %A\" a b a member this.Run(funcToRun) = let runResult = funcToRun() runResult // return the result of running the delayed function member this.Delay(f) = printfn \"Delay\" f //make a new instance let trace = new TraceBuilder() (* Assign the output of the computation expression to a function value, say f, and then evaluate it. *) let f = trace { printfn \"Part 1: about to return 1\" return 1 printfn \"Part 2: after return has happened\" } f |> printfn \"Result for Part1 without Part2: %A\" The Run method exists for exactly this reason. It is called as the final step in the process of evaluating a computation expression, and can be used to undo the delay.","title":"Delay and Run Method","component":"studynotes","version":"0.1","name":"DelayRunMethod","url":"/studynotes/0.1/FSharp/DelayRunMethod.html","titles":[]},"21":{"id":21,"text":"Operations with and without '!' The difference is easy to remember when you realize that the operations without a “!” always have unwrapped types on the right hand side, while the ones with a “!” always have wrapped types. The “!” versions are particularly important for composition, because the wrapped type can be the result of another computation expression of the same type. In normal F#, do is just like let, except that the expression doesn’t return anything useful (namely, a unit value). Inside a computation expression, do! is very similar. Just as let! passes a wrapped result to the Bind method, so does do!, except that in the case of do! the “result” is the unit value, and so a wrapped version of unit is passed to the bind method. type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None member this.Yield(x) = printfn \"Yield an unwrapped %A as an option\" x Some x member this.YieldFrom(x) = printfn \"Yield an option (%A) directly\" x x // make an instance of the workflow let trace = new TraceBuilder() trace { do! Some (printfn \"..expression that returns unit\") do! Some (printfn \"...another expression that returns unit\") let! x = Some (1) return x }","title":"Do Method","component":"studynotes","version":"0.1","name":"DoMethod","url":"/studynotes/0.1/FSharp/DoMethod.html","titles":[]},"22":{"id":22,"text":"Every computation expression must have an associated wrapper type. But what about the logging example in the previous post? There was no wrapper type there. There was a let! that did things behind the scenes, but the input type was the same as the output type. The type was left unchanged. The short answer to this is that you can treat any type as its own “wrapper”. If you have a type such as List, it is in fact not a “real” type at all. List is a real type, and List is a real type. But List on its own is incomplete. One way to think about List is that it is a function, not a type. And like any function it takes a parameter, in this case a “type parameter”. Which is why the concept that .NET developers call “generics” is known as “parametric polymorphism” in computer science terminology. Once we grasp the concept of functions that generate one type from another type (called “type constructors”), we can see that what we really mean by a “wrapper type” is just a type constructor. But if a “wrapper type” is just a function that maps one type to another type, surely a function that maps a type to the same type fits into this category? And indeed it does. The “identity” function for types fits our definition and can be used as a wrapper type for computation expressions. We can define the “identity workflow” as the simplest possible implementation of a workflow builder. type IdentityBuilder() = member this.Bind(x,f) = f x member this.Return(x) = x member this.ReturnFrom(x) = x let identity = new IdentityBuilder() let result = identity { let! x = 1 let! y = 2 return x + y } With this in place, you can see that the logging example discussed earlier is just the identity workflow with some logging added in. A major use of computation expressions is to unwrap and rewrap values that are stored in some sort of wrapper type. You can easily compose computation expressions, because the output of a Return can be fed to the input of a Bind. Every computation expression must have an associated wrapper type. Any type with a generic parameter can be used as a wrapper type, even lists. When creating workflows, you should ensure that your implementation conforms to the three sensible rules about wrapping and unwrapping and composition.","title":"Identity Wrapper Types","component":"studynotes","version":"0.1","name":"IdentityWrapperTypes","url":"/studynotes/0.1/FSharp/IdentityWrapperTypes.html","titles":[]},"23":{"id":23,"text":"The let! expression is syntactic sugar for a Bind method. In other words, if we chain a number of let! expressions together like this: let! x = 1 let! y = 2 let! z = x + y Bind(1, fun x → Bind(2, fun y → Bind(x + y, fun z → etc Computation expressions are just a way to create nice syntax for something that we could do ourselves. We’ve used four different approaches for the “safe divide” example so far. Let’s put them together side by side and compare them once more. First the original version, using an explicit workflow: module DivideByExplicit = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) let divideByWorkflow x y w z = let a = x |> divideBy y match a with | None -> None // give up | Some a' -> // keep going let b = a' |> divideBy w match b with | None -> None // give up | Some b' -> // keep going let c = b' |> divideBy z match c with | None -> None // give up | Some c' -> // keep going //return Some c' Next, using our own version of “bind” (a.k.a. “pipeInto”) module DivideByWithBindFunction = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) let bind (m,f) = Option.bind f m let return' x = Some x let divideByWorkflow x y w z = bind (x |> divideBy y, fun a -> bind (a |> divideBy w, fun b -> bind (b |> divideBy z, fun c -> return' c ))) Next, using a computation expression: module DivideByWithCompExpr = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) type MaybeBuilder() = member this.Bind(m, f) = Option.bind f m member this.Return(x) = Some x let maybe = new MaybeBuilder() let divideByWorkflow x y w z = maybe { let! a = x |> divideBy y let! b = a |> divideBy w let! c = b |> divideBy z return c } And finally, using bind as an infix operation: module DivideByWithBindOperator = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) let (>>=) m f = Option.bind f m let divideByWorkflow x y w z = x |> divideBy y >>= divideBy w >>= divideBy z","title":"Introducing Bind","component":"studynotes","version":"0.1","name":"IntroducingBind","url":"/studynotes/0.1/FSharp/IntroducingBind.html","titles":[]},"24":{"id":24,"text":"The bind function “unwraps” the type, and applies the continuation function to the unwrapped value. The continuation function passed into bind is required to have a certain signature. It takes an unwrapped type, but it produces a wrapped type. In other words, the continuation function must always create a new list as its result. We can now create a “list workflow”. Bind applies the continuation function to each element of the passed in list, and then flattens the resulting list of lists into a one-level list. List.collect is a library function that does exactly that. Return converts from unwrapped to wrapped. In this case, that just means wrapping a single element in a list. module Sample1 = type ListWorkflowBuilder() = member this.Bind(list,f) = list |> List.collect f member this.Return(x) = [x] let listWorkflow = new ListWorkflowBuilder() let added = listWorkflow { let! i = [1;2;3] let! j = [10;11;12] return i + j } printfn \"added=%A\" added What F# does behind the scenes is: let addedM = listWorkflow.Bind([1;2;3], fun x -> listWorkflow.Bind([10;11;12], fun y -> listWorkflow.Return (x + y))) printfn \"added=%A\" addedM // let version let! i = [1;2;3] in [some expression] // for..in..do version for i in [1;2;3] do [some expression] We need to add a For method to our builder class. It generally has exactly the same implementation as the normal Bind method, but is required to accept the sequence type. module Sample2 = type ListWorkflowBuilder() = member this.Bind(lst,f) = lst |> List.collect f member this.Return(x) = [x] member this.For(lst, f) = this.Bind(lst, f) let listWorkflow = new ListWorkflowBuilder() let multiplied = listWorkflow { for i in [1;2;3] do for j in [10;11;12] do return i * j } printfn \"multiplied: %A\" multiplied //For is the same as bind but it needs to accept the sequence type.","title":"List Wrapper Types","component":"studynotes","version":"0.1","name":"ListWrapperTypes","url":"/studynotes/0.1/FSharp/ListWrapperTypes.html","titles":[{"text":"List Workflow","hash":"_list_workflow","id":1},{"text":"Syntactic sugar for \"for\"","hash":"_syntactic_sugar_for_for","id":2}]},"25":{"id":25,"text":"Let’s say we have some code, and we want to log each step. let loggedWorkflow = let x = 42 log x let y = 43 log y let z = x + y log z //return z But it is annoying to have to explicitly write all the log statements each time. Is there a way to hide them? A computation expression can do that. type LoggingBuilder() = let log p = printfn \"expression is %A\" p member this.Bind(x, f) = log x f x member this.Return(x) = x Next we create an instance of the type, logger in this case. let logger = new LoggingBuilder() So with this logger value, we can rewrite the original logging example like this: let loggedWorkflow1 = logger { let! x = 42 let! y = 43 let! z = x + y return z } F# internally converts this to the following: let value = logger.Bind(42, fun x -> logger.Bind(43, fun y -> logger.Bind(x + y, fun z -> z) ))","title":"Log Builder","component":"studynotes","version":"0.1","name":"LogBuilder","url":"/studynotes/0.1/FSharp/LogBuilder.html","titles":[]},"26":{"id":26,"text":"MaybeBuilder is useful if you have a chain of if/else statements. let divideBy bottom top = if bottom = 0 then None else Some (top/bottom) Here is a workflow that attempts to divide a starting number three times. let divideByWorkflow init x y z = let a = init |> divideBy x match a with | None -> None //give up | Some a' -> //keep going let b = a' |> divideBy y match b with | None -> None //give up | Some b' -> //keep going let c = b' |> divideBy z match c with | None -> None | Some c' -> Some c' let good = divideByWorkflow 12 3 2 1 let bad = divideByWorkflow 12 3 0 1 Once more we define a new type(MaybeBuilder) and make an instance of the type (maybe) type MaybeBuilder() = member this.Bind(x,f) = match x with | None -> None | Some a -> f a member this.Return(x) = Some x let maybe = new MaybeBuilder() let divideByWorkflowM init x y z = maybe { let! a = init |> divideBy x let! b = a |> divideBy y let! c = b |> divideBy z return c } let good1 = divideByWorkflowM 12 3 2 1 F# converts the above computation expression into something like this: let good1 = divideByWorkflowM 12 3 2 1 let good2 = maybe.Bind(divideBy 3 12, fun a -> maybe.Bind(divideBy 2 a, fun b -> maybe.Bind(divideBy 1 b, fun c -> Some c ))) let bad1 = divideByWorkflowM 12 3 0 1 let bad2 = maybe.Bind(divideBy 3 12, fun a -> maybe.Bind(divideBy 0 a, fun b -> maybe.Bind(divideBy 1 b, fun c -> Some c )))","title":"Maybe Builder","component":"studynotes","version":"0.1","name":"MaybeBuilder","url":"/studynotes/0.1/FSharp/MaybeBuilder.html","titles":[]},"27":{"id":27,"text":"OrElseBuilder is useful if you have chains of \"or/else\" statements. Sometimes the flow of control depends on a series of \"or else\" tests. Try one thing, and if that succeeds, you’re done. Otherwise try another thing, and if that fails, try a third thing, and so on. Say that we have three dictionaries and we want to find the value corresponding to a key. Each lookup might succeed or fail, so we need to chain the lookups in a series. let map1 = [(\"1\", \"One\"); (\"2\", \"Two\")] |> Map.ofList let map2 = [(\"A\", \"Alice\"); (\"B\", \"Bob\")] |> Map.ofList let map3 = [(\"CA\", \"California\"); (\"NY\", \"New York\")] |> Map.ofList let multiLookup key = match map1.TryFind key with | Some result1 -> Some result1 //success | None -> //failure match map2.TryFind key with | Some result2 -> Some result2 //success | None -> //failure match map3.TryFind key with | Some result3 -> Some result3 //success | None -> None //failure Because everything is an expression in F# we can’t do an early return, we have to cascade all the tests in a single expression. multiLookup \"A\" |> printfn \"Result for A is %A\" multiLookup \"CA\" |> printfn \"Result for CA is %A\" multiLookup \"X\" |> printfn \"Result for X is %A\" Here is an \"or else\" builder that allows us to simplify these kinds of lookups. type OrElseBuilder() = member this.ReturnFrom(x) = x member this.Combine (a,b) = match a with | Some _ -> a // a succeeds -- use it | None -> b // a fails -- use b instead member this.Delay(f) = f() let orElse = new OrElseBuilder() let multiLookupM key = orElse { return! map1.TryFind key return! map2.TryFind key return! map3.TryFind key } multiLookupM \"A\" |> printfn \"Result for A is %A\" multiLookupM \"CA\" |> printfn \"Result for CA is %A\" multiLookupM \"X\" |> printfn \"Result for X is %A\" Internally, F# converts the above expression into something like the following: let multiLookupExpanded key = orElse.Delay(fun () -> orElse.Combine(orElse.ReturnFrom(map1.TryFind key), orElse.Delay(fun () -> orElse.Combine(orElse.ReturnFrom(map2.TryFind key), orElse.Delay(fun () -> orElse.ReturnFrom(map3.TryFind key))))))","title":"OrElse Builder","component":"studynotes","version":"0.1","name":"OrElseBuilder","url":"/studynotes/0.1/FSharp/OrElseBuilder.html","titles":[]},"28":{"id":28,"text":"Rule 1: If you start with an unwrapped value, and then you wrap it (using return ),then unwrap it (using bind ), you should always get back the original unwrapped value. Rule 2: If you start with a wrapped value, and then you unwrap it (using bind ), then wrap it (using return ), you should always get back the original wrapped value. Rule 3: If you create a child workflow, it must produce the same result as if you had \"inlined\" the logic in the main workflow.","title":"Rules for workflows that use wrapper types","component":"studynotes","version":"0.1","name":"WorkflowRulesForWrapperTypes","url":"/studynotes/0.1/FSharp/WorkflowRulesForWrapperTypes.html","titles":[]},"29":{"id":29,"text":"One of the major uses of computation expressions is to implicitly unwrap and rewrap values that are stored in some sort of wrapper type. Say we are accessing a database, and we want to capture the result in a Success/Error union type: type DbResult = | Success of 'a | Error of string We then use this type in our database access methods. let getCustomerId name = if name = \"\" then Error \"getCustomerId failed\" else Success \"Cust42\" let getLastOrderForCustomer custId = if custId = \"\" then Error \"getLastOrderForCustomer failed\" else Success \"Order123\" let getLastProductForOrder orderId = if orderId = \"\" then Error \"getLastProductForOrder failed\" else Success \"Product456\" Now lets say we want to chain these calls together. Here is the most explicit way of doing it. As you can see, we have to have pattern matching at each step. let product = let r1 = getCustomerId \"Alice\" match r1 with | Error _ -> r1 | Success custId -> let r2 = getLastOrderForCustomer custId match r2 with | Error _ -> r2 | Success orderId -> let r3 = getLastProductForOrder orderId match r3 with | Error _ -> r3 | Success productId -> printfn \"Product is %s\" productId r3 Really ugly code. And the top-level flow has been submerged in the error handling logic. Computation expressions to the rescue! We can write one that handles the branching of Success/Error behind the scenes: type DbResultBuilder() = member this.Bind(x,f) = match x with | Error _ -> x | Success y -> printfn \"\\tSuccessful: %s\" y f y member this.Return(x) = Success x let dbResult = new DbResultBuilder(); And with this workflow, we can focus on the big picture and write much cleaner code: let product' = dbResult { let! custId = getCustomerId \"Alice\" let! orderId = getLastOrderForCustomer custId let! productId = getLastProductForOrder orderId printfn \"Product is %s\" productId return productId } printfn \"%A\" product And if there are errors, the workflow traps them nicely and tells us where the error was: let product'' = dbResult { let! custId = getCustomerId \"Alice\" let! orderId = getLastOrderForCustomer \"\" //error let! productId = getLastProductForOrder orderId printfn \"Product is %s\" productId return productId } printfn \"%A\" product Every computation expression must have an associated wrapper type. And the wrapper type is often designed to go hand-in-hand with the workflow that we want to manage.","title":"Wrapper Types","component":"studynotes","version":"0.1","name":"WrapperTypes","url":"/studynotes/0.1/FSharp/WrapperTypes.html","titles":[]},"30":{"id":30,"text":"The MSDN documentation says that it has the signature 'T → M, which is exactly the same as the signature for the Return method. It must take an unwrapped value and wrap it. type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None member this.Yield(x) = printfn \"Yield an unwrapped %A as an option\" x Some x member this.YieldFrom(x) = printfn \"Yield an option (%A) directly\" x x //make a new instance let trace = new TraceBuilder() //test trace { yield! Some 1 } |> printfn \"Result for yield: %A\" If return and yield are basically the same thing, why are there two different keywords? The answer is mainly so that you can enforce appropriate syntax by implementing one but not the other. For example, the seq expression does allow yield but doesn’t allow return, while the async does allow return, but does not allow yield.","title":"Yield Method","component":"studynotes","version":"0.1","name":"YieldMethod","url":"/studynotes/0.1/FSharp/YieldMethod.html","titles":[]},"31":{"id":31,"text":"What value should you use for Zero? Does the workflow have a concept of “success” or “failure”? If so, use the “failure” value for Zero. Does the workflow have a concept of “sequential processing”? That is, in your workflow you do one step and then another, with some processing behind the scenes. In normal F# code, an expression that did not return anything explicitly would evaluate to unit. So to parallel this case, your Zero should be the wrapped version of unit. Is the workflow primarily concerned with manipulating data structures? If so, Zero should be the “empty” data structure. module Sample3_IntroducingZero = type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None // make an instance of the workflow let trace = new TraceBuilder() //test trace { printfn \"hello world\" } |> printfn \"Result for simple expression: %A\" trace { if false then return 1 } |> printfn \"Result for if without else: %A\" The test code makes it clear that Zero is being called behind the scenes. And None is the return value for the expression as whole. You not required to have a Zero, but only if it makes sense in the context of the workflow. For example seq does not allow zero, but async does: //let s = seq {printfn \"zero\" } // Error let a = async {printfn \"zero\" } // OK","title":"Zero Method","component":"studynotes","version":"0.1","name":"ZeroMethod","url":"/studynotes/0.1/FSharp/ZeroMethod.html","titles":[]},"32":{"id":32,"text":"This is my personal study notes for FSharp. People from whom I have shamelessly and blatantly copied. * Scott Wlaschin * Kit Eason * Mark Seemann","title":"FSharp Notes","component":"studynotes","version":"0.1","name":"overview","url":"/studynotes/0.1/FSharp/overview.html","titles":[]},"33":{"id":33,"text":"This is my personal short notes from https://think-like-a-git.net/ and various other sources. If I learn something new in git, I intend to put them here. Everything in one page, so that I do not have to search for git related stuff when I need to remember something. A git repository is one giant graph. At the surface level, a git commit consists of 2 things:- - a pointer to the state of your code at some moment in time. - zero or more pointers to \"parent\" commits Figure 1. Source: think-like-a-git.net, Git commits (simplified view) A Git commit is a node in a graph, and each one points to the node that came before them. To list all commits in your repository: git log --oneline --abbrev-commit --all Figure 2. Source: think-like-a-git.net To list all commits in your repository but with a graph view: git log --oneline --abbrev-commit --all --graph Figure 3. Source: think-like-a-git.net If you want to see branch and tag labels, add --decorate: git log --oneline --abbrev-commit --all --graph --decorate --color You can setup a git alias to do the same thing: git config --global alias.graph \"log --graph --oneline –decorate=short\" GitX shows the logs as follows:- Figure 4. Source: think-like-a-git.net The very colourful labels are called references. References are pointers to commits There are three types of references: local branch, remote branch, and tag. A local branch reference consists of a file that contains the 40-byte identifier of the commit that the reference points to. This file is created at the project’s .git/refs/head directory. Creating a branch in Git just means writing 40 bytes to disk, which is why git branch foo` is so fast. Local branch references are specific to a single local repository. Commands that affect local branch references include commit, merge, rebase, and reset. Remote branch references are also specific to a single repository, but one that’s previously been defined as a remote. Commands that affect remote branch references include fetch and push. Tag references are branch references that never move. Once you’ve created a tag, it will never change This behavior makes them useful for marking specific versions of a software package, or marking exactly what got deployed to a production server on a particular date. Only one command affects the tag and i.e tag Now look at the display:- Figure 5. Source: think-like-a-git.net However, you don’t see commits here. Every git tool hides commits. Imagine this scenario: you write some code and check it in. Then, you realize you forgot to run the tests, so you run them, and they uncover a syntax error. Or you spot a typo. For whatever reason, you weren’t done when you thought you were done. Git gives you an option to tack the new change on to the previous commit using: git commit --amend. This keeps all your related changes bundled together in one commit. A git commit is a SHA-1 hash of the contents of the commit, and the IDs of its parent commits. Which means that, when you use git commit --amend, you’re actually building a completely different commit, and pointing your local branch reference to it instead. The first commit you made is still there on disk, and you can still get back to it Git will decide that it’s time to run garbage collection. You can trigger this process yourself, using git gc. Starting from every branch and every tag, Git walks back through the graph, building a list of every commit it can reach. Once it’s reached the end of every path, it deletes all the commits it didn’t visit. The Secret Of Git can fit it into these four words: References make commits reachable. References …​ whether they are local branches, remote branches, or tags …​ Make commits …​ which are nodes in a graph …​ Reachable …​ so that you can get back to them, and so that Git will not delete them when it decides it is time for spring cleaning. Because references make commits reachable, creating a branch is a way to \"nail down\" part of the graph that you might want to come back to later. Neither git merge nor git rebase will change your existing commits (remember, a commit’s ID is a hash of its contents *and its history*), you can create a temporary branch any time you want to try something you’re even just a little bit unsure about. Creating a branch before you try a merge or a rebase is like saving your game before you battle the boss. Use this pattern if you are unsure or unclear on exactly what git merge does. Being lazy and since it very well explained here without any fluff. https://think-like-a-git.net/sections/testing-out-merges/the-scout-pattern.html Being lazy and since it very well explained here without any fluff. https://think-like-a-git.net/sections/testing-out-merges/the-scout-pattern.html Being lazy and since it very well explained here without any fluff. https://think-like-a-git.net/sections/testing-out-merges/black-belt-merging.html Before you start using rebase in a shared repository, make sure everyone who works on your project is comfortable working with rebase. You might also consider changing everyone’s default pull strategy to \"rebase\" instead of \"merge\" Given one or more existing commits, apply the change each one introduces, recording a new commit for each. Git commit’s ID is a hash of both its contents and its history. So, even if you have two commits that introduce the exact same change, if they point to different parent commits, they’ll have different IDs. What git cherry-pick does, basically, is take a commit from somewhere else, and \"play it back\" wherever you are right now. \\ Because this introduces the same change with a different parent, Git builds a new commit with a different ID. Figure 6. Source: think-like-a-git.net If you were at node H in this graph, and you typed git cherry-pick E, you get a copy of commit E, let’s call it E', that pointed to H as its parent. Figure 7. Source: think-like-a-git.net Or if you typed something like git cherry-pick C D E, you get the following: Figure 8. Source: think-like-a-git.net The important thing to notice here is that Git has copied changes made in one place, and replayed them somewhere else. Again being lazy and since it is very well explained here. https://think-like-a-git.net/sections/rebase-from-the-ground-up/using-git-cherry-pick-to-simulate-git-rebase.html To summarize the previous section, this: git checkout foo git checkout -b newbar git cherry-pick C D E git checkout bar git reset --hard newbar git branch -d newbar is equivalent to this: git rebase foo bar When you do a rebase, you are rewriting history. You are, in effect, saying to Git, \"Hey, you know those things that happened over there on that completely different timeline? I want you to pretend that they happened here instead.\" Here’s how I think of it: in English, we read from left to right. On most charts that show the change in something over time, time is shown on the x-axis of the graph, with time increasing from left to right. When you issue commands to the shell, you can put several of them on one line, and they’ll be executed in order from left to right. So when I use git rebase, I (almost) always give it two arguments: the name of the place I want to start from, and the name of the place I want to end up. Or, to put it another way, I tell rebase the sequence of events I want it to create, from left to right: git rebase first_this then_this","title":"Git Notes","component":"studynotes","version":"0.1","name":"overview","url":"/studynotes/0.1/Git/overview.html","titles":[{"text":"Basics","hash":"_basics","id":1},{"text":"git log","hash":"_git_log","id":2},{"text":"References","hash":"_references","id":3},{"text":"Garbage collection","hash":"_garbage_collection","id":4},{"text":"References make commits reachable","hash":"_references_make_commits_reachable","id":5},{"text":"Branches as savepoints","hash":"_branches_as_savepoints","id":6},{"text":"git merge","hash":"_git_merge","id":7},{"text":"the scout pattern","hash":"_the_scout_pattern","id":8},{"text":"the savepoint pattern","hash":"_the_savepoint_pattern","id":9},{"text":"Black belt merging","hash":"_black_belt_merging","id":10},{"text":"git rebase","hash":"_git_rebase","id":11},{"text":"git cherry-pick","hash":"_git_cherry_pick","id":12},{"text":"Using 'git cherry-pick' to Simulate 'git rebase'","hash":"_using_git_cherry_pick_to_simulate_git_rebase","id":13},{"text":"A Helpful Mnemonic for 'git rebase' Arguments","hash":"_a_helpful_mnemonic_for_git_rebase_arguments","id":14}]},"34":{"id":34,"text":"This is the study notes section on the website. This is where I try to document my notes on a topic.","title":"Study Notes","component":"studynotes","version":"0.1","name":"index","url":"/studynotes/0.1/index.html","titles":[]}},"components":{},"componentVersions":{"homesite/1.0.0":{"displayVersion":"1.0.0","title":"Home page","version":"1.0.0","name":"homesite","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorsys home","site-url":"https://tremorsys.com","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/homesite/1.0.0/index.html","navigation":[{"items":[{"content":"Home Page","url":"/homesite/1.0.0/index.html","urlType":"internal"},{"content":"Azure Architecture Starter Pack","url":"/azurearchitecturestarterpack/1/index.html","urlType":"internal"},{"content":"Project Starter Pack","url":"/projectstarterpack/1.0.0/inline-text-formatting.html","urlType":"internal"},{"content":"Study Notes","url":"/studynotes/0.1/index.html","urlType":"internal"}],"root":true,"order":0}]},"projectstarterpack/1.0.0":{"displayVersion":"1.0.0","title":"New Project Starter Pack","version":"1.0.0","name":"projectstarterpack","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorsys home","site-url":"https://tremorsys.com","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/projectstarterpack/1.0.0/inline-text-formatting.html","navigation":[{"items":[{"content":"Project Starter Pack","url":"/projectstarterpack/1.0.0/inline-text-formatting.html","urlType":"internal"},{"content":"Special Characters and Symbols","url":"/projectstarterpack/1.0.0/special-characters.html","urlType":"internal"},{"content":"Admonition","url":"/projectstarterpack/1.0.0/admonition.html","urlType":"internal"},{"content":"Sidebar","url":"/projectstarterpack/1.0.0/sidebar.html","urlType":"internal"},{"content":"User Interface Macros","url":"/projectstarterpack/1.0.0/ui-macros.html","urlType":"internal"},{"content":"Lists","items":[{"content":"Ordered Lists","url":"/projectstarterpack/1.0.0/lists/ordered-list.html","urlType":"internal"},{"content":"Unordered Lists","url":"/projectstarterpack/1.0.0/lists/unordered-list.html","urlType":"internal"},{"content":"Unordered Lists","url":"/projectstarterpack/1.0.0/lists/unordered-list.html","urlType":"internal"}]}],"root":true,"order":0}]},"azurearchitecturestarterpack/1":{"displayVersion":"1-beta.1","title":"Azure Architecture Starter Pack","version":"1","name":"azurearchitecturestarterpack","prerelease":"-beta.1","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorsys home","site-url":"https://tremorsys.com"},"sourcemap":false},"url":"/azurearchitecturestarterpack/1/index.html","navigation":[{"items":[{"content":"Azure Architecture Starter Pack","url":"/azurearchitecturestarterpack/1/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Module One Overview","url":"/azurearchitecturestarterpack/1/module-one/overview.html","urlType":"internal"}],"root":true,"order":1}]},"studynotes/0.1":{"displayVersion":"0.1","title":"Study Notes","version":"0.1","name":"studynotes","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorsys home","site-url":"https://tremorsys.com"},"sourcemap":false},"url":"/studynotes/0.1/index.html","navigation":[{"items":[{"content":"Study Notes","url":"/studynotes/0.1/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"FSharp Notes","url":"/studynotes/0.1/FSharp/overview.html","urlType":"internal","items":[{"content":"Computation Expressions","items":[{"content":"Log Builder","url":"/studynotes/0.1/FSharp/LogBuilder.html","urlType":"internal"},{"content":"Maybe Builder","url":"/studynotes/0.1/FSharp/MaybeBuilder.html","urlType":"internal"},{"content":"OrElse Builder","url":"/studynotes/0.1/FSharp/OrElseBuilder.html","urlType":"internal"},{"content":"Introducing Bind","url":"/studynotes/0.1/FSharp/IntroducingBind.html","urlType":"internal"},{"content":"Wrapper Types","url":"/studynotes/0.1/FSharp/WrapperTypes.html","urlType":"internal"},{"content":"Rules for workflows that use wrapper types","url":"/studynotes/0.1/FSharp/WorkflowRulesForWrapperTypes.html","urlType":"internal"},{"content":"Composition of computation expression","url":"/studynotes/0.1/FSharp/ComputationExpressionComposition.html","urlType":"internal"},{"content":"List Wrapper Types","url":"/studynotes/0.1/FSharp/ListWrapperTypes.html","urlType":"internal"},{"content":"Identity Wrapper Types","url":"/studynotes/0.1/FSharp/IdentityWrapperTypes.html","urlType":"internal"},{"content":"Do Method","url":"/studynotes/0.1/FSharp/DoMethod.html","urlType":"internal"},{"content":"Yield Method","url":"/studynotes/0.1/FSharp/YieldMethod.html","urlType":"internal"},{"content":"Combine method","url":"/studynotes/0.1/FSharp/CombineMethod.html","urlType":"internal"},{"content":"Delay and Run Method","url":"/studynotes/0.1/FSharp/DelayRunMethod.html","urlType":"internal"}]}]}],"root":true,"order":1},{"items":[{"content":"Git Notes","url":"/studynotes/0.1/Git/overview.html","urlType":"internal"}],"root":true,"order":2}]}}}})