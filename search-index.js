antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,83.732]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[1,38.257,2,39.354,3,40.609,4,46.035]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[2,39.354,3,40.609,4,46.035,5,37.282]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[4,52.343,6,44.746,7,35.747]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[8,57.016]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[9,76.719]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1",[10,68.649]],["name/1",[11,0.961]],["text/1",[1,5.515,5,6.015,6,5.673,7,3.737,8,4.327,9,3.815,12,3.277,13,2.615,14,4.164,15,4.164,16,3.815,17,6.065,18,4.931,19,5.472,20,4.066,21,3.815,22,2.203,23,2.979,24,4.233,25,3.065,26,4.432,27,3.585,28,3.065,29,2.903,30,6.477,31,3.163,32,2.979,33,3.815,34,4.164,35,3.585,36,4.84,37,4.532,38,3.163,39,4.164,40,3.414,41,3.414,42,4.678,43,3.341,44,3.815,45,4.164,46,3.585,47,5.472,48,5.001,49,2.716,50,3.445,51,3.585,52,4.164,53,4.678,54,4.327,55,2.895,56,5.001,57,2.773,58,4.233,59,2.979,60,3.163,61,5.21,62,3.585,63,3.585,64,4.164,65,3.991,66,4.164,67,2.615,68,6.355,69,4.164,70,3.585,71,3.277,72,3.585,73,3.414,74,2.229,75,3.414,76,2.979,77,5.515,78,2.538,79,4.164,80,2.664,81,2.13,82,2.569,83,3.585,84,4.327,85,4.327,86,3.277,87,4.827,88,6.355,89,5.472,90,4.164,91,4.146,92,2.664,93,3.277,94,4.164,95,2.979,96,2.903,97,4.164,98,4.164,99,4.164,100,2.716,101,3.414,102,2.569,103,3.277,104,3.065]],["component/1",[105,0.898]],["title/2-1",[77,50.405,106,45.951]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[106,45.951,107,42.064]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[106,45.951,108,51.85]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2",[106,54.623]],["name/2",[106,0.728]],["text/2",[7,3.844,29,5.499,43,2.834,58,5.855,74,3.5,77,3.092,81,3.344,84,4.452,106,6.16,107,2.581,108,4.812,109,3.282,110,3.543,111,2.943,112,3.959,113,3.543,114,2.878,115,6.131,116,2.765,117,2.622,118,3.959,119,3.543,120,3.282,121,3.181,122,3.282,123,2.714,124,5.629,125,5.99,126,5.629,127,3.959,128,7.57,129,8.055,130,5.99,131,8.055,132,5.36,133,3.959,134,4.034,135,4.452,136,5.629,137,5.99,138,5.145,139,5.99,140,5.99,141,9.733,142,4.812,143,5.99,144,5.629,145,4.559,146,3.959,147,5.99,148,5.99,149,3.282,150,3.721,151,3.959,152,4.328,153,3.959,154,3.419,155,4.678,156,4.606,157,4.034,158,4.034,159,4.354,160,4.354,161,3.031,162,4.452,163,5.36,164,3.904,165,4.966]],["component/2",[166,0.554]],["title/3-1",[167,57.75,168,57.75]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[169,68.649]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3-3",[170,68.649]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["title/3",[116,38.888,171,40.486,172,39.655]],["name/3",[116,0.257,171,0.267,172,0.262]],["text/3",[57,3.086,77,3.316,152,4.513,156,5.48,158,2.859,167,9.248,168,9.248,169,9.087,170,7.976,171,6.063,172,5.364,173,3.086,174,6.245,175,10.914,176,6.943,177,6.736,178,4.246,179,4.246,180,7.533,181,4.246,182,4.246,183,4.246,184,2.452,185,4.697,186,4.246,187,4.246,188,4.246,189,4.246,190,4.246,191,4.246,192,4.246,193,2.647,194,4.246,195,4.929,196,4.246,197,2.91,198,3.647]],["component/3",[166,0.554]],["title/4-1",[115,49.12,199,50.405]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4",[199,59.917]],["name/4",[199,0.799]],["text/4",[43,4.12,74,3.941,116,6.081,154,4.972,155,7.534,156,4.408,157,4.541,158,6.497,159,4.902,164,4.395,165,5.59,199,8.443,200,3.686,201,6.802,202,5.59,203,6.997,204,8.709,205,6.997,206,8.709,207,6.997,208,5.792]],["component/4",[166,0.554]],["title/5-1",[117,32.443,177,31.927,209,35.607,210,32.443]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5",[117,36.888,177,36.301,209,40.486]],["name/5",[117,0.358,177,0.352]],["text/5",[7,2.541,13,2.714,18,2.765,23,3.092,30,3.014,32,3.092,43,1.873,55,1.969,74,2.314,114,2.878,115,3.014,117,4.785,120,3.282,123,2.714,152,2.372,156,5.772,171,2.878,176,4.452,177,6.619,209,5.855,210,2.622,211,7.932,212,2.878,213,3.721,214,3.181,215,3.181,216,5.99,217,5.804,218,3.014,219,3.181,220,3.092,221,3.959,222,3.959,223,2.714,224,2.878,225,2.943,226,5.99,227,3.959,228,3.014,229,3.721,230,3.721,231,5.521,232,3.543,233,3.181,234,3.282,235,3.401,236,3.092,237,3.721,238,3.959,239,3.959,240,7.225,241,5.99,242,3.959,243,3.959,244,3.959,245,3.543,246,4.812,247,3.959,248,2.819,249,3.959,250,3.959,251,3.959,252,4.559,253,2.765,254,3.959,255,3.959,256,3.282,257,3.543,258,2.878,259,3.543,260,5.99,261,2.878,262,2.819,263,3.959,264,3.959]],["component/5",[166,0.554]],["title/6-1",[265,68.649]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[266,68.649]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[267,59.917]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6",[268,38.888,269,42.39,270,43.499]],["name/6",[270,0.422,271,0.484]],["text/6",[18,2.73,43,2.807,50,4.735,61,3.499,80,6.324,81,2.183,120,3.241,135,5.948,156,3.003,185,4.47,223,2.68,265,8.104,266,7.162,267,6.72,268,4.143,269,2.976,270,7.572,271,7.699,272,3.91,273,3.91,274,3.91,275,3.141,276,4.914,277,3.91,278,2.784,279,2.313,280,3.91,281,3.91,282,3.241,283,5.309,284,3.91,285,2.976,286,2.976,287,8.086,288,5.933,289,5.096,290,5.933,291,7.35,292,5.309,293,5.576,294,5.933,295,7.17,296,5.933,297,4.516,298,5.309,299,4.767,300,5.933,301,6.251,302,4.634,303,5.309,304,5.933,305,5.933,306,4.409,307,3.141,308,3.141,309,3.141,310,4.767,311,5.933,312,5.933,313,5.933,314,4.143,315,4.313]],["component/6",[166,0.554]],["title/7-1",[77,50.405,106,45.951]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[106,45.951,107,42.064]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[106,45.951,108,51.85]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7",[106,54.623]],["name/7",[106,0.728]],["text/7",[7,3.844,29,5.499,43,2.834,58,5.855,74,3.5,77,3.092,81,3.344,84,4.452,106,6.16,107,2.581,108,4.812,109,3.282,110,3.543,111,2.943,112,3.959,113,3.543,114,2.878,115,6.131,116,2.765,117,2.622,118,3.959,119,3.543,120,3.282,121,3.181,122,3.282,123,2.714,124,5.629,125,5.99,126,5.629,127,3.959,128,7.57,129,8.055,130,5.99,131,8.055,132,5.36,133,3.959,134,4.034,135,4.452,136,5.629,137,5.99,138,5.145,139,5.99,140,5.99,141,9.733,142,4.812,143,5.99,144,5.629,145,4.559,146,3.959,147,5.99,148,5.99,149,3.282,150,3.721,151,3.959,152,4.328,153,3.959,154,3.419,155,4.678,156,4.606,157,4.034,158,4.034,159,4.354,160,4.354,161,3.031,162,4.452,163,5.36,164,3.904,165,4.966]],["component/7",[166,0.554]],["title/8-1",[167,57.75,168,57.75]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[169,68.649]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[170,68.649]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8",[116,38.888,171,40.486,172,39.655]],["name/8",[116,0.257,171,0.267,172,0.262]],["text/8",[57,3.086,77,3.316,152,4.513,156,5.48,158,2.859,167,9.248,168,9.248,169,9.087,170,7.976,171,6.063,172,5.364,173,3.086,174,6.245,175,10.914,176,6.943,177,6.736,178,4.246,179,4.246,180,7.533,181,4.246,182,4.246,183,4.246,184,2.452,185,4.697,186,4.246,187,4.246,188,4.246,189,4.246,190,4.246,191,4.246,192,4.246,193,2.647,194,4.246,195,4.929,196,4.246,197,2.91,198,3.647]],["component/8",[166,0.554]],["title/9-1",[115,49.12,199,50.405]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9",[199,59.917]],["name/9",[199,0.799]],["text/9",[43,4.12,74,3.941,116,6.081,154,4.972,155,7.534,156,4.408,157,4.541,158,6.497,159,4.902,164,4.395,165,5.59,199,8.443,200,3.686,201,6.802,202,5.59,203,6.997,204,8.709,205,6.997,206,8.709,207,6.997,208,5.792]],["component/9",[166,0.554]],["title/10-1",[117,32.443,177,31.927,209,35.607,210,32.443]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10",[117,36.888,177,36.301,209,40.486]],["name/10",[117,0.358,177,0.352]],["text/10",[7,2.541,13,2.714,18,2.765,23,3.092,30,3.014,32,3.092,43,1.873,55,1.969,74,2.314,114,2.878,115,3.014,117,4.785,120,3.282,123,2.714,152,2.372,156,5.772,171,2.878,176,4.452,177,6.619,209,5.855,210,2.622,211,7.932,212,2.878,213,3.721,214,3.181,215,3.181,216,5.99,217,5.804,218,3.014,219,3.181,220,3.092,221,3.959,222,3.959,223,2.714,224,2.878,225,2.943,226,5.99,227,3.959,228,3.014,229,3.721,230,3.721,231,5.521,232,3.543,233,3.181,234,3.282,235,3.401,236,3.092,237,3.721,238,3.959,239,3.959,240,7.225,241,5.99,242,3.959,243,3.959,244,3.959,245,3.543,246,4.812,247,3.959,248,2.819,249,3.959,250,3.959,251,3.959,252,4.559,253,2.765,254,3.959,255,3.959,256,3.282,257,3.543,258,2.878,259,3.543,260,5.99,261,2.878,262,2.819,263,3.959,264,3.959]],["component/10",[166,0.554]],["title/11-1",[265,68.649]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[266,68.649]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[267,59.917]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11",[268,38.888,269,42.39,270,43.499]],["name/11",[270,0.422,271,0.484]],["text/11",[18,2.73,43,2.807,50,4.735,61,3.499,80,6.324,81,2.183,120,3.241,135,5.948,156,3.003,185,4.47,223,2.68,265,8.104,266,7.162,267,6.72,268,4.143,269,2.976,270,7.572,271,7.699,272,3.91,273,3.91,274,3.91,275,3.141,276,4.914,277,3.91,278,2.784,279,2.313,280,3.91,281,3.91,282,3.241,283,5.309,284,3.91,285,2.976,286,2.976,287,8.086,288,5.933,289,5.096,290,5.933,291,7.35,292,5.309,293,5.576,294,5.933,295,7.17,296,5.933,297,4.516,298,5.309,299,4.767,300,5.933,301,6.251,302,4.634,303,5.309,304,5.933,305,5.933,306,4.409,307,3.141,308,3.141,309,3.141,310,4.767,311,5.933,312,5.933,313,5.933,314,4.143,315,4.313]],["component/11",[166,0.554]],["title/12-1",[161,32.662,316,44.236]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[161,28.187,316,38.176,317,44.746]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12",[161,32.662,316,44.236]],["name/12",[161,0.274,316,0.371]],["text/12",[154,4.55,155,7.052,156,5.552,161,4.894,184,5.585,193,6.029,197,6.629,314,4.117,316,5.463,317,4.738,318,8.255,319,7.971,320,9.671,321,6.846]],["component/12",[166,0.554]],["title/13-1",[161,32.662,322,47.964]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[161,28.187,317,44.746,322,41.393]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13",[161,32.662,322,47.964]],["name/13",[161,0.274,322,0.402]],["text/13",[154,4.71,155,7.237,156,5.611,161,4.69,248,7.03,309,9.367,321,7.086,322,4.614,323,6.768,324,7.383,325,8.836]],["component/13",[166,0.554]],["title/14-1",[161,32.662,316,44.236]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[161,28.187,316,38.176,317,44.746]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14",[161,32.662,316,44.236]],["name/14",[161,0.274,316,0.371]],["text/14",[154,4.55,155,7.052,156,5.552,161,4.894,184,5.585,193,6.029,197,6.629,314,4.117,316,5.463,317,4.738,318,8.255,319,7.971,320,9.671,321,6.846]],["component/14",[166,0.554]],["title/15-1",[161,32.662,322,47.964]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[161,28.187,317,44.746,322,41.393]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15",[161,32.662,322,47.964]],["name/15",[161,0.274,322,0.402]],["text/15",[154,4.71,155,7.237,156,5.611,161,4.69,248,7.03,309,9.367,321,7.086,322,4.614,323,6.768,324,7.383,325,8.836]],["component/15",[166,0.554]],["title/16-1",[164,42.064,326,42.064]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[2,31.712,3,32.723,5,30.042,10,35.32,78,17.202,326,25.727]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[10,39.118,283,39.118,326,28.493,327,43.717,328,41.085]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[210,28.954,231,29.965,326,28.493,329,35.122,330,31.778]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[224,31.778,279,25.861,326,28.493,330,31.778,331,37.549]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[279,28.977,326,31.927,330,35.607,332,34.202]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16",[2,35.122,3,36.242,5,33.273,16,43.717,78,19.052]],["name/16",[11,0.961]],["text/16",[1,3.361,2,6.746,3,6.961,5,5.78,10,3.851,13,4.37,18,3.005,43,3.593,49,4.539,61,3.851,78,3.31,80,4.452,81,4.688,100,3.064,164,2.805,166,4.294,184,2.486,210,5.561,231,5.755,253,3.005,258,3.129,267,4.979,278,5.978,279,4.492,283,5.705,326,7.13,327,7.594,328,4.045,329,6.746,331,3.697,333,4.979,334,4.304,335,4.032,336,4.304,337,2.762,338,4.697,339,4.697,340,4.697,341,3.458,342,3.129,343,4.697,344,6.959,345,3.276,346,4.697,347,3.129,348,4.452,349,4.027,350,3.458,351,4.697,352,4.697,353,4.697,354,5.992,355,8.397,356,4.697,357,4.697,358,4.697,359,3.851,360,4.697]],["component/16",[354,0.773]],["title/17-1",[164,42.064,326,42.064]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[210,28.954,231,29.965,326,28.493,329,35.122,330,31.778]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[224,31.778,279,25.861,326,28.493,330,31.778,331,37.549]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[279,28.977,326,31.927,330,35.607,332,34.202]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17",[335,35.223,349,29.536,361,41.393]],["name/17",[361,0.76]],["text/17",[1,6.121,2,6.297,3,7.39,5,4.378,78,2.507,81,5.345,100,4.096,102,5.279,164,3.749,184,3.322,210,5.191,231,6.561,278,4.096,279,5.274,323,3.943,326,7.114,329,7.691,331,4.941,334,5.753,335,4.957,348,4.017,349,4.728,355,9.573,359,5.148,362,6.279,363,6.279,364,6.279,365,6.279,366,9.73,367,6.279,368,6.279]],["component/17",[354,0.773]],["title/18-1",[74,28.627,369,53.463,370,53.463,371,48.985]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[59,43.499,74,32.549,372,46.173]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[156,24.79,373,46.035,374,48.985,375,30.122]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18",[373,60.653,375,39.687]],["name/18",[376,1.116]],["text/18",[1,3.663,26,3.57,74,2.741,82,3.159,156,5.869,184,2.709,203,3.768,205,3.768,233,3.768,323,3.215,373,6.381,374,4.691,375,4.176,377,4.029,378,5.119,379,4.029,380,2.775,381,3.888,382,3.41,383,4.408,384,4.029,385,4.408,386,5.119,387,5.119,388,3.57,389,7.411,390,7.459,391,5.119,392,7.411,393,9.284,394,4.197,395,5.119,396,5.615,397,5.119,398,8.711,399,5.119,400,5.119,401,5.119,402,7.411,403,8.711,404,7.411,405,10.133,406,4.936,407,5.119,408,5.119,409,5.119,410,5.119,411,5.119,412,5.119]],["component/18",[413,0.47]],["title/19",[7,41.423,414,57.75]],["name/19",[361,0.76]],["text/19",[6,7.304,7,5.835,17,7.808,414,8.135]],["component/19",[413,0.47]],["title/20-1",[81,27.349,415,39.354,416,26.5,417,36.405]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[37,23.092,78,15.68,415,28.905,417,26.739,418,29.826,419,25.121,420,30.902]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[37,44.963,43,23.174,421,48.985]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[78,24.273,422,47.838,423,44.746]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20",[36,33.575,422,42.073,424,46.035,425,42.073]],["name/20",[426,1.116]],["text/20",[1,1.509,6,1.553,7,1.24,8,1.436,13,5.824,28,4.22,36,1.325,37,6.154,43,0.914,50,1.143,56,1.66,59,1.509,78,3.488,81,4.86,134,1.302,145,3.357,156,0.978,164,2.177,173,3.818,184,3.749,193,4.048,197,4.45,207,5.914,268,2.332,276,5.281,315,2.428,333,1.509,337,1.24,345,1.471,347,1.405,377,2.869,388,1.471,390,2.683,415,5.914,416,1.045,417,5.47,418,6.102,419,5.933,420,3.788,421,8.003,422,4.512,423,3.544,424,1.816,425,1.66,427,2.109,428,2.109,429,7.161,430,5.698,431,2.109,432,8.408,433,2.109,434,3.947,435,8.408,436,6.091,437,2.109,438,3.139,439,8.033,440,5.216,441,1.729,442,1.729,443,2.109,444,1.471,445,4.7,446,5.733,447,3.645,448,2.109,449,1.729,450,2.109,451,5.733,452,7.635,453,2.177,454,3.34,455,2.109,456,4.355,457,4.411,458,2.109,459,4.7,460,4.7,461,5.809,462,3.648,463,2.769,464,1.471,465,1.553,466,1.729,467,3.544,468,3.139,469,1.729,470,3.645,471,8.654,472,2.109,473,2.109,474,3.645,475,2.869,476,2.109,477,1.509,478,2.109,479,1.376,480,3.657,481,2.109,482,2.869,483,4.145,484,3.139,485,1.729,486,1.933,487,1.729,488,1.222,489,1.553,490,1.509,491,1.436,492,1.729,493,1.553,494,1.471,495,1.729,496,1.729,497,1.436]],["component/20",[413,0.47]],["title/21-1",[134,37.511,380,32.948,498,39.655]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[193,34.724,499,49.838,500,46.173]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[498,31.126,501,30.524,502,28.059,503,34.143,504,34.143]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[318,31.126,498,31.126,501,30.524,505,47.713,506,41.085]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[493,31.712,498,28.103,501,27.56,502,25.334,507,23.644,508,30.828]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[498,34.876,509,46.035,510,48.985,511,35.607]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21",[380,38.178,498,45.951]],["name/21",[512,1.116]],["text/21",[12,2.307,20,1.053,23,1.178,29,1.148,43,2.393,49,1.074,50,2.992,65,2.49,74,0.881,81,0.842,82,1.809,91,1.074,96,2.044,134,1.015,154,3.201,156,5.773,161,1.359,184,2.921,185,3.153,193,2.749,197,1.841,200,2.41,215,1.211,225,3.277,253,2.536,297,2.044,318,2.586,323,4.912,335,1.699,342,1.096,349,1.424,379,2.307,380,1.589,381,3.011,396,5.646,440,2.918,477,1.178,488,3.845,498,5.646,500,6.574,501,1.053,502,2.331,503,2.837,504,1.178,506,3.414,507,1.609,508,2.098,511,4.42,513,2.307,514,6.322,515,2.158,516,2.446,517,6.466,518,7.555,519,3.205,520,2.307,521,2.044,522,2.227,523,5.279,524,1.953,525,2.297,526,2.7,527,1.25,528,2.64,529,3.12,530,2.524,531,1.417,532,2.932,533,2.524,534,3.414,535,3.12,536,2.64,537,3.655,538,2.932,539,1.953,540,5.52,541,1.646,542,1.646,543,1.121,544,2.932,545,1.349,546,1.211,547,1.646,548,1.295,549,3.849,550,5.52,551,1.417,552,3.655,553,1.508,554,1.646,555,1.646,556,1.646,557,1.417,558,1.646,559,1.646,560,2.932,561,4.812,562,1.646,563,1.646,564,1.646,565,1.646,566,1.646,567,1.751,568,1.178,569,3.011,570,4.302,571,1.349,572,1.349,573,2.158,574,1.178,575,1.211,576,1.25,577,1.646,578,1.349,579,2.524,580,1.178,581,2.098,582,1.295,583,1.211,584,1.295,585,2.837,586,1.417,587,1.033,588,1.295,589,1.121,590,1.211,591,1.178,592,1.349,593,1.349,594,3.964,595,1.646,596,1.646,597,3.12,598,2.307,599,2.227,600,1.25,601,1.646,602,2.932,603,1.646,604,1.646,605,1.646,606,1.646,607,2.536,608,1.295,609,1.349,610,1.053,611,1.25,612,1.646,613,1.178,614,1.646,615,1.953,616,1.996,617,1.074,618,1.646,619,1.876,620,1.646]],["component/21",[413,0.47]],["title/22",[570,32.165,587,38.176,621,47.838]],["name/22",[622,1.116]],["text/22",[43,2.738,85,2.812,92,2.642,156,5.759,176,2.812,184,2.185,193,2.359,200,5.245,261,2.751,335,2.393,342,2.751,347,2.751,380,2.239,390,3.04,396,3.714,488,3.66,501,2.642,502,3.714,519,4.207,525,6.911,526,4.301,528,2.751,539,4.207,570,4.058,587,3.967,589,5.222,623,3.25,624,3.386,625,3.556,626,3.556,627,6.813,628,3.137,629,3.25,630,3.784,631,2.466,632,3.556,633,3.784,634,6.288,635,3.137,636,3.04,637,3.25,638,3.25,639,4.13,640,10.473,641,3.784,642,6.316,643,3.386,644,6.316,645,8.589,646,8.589,647,4.13,648,3.25,649,2.751,650,3.137,651,3.386,652,2.88,653,2.594,654,3.784,655,4.041,656,3.25,657,3.04,658,3.25,659,4.13,660,3.386]],["component/22",[413,0.47]],["title/23",[380,32.948,491,41.393,535,47.838]],["name/23",[661,1.116]],["text/23",[20,2.3,43,3.044,50,3.073,55,2.583,65,2.257,74,1.925,92,2.3,154,1.88,156,5.505,174,2.73,184,3.715,185,4.554,193,2.053,195,5.025,200,1.8,224,2.394,236,2.572,262,2.345,297,2.507,318,2.345,323,2.257,342,2.394,349,1.747,350,2.646,380,3.073,390,2.646,396,3.334,488,3.285,491,4.781,499,4.649,500,4.307,511,2.394,513,5.526,514,5.898,516,2.218,517,4.896,518,7.177,519,3.776,520,2.829,521,2.507,522,2.73,523,5.79,524,2.394,525,6.227,526,2.448,529,2.829,533,3.095,534,3.095,535,6.828,536,2.394,537,4.307,546,2.646,549,2.507,551,3.095,552,4.307,557,3.095,570,4.218,573,2.646,581,5.704,582,2.829,584,2.829,587,5.006,589,2.448,610,2.3,649,4.677,655,2.3,662,2.947,663,5.67,664,2.829,665,6.433,666,2.829,667,2.73,668,2.646,669,2.394,670,3.595,671,3.595,672,3.595,673,2.947,674,2.448,675,2.947,676,2.73,677,2.947,678,2.646,679,3.595,680,3.595,681,5.67,682,3.595,683,3.595,684,2.394,685,3.595,686,2.572,687,2.829,688,2.829,689,2.829]],["component/23",[413,0.47]],["title/24",[380,45.384]],["name/24",[690,1.116]],["text/24",[50,2.362,65,2.737,96,3.039,100,2.843,154,4.618,156,5.608,184,2.306,185,3.758,200,3.969,220,4.708,224,4.382,261,2.903,279,2.362,297,3.039,335,2.525,342,2.903,375,3.707,380,3.566,396,6.725,488,3.812,500,4.997,502,2.563,511,2.903,513,5.178,514,6.375,515,3.208,516,2.689,517,5.527,518,7.601,519,5.88,520,3.43,521,3.039,522,3.31,523,4.132,524,2.903,525,5.774,526,5.397,527,3.31,528,4.382,529,3.43,530,3.753,531,3.753,536,2.903,537,4.997,570,4.672,585,6.782,587,2.737,589,5.397,590,4.843,607,2.788,638,3.43,684,4.382,691,3.31,692,3.573,693,3.43]],["component/24",[413,0.47]],["title/25",[200,30.443,627,44.746,694,34.724]],["name/25",[695,1.116]],["text/25",[36,2.103,43,2.904,47,2.883,50,1.815,81,1.713,85,2.28,89,2.883,93,2.635,100,3.496,109,2.543,145,3.737,152,2.941,156,4.886,159,2.23,161,4.144,184,1.772,185,1.913,193,1.913,200,6.088,203,2.465,223,2.103,258,2.23,335,3.883,347,2.23,390,3.945,396,4.927,488,1.94,490,2.396,494,2.335,501,3.428,502,4.504,514,4.287,515,2.465,519,2.23,523,2.103,524,2.23,525,3.105,526,3.649,527,2.543,539,3.569,545,5.494,567,3.2,570,4.433,580,2.396,587,5.613,588,2.635,589,2.28,607,2.142,610,2.142,615,2.23,616,2.28,619,3.428,621,2.635,623,2.635,625,2.883,626,2.883,627,7.403,628,4.071,633,3.068,634,4.394,649,5.953,655,3.428,657,2.465,669,4.463,694,4.786,696,3.94,697,2.465,698,2.543,699,2.635,700,3.348,701,3.348,702,5.77,703,3.348,704,2.543,705,2.745,706,3.348,707,3.348,708,3.348,709,3.348,710,2.335,711,3.348,712,5.359,713,3.068,714,3.835,715,2.465,716,4.394,717,2.543,718,3.348,719,3.348,720,2.465,721,5.359,722,2.396,723,3.068,724,3.068,725,2,726,2.745,727,2.396,728,2.883,729,3.348,730,3.348]],["component/25",[413,0.47]],["title/26",[519,46.914,731,64.539]],["name/26",[732,1.116]],["text/26",[20,1.619,43,3.126,50,1.372,58,3.671,81,1.295,91,1.651,152,1.389,156,5.88,176,1.723,184,1.339,193,1.446,198,1.991,200,1.267,210,1.536,225,1.723,248,5.692,279,2.308,323,5.48,341,6.423,342,2.836,349,3.141,375,1.426,380,1.372,382,1.685,388,4.508,396,6.036,479,3.596,502,1.488,514,2.724,516,3.402,517,6.542,519,5.535,522,4.187,523,4.529,524,1.685,525,3.746,539,6.578,551,2.179,552,4.91,569,1.922,570,3.421,574,1.811,575,3.134,584,1.991,587,2.674,591,3.047,597,6.15,610,1.619,636,1.863,674,1.723,710,1.765,733,2.319,734,2.319,735,7.692,736,2.531,737,2.531,738,2.531,739,2.075,740,2.179,741,2.531,742,2.531,743,1.991,744,2.179,745,2.179,746,2.531,747,2.531,748,1.811,749,2.319,750,2.531,751,9.689,752,4.626,753,6.465,754,5.923,755,7.513,756,3.754,757,4.187,758,2.531,759,2.531,760,2.531,761,2.531,762,2.531,763,3.667,764,3.491,765,2.531,766,2.531]],["component/26",[413,0.47]],["title/27-1",[161,32.662,502,41.423]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[733,64.539,734,64.539]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27",[161,28.187,200,30.443,627,44.746]],["name/27",[767,1.116]],["text/27",[50,3.746,81,2.846,82,2.165,85,2.389,95,2.511,96,2.447,134,3.433,156,5.686,161,4.598,173,2.337,176,2.389,185,3.178,200,4.788,219,4.095,224,2.337,233,2.583,262,2.289,279,3.015,314,2.245,335,2.033,349,2.703,380,3.015,381,2.665,396,4.625,464,3.879,466,4.561,488,2.033,490,2.511,501,2.245,502,2.063,514,5.485,518,4.82,519,5.711,521,5.484,523,5.385,524,3.705,525,4.005,526,5.355,539,3.705,553,6.332,570,2.943,589,4.706,590,4.095,597,4.378,607,2.245,619,3.559,649,6.076,652,3.879,657,2.583,658,2.761,669,2.337,687,4.378,698,2.665,699,2.761,725,3.322,768,2.583,769,2.761,770,3.509,771,2.877,772,3.509,773,7.865,774,3.509,775,7.865,776,7.865,777,6.772,778,5.563,779,5.563,780,5.563,781,3.509,782,3.509,783,3.509,784,3.509,785,4.561,786,3.509,787,3.509,788,3.509,789,3.509,790,3.509,791,6.911]],["component/27",[413,0.47]],["title/28",[657,51.85,696,41.423]],["name/28",[792,1.116]],["text/28",[24,3.187,50,2.594,57,3.187,74,2.562,81,2.448,82,4.353,92,3.061,152,2.626,156,5.769,198,3.766,200,3.533,318,3.121,381,3.635,396,6.573,488,4.087,514,4.513,518,3.337,523,5.262,524,3.187,525,4.087,536,3.187,539,7.105,570,3.733,587,3.005,591,3.424,597,6.594,607,3.061,610,3.061,641,6.463,643,5.784,696,6.438,735,8.746,748,3.424,793,4.785,794,4.785,795,4.12,796,3.337,797,4.12,798,4.384,799,7.054,800,5.784,801,4.785,802,9.247,803,4.384,804,4.785,805,3.635,806,4.785,807,4.785,808,4.785]],["component/28",[413,0.47]],["title/29",[657,51.85,764,57.75]],["name/29",[763,0.961]],["text/29",[20,2.068,24,2.153,43,1.401,49,2.109,50,2.824,58,3.47,65,2.03,104,2.379,156,5.872,184,4.896,193,4.287,197,5.811,200,2.609,223,2.03,248,6.656,323,6.407,341,3.835,381,2.455,382,2.153,388,5.234,396,5.173,479,3.398,502,1.901,514,3.333,515,2.379,516,4.631,517,6.93,523,3.272,524,2.153,525,1.873,536,2.153,539,4.999,570,1.71,574,2.313,587,2.03,597,6.923,600,2.455,615,2.153,651,2.65,674,2.201,710,2.254,735,6.153,745,2.783,751,8.477,752,2.313,754,5.996,756,3.547,757,3.957,763,5.635,764,5.365,797,2.783,809,3.232,810,3.232,811,2.544,812,7.505,813,8.477,814,3.232,815,3.232,816,7.505,817,5.209,818,3.232,819,8.797,820,3.232,821,3.232]],["component/29",[413,0.47]],["title/30",[657,51.85,822,64.539]],["name/30",[823,1.023]],["text/30",[43,2.783,50,2.76,57,2.093,82,1.94,84,2.14,92,2.011,100,2.05,104,2.314,134,1.94,156,5.809,184,1.663,185,4.961,193,1.795,200,1.574,223,1.974,253,2.011,262,2.05,323,4.032,335,2.951,381,2.387,396,4.771,488,1.821,503,4.595,504,4.595,514,4.108,516,4.556,517,5.658,518,6.057,523,4.032,525,4.278,527,2.387,533,2.706,534,2.706,543,3.468,557,2.706,570,3.398,571,5.264,572,2.577,574,3.645,576,3.869,600,2.387,631,6.403,648,2.473,656,2.473,657,2.314,665,2.88,668,2.314,674,2.14,697,4.727,797,2.706,805,2.387,822,4.667,823,5.883,824,3.143,825,2.192,826,2.05,827,2.577,828,5.264,829,2.473,830,5.053,831,2.706,832,2.577,833,6.421,834,3.143,835,6.421,836,3.143,837,2.88,838,3.143,839,3.143,840,5.658,841,3.143,842,3.143,843,3.143,844,7.383,845,5.093,846,5.093,847,5.093,848,5.093,849,5.093,850,5.093,851,2.706,852,2.577,853,3.143,854,2.093,855,2.387,856,2.577,857,2.387,858,2.314,859,7.383,860,3.143,861,6.421,862,3.143,863,3.143,864,3.143]],["component/30",[413,0.47]],["title/31",[43,20.682,200,23.895,502,28.059,616,32.49,627,35.122]],["name/31",[865,1.116]],["text/31",[43,4.733,49,6.006,81,3.585,156,4.768,171,4.667,184,3.708,185,4.003,193,4.003,197,4.401,207,5.158,224,6.132,233,5.158,488,6.328,502,5.414,519,6.132,525,5.335,526,7.436,589,7.436,616,7.002,619,4.483,637,5.515,748,6.588,866,6.42,867,5.158]],["component/31",[413,0.47]],["title/32",[200,35.276,627,51.85]],["name/32",[868,1.116]],["text/32",[8,6.212,13,2.923,22,1.49,43,2.017,50,1.526,58,1.875,74,2.492,82,1.737,92,3.806,95,2.015,104,2.072,145,1.963,156,5.778,185,1.608,200,4.369,314,1.801,318,1.837,335,2.697,337,2.737,347,1.875,380,1.526,396,3.499,461,2.308,488,1.631,502,3.499,503,6.769,514,2.977,515,2.072,516,4.723,518,5.749,523,1.768,524,1.875,525,2.697,526,1.917,539,3.962,570,3.148,574,2.015,575,2.072,587,3.736,610,1.801,623,2.216,624,2.308,625,2.424,626,2.424,627,4.379,628,2.138,638,3.663,655,1.801,673,2.308,698,2.138,699,2.216,713,2.58,740,2.424,749,2.58,752,2.015,796,3.246,825,1.963,830,4.682,837,5.451,857,5.249,867,2.072,869,4.008,870,2.216,871,4.654,872,2.815,873,6.911,874,7.122,875,2.072,876,7.653,877,2.815,878,7.653,879,8.724,880,2.815,881,7.653,882,9.123,883,2.815,884,2.216,885,1.801,886,5.949,887,5.949,888,6.911,889,9.123,890,5.666,891,2.815,892,2.815,893,3.663,894,2.815,895,4.654,896,2.815,897,2.58,898,2.58,899,2.815,900,2.308,901,2.815,902,2.815,903,2.138,904,2.308]],["component/32",[413,0.47]],["title/33",[380,38.178,500,53.503]],["name/33",[905,1.116]],["text/33",[18,2.912,47,3.919,50,3.684,65,2.858,85,3.099,91,2.969,107,2.718,152,2.498,154,4.72,156,5.546,184,2.408,185,2.6,200,2.279,210,2.762,215,3.35,253,2.912,297,3.174,335,2.637,380,2.467,396,6.604,488,2.637,500,7.973,501,2.912,511,3.031,513,5.349,514,6.48,515,3.35,516,2.809,517,5.673,518,7.524,519,4.527,520,3.582,521,3.174,522,3.457,523,2.858,524,3.031,525,5.869,526,5.54,527,3.457,528,4.527,529,3.582,530,3.919,531,3.919,536,3.031,537,5.163,543,3.099,552,3.457,570,2.408,589,3.099,619,4.348,664,3.582,687,3.582,697,3.35,769,5.349,854,6.01,906,4.551,907,3.919,908,4.551,909,3.919,910,4.17,911,3.732,912,3.732]],["component/33",[413,0.47]],["title/34",[380,38.178,511,46.914]],["name/34",[913,1.116]],["text/34",[12,3.019,43,2.586,50,2.079,55,2.719,65,4.598,74,3.195,96,2.675,100,2.503,152,2.106,154,3.121,156,5.635,184,2.03,185,3.409,200,1.921,279,2.079,297,2.675,318,2.503,335,2.223,349,1.864,379,3.019,396,5.571,477,2.745,486,3.515,488,4.243,502,5.571,503,2.745,504,4.27,506,3.304,507,3.275,508,4.27,511,7.151,513,4.696,514,5.284,515,2.824,516,2.367,517,5.76,518,7.487,519,3.974,520,3.019,521,2.675,522,2.914,523,3.747,524,2.555,525,5.185,526,2.612,527,2.914,528,2.555,529,3.019,536,2.555,537,5.562,543,4.063,567,3.563,570,3.875,581,2.745,585,4.27,589,2.612,599,2.914,607,2.454,652,2.675,655,2.454,667,2.914,684,2.555,698,4.532,699,4.696,795,3.304,854,2.555,874,2.675,890,3.145,910,5.467,912,4.892,914,3.515,915,3.515,916,3.515,917,3.515,918,3.837,919,3.019,920,3.019,921,3.304,922,3.515,923,3.019,924,3.304]],["component/34",[413,0.47]],["title/35",[7,41.423,925,64.539]],["name/35",[361,0.76]],["text/35",[6,6.659,7,5.32,17,7.12,925,8.289,926,8.289,927,9.047,928,9.047,929,6.872,930,9.047,931,9.047,932,8.289,933,9.047,934,7.417,935,9.047]],["component/35",[413,0.47]],["title/36-1",[107,50.003]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[419,45.062,696,41.423]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[231,52.585]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36-4",[936,64.539,937,51.85]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["title/36-5",[65,33.575,231,33.575,496,43.832,938,48.985]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["title/36-6",[461,57.75,939,60.653]],["name/36-6",[]],["text/36-6",[]],["component/36-6",[]],["title/36-7",[419,45.062,608,55.433]],["name/36-7",[]],["text/36-7",[]],["component/36-7",[]],["title/36-8",[885,45.062,940,64.539]],["name/36-8",[]],["text/36-8",[]],["component/36-8",[]],["title/36-9",[885,45.062,939,60.653]],["name/36-9",[]],["text/36-9",[]],["component/36-9",[]],["title/36-10",[608,47.838,941,55.696,942,55.696]],["name/36-10",[]],["text/36-10",[]],["component/36-10",[]],["title/36-11",[419,45.062,943,57.75]],["name/36-11",[]],["text/36-11",[]],["component/36-11",[]],["title/36-12",[419,38.888,944,52.343,945,52.343]],["name/36-12",[]],["text/36-12",[]],["component/36-12",[]],["title/36-13",[43,17.021,419,38.866,943,32.194,944,33.812,945,33.812,946,29.826]],["name/36-13",[]],["text/36-13",[]],["component/36-13",[]],["title/36-14",[111,32.49,419,30.524,943,39.118,947,47.713,948,36.242]],["name/36-14",[]],["text/36-14",[]],["component/36-14",[]],["title/36-15",[419,34.202,456,40.609,497,36.405,748,38.257]],["name/36-15",[]],["text/36-15",[]],["component/36-15",[]],["title/36-16",[496,49.838,949,49.838,950,47.838]],["name/36-16",[]],["text/36-16",[]],["component/36-16",[]],["title/36-17",[53,44.746,80,38.888,951,60.788]],["name/36-17",[]],["text/36-17",[]],["component/36-17",[]],["title/36-18",[279,45.384]],["name/36-18",[]],["text/36-18",[]],["component/36-18",[]],["title/36-19",[279,38.178,382,46.914]],["name/36-19",[]],["text/36-19",[]],["component/36-19",[]],["title/36-20",[279,38.178,952,60.653]],["name/36-20",[]],["text/36-20",[]],["component/36-20",[]],["title/36",[7,41.423,419,45.062]],["name/36",[361,0.76]],["text/36",[1,1.169,7,0.512,8,0.592,13,1.451,17,0.685,18,0.556,20,1.045,23,2.82,24,3.188,25,1.203,26,1.139,28,0.64,29,0.607,30,0.607,37,0.512,38,0.661,43,2.641,49,1.507,50,1.579,53,0.64,54,1.573,55,0.744,56,0.685,57,1.539,58,1.94,65,2.753,67,0.546,71,0.685,73,0.713,74,3.263,75,0.713,76,0.622,80,1.045,81,2.449,82,1.425,84,0.592,85,0.592,86,0.685,91,2.571,92,2.804,95,1.169,100,1.066,104,3.523,110,0.713,111,1.112,114,2.625,121,1.203,135,1.112,142,1.203,145,1.139,149,2.213,152,0.477,154,0.455,156,2.39,157,0.537,158,1.425,159,0.579,160,1.088,161,1.351,164,3.467,173,2.92,176,0.592,177,0.976,184,1.827,193,1.664,195,0.622,197,1.451,198,0.685,200,1.157,202,0.661,203,1.203,205,0.64,207,0.64,210,0.528,212,1.088,223,0.546,224,0.579,225,0.592,228,2.408,231,4.431,236,0.622,248,1.066,253,0.556,258,1.94,261,2.3,262,1.066,269,0.607,278,1.066,279,2.977,282,1.241,307,1.203,308,0.64,309,0.64,310,0.64,314,0.556,315,0.579,316,0.546,323,0.546,332,1.478,333,0.622,335,2.774,342,0.579,372,0.661,377,1.286,382,2.3,396,0.512,406,0.579,418,3.636,419,6.691,420,4.795,440,0.64,445,1.339,452,1.286,456,3.916,459,1.894,460,0.713,461,6.521,467,0.64,469,0.713,475,0.685,479,1.066,482,0.685,485,1.339,490,1.169,491,1.983,493,3.523,495,1.339,496,8.374,497,5.193,499,0.713,508,0.622,509,1.407,510,0.797,511,0.579,543,1.112,546,1.203,548,0.685,549,1.139,567,0.519,575,0.64,580,1.169,582,1.818,586,0.749,589,0.592,593,1.339,608,2.718,609,0.713,610,1.045,611,1.241,613,0.622,615,0.579,619,1.045,623,1.818,636,1.7,649,0.579,651,0.713,655,1.045,664,0.685,667,2.623,668,1.203,669,0.579,674,1.983,676,0.661,684,1.94,686,1.169,687,1.286,688,0.685,692,2.832,696,2.815,697,2.144,704,4.173,710,1.139,715,0.64,716,0.713,720,0.64,722,1.653,725,0.519,727,0.622,731,0.797,739,0.713,743,0.685,748,2.82,756,1.573,757,0.661,764,0.713,768,0.64,785,1.339,796,1.611,798,0.797,800,0.713,803,0.797,826,0.567,828,1.339,829,1.286,855,0.661,858,1.7,866,2.408,867,0.64,874,0.607,885,0.556,903,0.661,929,1.755,934,1.339,936,0.797,937,0.64,938,2.117,939,0.749,940,0.797,942,0.797,943,4.759,944,2.974,945,2.974,946,0.661,948,0.661,952,0.749,953,3.454,954,5.155,955,0.713,956,0.87,957,4.273,958,0.749,959,0.661,960,2.31,961,0.592,962,0.797,963,2.388,964,2.669,965,0.87,966,2.084,967,3.924,968,1.286,969,2.913,970,2.31,971,3.916,972,1.407,973,1.634,974,0.87,975,0.661,976,0.87,977,0.87,978,0.87,979,0.87,980,0.87,981,1.407,982,1.407,983,1.286,984,0.87,985,0.87,986,0.607,987,1.497,988,2.31,989,0.749,990,2.001,991,1.894,992,2.144,993,0.797,994,0.749,995,0.87,996,0.661,997,0.797,998,0.797,999,0.713,1000,0.797,1001,0.661,1002,0.685,1003,0.87,1004,1.241,1005,0.749,1006,0.713,1007,0.797,1008,0.797,1009,0.87,1010,0.87,1011,2.31,1012,0.87,1013,0.87,1014,0.87,1015,1.634,1016,0.661,1017,0.749,1018,0.87,1019,1.407,1020,1.478,1021,0.713,1022,1.818,1023,1.286,1024,1.286,1025,1.241,1026,0.713,1027,0.797,1028,0.87,1029,0.87,1030,0.713,1031,1.045,1032,0.87,1033,0.87,1034,0.713,1035,0.87,1036,0.749,1037,0.87,1038,0.713,1039,0.713,1040,0.797,1041,0.87,1042,1.989,1043,0.749,1044,0.87,1045,1.634,1046,0.87,1047,0.87,1048,0.87,1049,0.87,1050,2.913,1051,3.454,1052,2.31,1053,2.31,1054,1.755,1055,1.634,1056,1.634,1057,0.87,1058,0.87,1059,0.713,1060,0.87,1061,0.87,1062,1.286,1063,0.87,1064,0.749,1065,0.797,1066,1.634,1067,0.797,1068,0.87,1069,1.407,1070,2.974,1071,1.989,1072,0.713,1073,0.797,1074,0.64,1075,0.87,1076,0.87,1077,0.87,1078,0.87,1079,1.634,1080,2.31,1081,2.31,1082,1.634,1083,0.87,1084,0.749,1085,0.87,1086,0.661,1087,0.713,1088,1.286,1089,0.87,1090,0.87,1091,0.797,1092,0.87,1093,1.088,1094,0.87,1095,0.713,1096,0.87,1097,1.286,1098,2.388,1099,0.749,1100,0.685,1101,0.797,1102,0.45,1103,0.87,1104,0.87,1105,1.634,1106,1.241,1107,0.87,1108,0.797,1109,0.749,1110,0.749,1111,0.749,1112,0.87,1113,2.195,1114,3.611,1115,2.31,1116,0.749,1117,0.797,1118,0.797,1119,0.87,1120,0.64,1121,0.749,1122,1.339,1123,0.87,1124,0.797,1125,0.685,1126,2.292,1127,0.685,1128,0.661,1129,2.832,1130,1.7,1131,0.749,1132,0.87,1133,0.749,1134,0.87,1135,0.87,1136,2.117,1137,0.87,1138,0.87,1139,1.286,1140,0.87,1141,0.749,1142,0.87,1143,0.607,1144,0.685,1145,0.87,1146,0.749,1147,0.713,1148,0.87,1149,0.749,1150,0.64,1151,0.797,1152,0.87,1153,0.749,1154,0.713,1155,0.87,1156,0.87,1157,0.87,1158,0.87,1159,0.713,1160,1.634,1161,0.87,1162,0.713,1163,0.87,1164,0.797,1165,0.366,1166,0.749,1167,0.713,1168,0.44,1169,0.592,1170,2.913,1171,1.139,1172,0.749,1173,0.749,1174,0.685,1175,0.87,1176,0.87,1177,0.749,1178,1.066,1179,0.87,1180,0.661,1181,1.286,1182,0.87]],["component/36",[413,0.47]],["title/37",[6,51.85,7,41.423]],["name/37",[11,0.961]],["text/37",[6,7.031,7,6.563,18,6.111,19,8.225,30,6.661,87,7.256,828,7.832]],["component/37",[413,0.47]],["title/38-1",[416,30.131,1183,44.746,1184,52.343]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[67,27.055,78,17.202,919,33.903,1168,21.803,1183,31.712,1185,19.627]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38-3",[78,14.405,246,26.555,416,17.881,502,21.214,507,19.799,653,22.655,1168,18.257,1185,16.435]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["title/38-4",[507,38.66,1186,49.12]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["title/38-5",[507,38.66,1187,51.85]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["title/38-6",[78,19.052,653,29.965,923,37.549,1168,24.147,1185,21.738]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["title/38-7",[78,21.348,1168,27.057,1185,24.357,1188,32.443]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["title/38-8",[219,51.85,1188,42.744]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["title/38-9",[252,33.273,1189,43.717,1190,27.256,1191,32.49,1192,34.143]],["name/38-9",[]],["text/38-9",[]],["component/38-9",[]],["title/38-10",[464,30.042,923,33.903,1190,24.609,1191,29.335,1192,30.828,1193,13.104]],["name/38-10",[]],["text/38-10",[]],["component/38-10",[]],["title/38-11",[152,29.343,1190,30.54,1191,36.405,1192,38.257]],["name/38-11",[]],["text/38-11",[]],["component/38-11",[]],["title/38-12",[494,37.282,1168,27.057,1185,24.357,1194,43.832]],["name/38-12",[]],["text/38-12",[]],["component/38-12",[]],["title/38-13",[332,45.062,501,45.062]],["name/38-13",[]],["text/38-13",[]],["component/38-13",[]],["title/38-14",[74,32.549,152,33.363,1188,36.888]],["name/38-14",[]],["text/38-14",[]],["component/38-14",[]],["title/38-15",[720,51.85,1195,45.062]],["name/38-15",[]],["text/38-15",[]],["component/38-15",[]],["title/38-16",[1188,42.744,1196,64.539]],["name/38-16",[]],["text/38-16",[]],["component/38-16",[]],["title/38-17",[957,39.354,1168,27.057,1185,24.357,1197,46.035]],["name/38-17",[]],["text/38-17",[]],["component/38-17",[]],["title/38-18",[1168,35.648,1185,32.092]],["name/38-18",[]],["text/38-18",[]],["component/38-18",[]],["title/38-19",[957,39.354,1168,27.057,1185,24.357,1198,43.832]],["name/38-19",[]],["text/38-19",[]],["component/38-19",[]],["title/38-20",[201,59.917]],["name/38-20",[]],["text/38-20",[]],["component/38-20",[]],["title/38-21",[36,24.66,55,17.89,78,15.68,653,24.66,1004,29.826,1168,19.873,1185,17.89]],["name/38-21",[]],["text/38-21",[]],["component/38-21",[]],["title/38-22",[78,19.052,416,23.65,462,26.883,1168,24.147,1185,21.738]],["name/38-22",[]],["text/38-22",[]],["component/38-22",[]],["title/38-23",[462,34.249,1199,34.249,1200,31.096]],["name/38-23",[]],["text/38-23",[]],["component/38-23",[]],["title/38-24",[81,31.096,1102,31.44,1200,31.096]],["name/38-24",[]],["text/38-24",[]],["component/38-24",[]],["title/38-25",[1102,36.432,1201,51.85]],["name/38-25",[]],["text/38-25",[]],["component/38-25",[]],["title/38-26",[107,42.064,1201,51.85]],["name/38-26",[]],["text/38-26",[]],["component/38-26",[]],["title/38-27",[1201,51.85,1202,55.433]],["name/38-27",[]],["text/38-27",[]],["component/38-27",[]],["title/38-28",[22,37.272,1188,42.744]],["name/38-28",[]],["text/38-28",[]],["component/38-28",[]],["title/38-29",[1188,36.888,1203,42.39,1204,43.499]],["name/38-29",[]],["text/38-29",[]],["component/38-29",[]],["title/38-30",[1004,46.173,1188,36.888,1203,42.39]],["name/38-30",[]],["text/38-30",[]],["component/38-30",[]],["title/38-31",[78,19.052,1168,24.147,1185,21.738,1188,28.954,1204,34.143]],["name/38-31",[]],["text/38-31",[]],["component/38-31",[]],["title/38-32",[279,32.948,1169,41.393,1188,36.888]],["name/38-32",[]],["text/38-32",[]],["component/38-32",[]],["title/38-33",[279,38.178,1188,42.744]],["name/38-33",[]],["text/38-33",[]],["component/38-33",[]],["title/38-34",[1185,32.092,1205,55.433]],["name/38-34",[]],["text/38-34",[]],["component/38-34",[]],["title/38-35",[1188,42.744,1206,55.433]],["name/38-35",[]],["text/38-35",[]],["component/38-35",[]],["title/38-36",[1207,68.649]],["name/38-36",[]],["text/38-36",[]],["component/38-36",[]],["title/38-37",[1031,53.566]],["name/38-37",[]],["text/38-37",[]],["component/38-37",[]],["title/38-38",[652,37.282,966,38.257,1031,48.913]],["name/38-38",[]],["text/38-38",[]],["component/38-38",[]],["title/38-39",[55,24.357,212,35.607,1031,48.913]],["name/38-39",[]],["text/38-39",[]],["component/38-39",[]],["title/38-40",[684,35.607,1031,34.202,1185,24.357,1188,32.443]],["name/38-40",[]],["text/38-40",[]],["component/38-40",[]],["title/38-41",[1031,38.888,1188,36.888,1208,55.696]],["name/38-41",[]],["text/38-41",[]],["component/38-41",[]],["title/38-42",[78,21.348,1168,27.057,1171,37.282,1185,24.357]],["name/38-42",[]],["text/38-42",[]],["component/38-42",[]],["title/38-43",[78,21.348,1168,27.057,1185,24.357,1209,40.609]],["name/38-43",[]],["text/38-43",[]],["component/38-43",[]],["title/38-44",[78,21.348,1168,27.057,1185,24.357,1210,35.607]],["name/38-44",[]],["text/38-44",[]],["component/38-44",[]],["title/38-45",[22,28.289,957,39.354,1168,27.057,1185,24.357]],["name/38-45",[]],["text/38-45",[]],["component/38-45",[]],["title/38-46",[22,25.247,957,35.122,1168,24.147,1185,21.738,1198,39.118]],["name/38-46",[]],["text/38-46",[]],["component/38-46",[]],["title/38-47",[78,21.348,453,31.927,1168,27.057,1185,24.357]],["name/38-47",[]],["text/38-47",[]],["component/38-47",[]],["title/38-48",[78,28.108,649,31.778,1168,24.147,1185,21.738]],["name/38-48",[]],["text/38-48",[]],["component/38-48",[]],["title/38-49",[78,19.052,507,26.187,1102,24.678,1168,24.147,1185,21.738]],["name/38-49",[]],["text/38-49",[]],["component/38-49",[]],["title/38-50",[55,24.357,507,29.343,1186,37.282,1187,39.354]],["name/38-50",[]],["text/38-50",[]],["component/38-50",[]],["title/38-51",[436,37.282,507,29.343,1106,40.609,1186,37.282]],["name/38-51",[]],["text/38-51",[]],["component/38-51",[]],["title/38-52",[67,44.236,1186,49.12]],["name/38-52",[]],["text/38-52",[]],["component/38-52",[]],["title/38-53",[507,38.66,1187,51.85]],["name/38-53",[]],["text/38-53",[]],["component/38-53",[]],["title/38-54",[67,33.575,416,26.5,1169,36.405,1187,39.354]],["name/38-54",[]],["text/38-54",[]],["component/38-54",[]],["title/38-55",[67,33.575,416,26.5,1187,39.354,1211,40.609]],["name/38-55",[]],["text/38-55",[]],["component/38-55",[]],["title/38-56",[78,21.348,1168,27.057,1185,24.357,1212,36.405]],["name/38-56",[]],["text/38-56",[]],["component/38-56",[]],["title/38-57",[1186,49.12,1212,47.964]],["name/38-57",[]],["text/38-57",[]],["component/38-57",[]],["title/38-58",[1200,36.033,1212,47.964]],["name/38-58",[]],["text/38-58",[]],["component/38-58",[]],["title/38-59",[717,46.173,1212,41.393,1213,47.838]],["name/38-59",[]],["text/38-59",[]],["component/38-59",[]],["title/38-60",[1214,76.719]],["name/38-60",[]],["text/38-60",[]],["component/38-60",[]],["title/38-61",[78,19.052,276,29.965,1168,24.147,1185,21.738,1215,35.122]],["name/38-61",[]],["text/38-61",[]],["component/38-61",[]],["title/38-62",[696,41.423,1195,45.062]],["name/38-62",[]],["text/38-62",[]],["component/38-62",[]],["title/38-63",[696,35.747,1171,42.39,1195,38.888]],["name/38-63",[]],["text/38-63",[]],["component/38-63",[]],["title/38-64",[696,35.747,1187,44.746,1195,38.888]],["name/38-64",[]],["text/38-64",[]],["component/38-64",[]],["title/38-65",[453,28.493,696,28.059,968,37.549,1215,35.122,1216,41.085]],["name/38-65",[]],["text/38-65",[]],["component/38-65",[]],["title/38-66",[78,21.348,1168,27.057,1185,24.357,1217,40.609]],["name/38-66",[]],["text/38-66",[]],["component/38-66",[]],["title/38-67",[78,19.052,436,33.273,1216,41.085,1218,35.122,1219,33.273]],["name/38-67",[]],["text/38-67",[]],["component/38-67",[]],["title/38",[78,24.273,1168,30.764,1185,27.695]],["name/38",[1220,1.116]],["text/38",[7,0.119,8,0.137,13,2.648,18,0.376,20,1.422,21,0.364,22,1.724,23,0.144,24,2.091,25,0.701,26,0.277,29,0.141,30,0.664,31,1.35,32,0.806,36,0.25,37,0.234,38,0.153,40,0.165,42,0.569,43,3.398,49,0.383,50,1.829,53,1.636,54,0.526,55,0.947,57,2.323,59,1.487,63,0.174,65,0.918,67,0.485,74,1.19,76,0.806,77,0.144,78,3.899,80,0.254,81,2.603,82,1.543,84,0.137,85,0.526,87,0.302,89,0.342,91,0.845,92,1.33,95,0.285,100,0.735,102,0.363,104,1.94,107,0.238,108,0.293,109,0.153,110,0.165,111,0.767,114,0.134,116,0.721,117,0.357,121,0.569,123,0.369,134,1.459,138,0.313,145,0.785,149,0.587,150,0.506,152,2.366,154,0.848,156,3.459,157,1.862,158,0.902,159,2.248,160,0.515,161,0.677,162,0.526,164,0.968,165,0.587,171,0.134,172,0.504,173,1.184,174,0.856,177,0.121,184,0.107,185,0.643,193,0.227,195,1.045,197,0.127,200,3.185,201,0.927,202,0.723,203,0.149,210,0.241,212,0.515,214,0.569,215,0.149,217,1.636,218,0.664,219,0.829,220,0.285,225,0.767,228,0.141,231,0.707,236,0.285,237,0.174,246,0.433,248,0.504,252,0.785,253,0.609,257,0.165,258,0.634,259,1.198,262,0.259,267,0.285,268,1.037,269,3.378,275,0.569,276,1.305,278,2.126,279,2.067,285,0.904,286,0.141,289,0.159,291,1.591,301,0.421,302,0.553,307,0.433,309,0.569,314,1.137,315,0.134,316,0.369,317,0.149,318,0.383,326,0.351,330,0.75,332,0.376,333,0.421,335,1.37,337,1.55,342,0.392,345,0.785,347,0.75,348,0.129,350,0.569,359,0.482,361,0.137,372,1.35,375,1.002,382,1.666,384,1.276,396,0.346,406,0.265,415,0.149,416,3.036,417,0.648,423,0.149,424,0.174,425,0.159,429,0.165,430,0.259,436,2.51,440,0.149,441,0.165,453,2.083,462,0.73,464,0.41,465,0.433,466,0.165,477,0.144,479,0.845,488,2.021,489,0.149,490,0.553,491,0.4,492,0.165,493,0.954,494,1.648,497,1.415,498,0.383,501,0.254,502,0.454,503,0.285,504,0.421,507,3.725,511,0.134,516,0.363,525,0.751,528,0.134,536,3.492,537,0.153,539,0.392,546,0.293,549,0.539,568,0.144,569,0.447,570,0.504,573,0.149,574,0.144,575,0.293,576,0.723,578,0.326,580,0.285,583,0.293,585,0.144,587,0.485,588,0.159,590,0.433,591,0.144,592,0.482,593,0.165,598,1.15,599,0.587,600,0.984,607,0.721,610,0.494,611,0.302,613,0.285,615,2.934,616,1.104,617,1.804,619,0.376,628,0.153,629,0.463,631,0.461,634,0.326,635,0.153,636,0.149,637,0.608,648,0.159,649,1.666,650,0.302,652,0.904,653,1.895,654,0.185,655,1.422,656,1.02,658,0.159,660,0.633,662,0.165,667,0.984,668,0.149,669,0.634,674,0.137,676,0.723,677,0.165,678,0.293,684,0.265,686,1.045,691,0.153,693,0.159,694,0.336,696,2.422,697,0.829,698,0.302,699,0.159,705,0.326,710,1.131,714,0.927,715,0.701,717,1.579,720,0.701,722,0.681,724,0.364,725,0.238,726,0.165,727,0.285,739,0.78,748,0.144,752,0.553,756,0.4,768,0.149,771,0.633,796,0.664,805,0.302,811,0.159,825,0.277,826,0.383,827,0.923,829,0.313,852,0.78,854,1.666,855,0.153,856,0.165,858,0.293,866,0.539,867,0.569,870,0.159,874,0.539,875,2.729,884,0.313,893,0.313,897,0.185,903,0.153,904,0.482,911,0.923,919,0.313,921,0.174,923,1.519,934,0.165,937,0.829,952,0.174,955,0.482,957,2.959,959,0.587,961,0.526,963,1.458,964,0.708,966,0.681,967,0.326,968,0.463,975,0.153,983,0.886,989,0.174,990,0.448,991,0.482,992,1.421,993,0.185,1001,0.153,1002,0.313,1004,1.232,1016,0.587,1020,2.934,1021,0.326,1022,0.463,1024,0.159,1025,0.587,1026,0.633,1030,0.165,1031,2.99,1039,0.482,1040,0.185,1062,1.15,1074,0.149,1086,0.153,1087,0.165,1091,0.539,1093,1.285,1095,0.165,1098,0.482,1100,0.463,1101,0.185,1102,4.542,1106,0.302,1108,0.185,1110,0.665,1113,0.732,1116,0.342,1117,0.185,1120,0.569,1127,1.02,1128,0.153,1129,1.063,1130,1.075,1147,0.326,1150,0.569,1151,1.032,1153,0.342,1154,0.633,1159,0.326,1162,0.165,1165,1.851,1166,0.174,1167,0.165,1168,5.165,1169,1.883,1171,3.861,1174,0.313,1178,0.953,1181,0.313,1183,1.841,1184,0.174,1185,4.894,1186,0.664,1187,1.075,1188,5.724,1189,0.185,1190,3.464,1191,3.672,1192,3.085,1193,1.095,1194,1.063,1195,2.506,1196,1.187,1197,0.174,1198,4.597,1199,3.159,1200,2.938,1201,3.376,1202,0.608,1203,1.929,1204,2.575,1205,0.313,1206,1.15,1207,1.063,1208,0.185,1209,0.723,1210,0.75,1211,0.984,1212,2.138,1213,0.749,1214,0.364,1215,0.569,1216,0.82,1217,1.579,1218,0.433,1219,1.449,1221,0.132,1222,0.174,1223,0.165,1224,0.41,1225,0.202,1226,2.177,1227,0.506,1228,0.463,1229,0.144,1230,0.313,1231,0.202,1232,0.202,1233,0.159,1234,0.202,1235,0.202,1236,0.202,1237,0.202,1238,1.119,1239,0.202,1240,0.97,1241,0.364,1242,0.856,1243,0.313,1244,0.342,1245,0.923,1246,0.78,1247,0.202,1248,1.116,1249,3.258,1250,0.165,1251,1.194,1252,0.482,1253,2.036,1254,0.863,1255,0.515,1256,0.313,1257,0.185,1258,0.202,1259,1.104,1260,0.174,1261,0.134,1262,0.923,1263,0.174,1264,0.165,1265,0.326,1266,0.342,1267,1.198,1268,1.636,1269,1.582,1270,0.398,1271,1.198,1272,0.202,1273,0.159,1274,0.174,1275,0.174,1276,0.342,1277,0.185,1278,0.202,1279,0.342,1280,0.202,1281,0.506,1282,0.97,1283,0.608,1284,1.938,1285,0.482,1286,0.313,1287,0.174,1288,0.202,1289,0.856,1290,0.202,1291,0.202,1292,3.708,1293,1.198,1294,0.202,1295,0.433,1296,0.202,1297,0.313,1298,0.174,1299,0.326,1300,0.185,1301,0.174,1302,0.185,1303,0.398,1304,0.202,1305,0.364,1306,0.342,1307,0.202,1308,0.482,1309,0.174,1310,0.398,1311,0.202,1312,0.202,1313,0.202,1314,0.482,1315,0.185,1316,0.202,1317,0.174,1318,0.165,1319,0.482,1320,0.202,1321,0.202,1322,0.721,1323,0.313,1324,1.198,1325,0.185,1326,1.032,1327,0.342,1328,0.165,1329,1.79,1330,0.398,1331,0.202,1332,0.202,1333,0.174,1334,0.313,1335,0.202,1336,0.506,1337,0.708,1338,0.202,1339,1.622,1340,1.126,1341,0.202,1342,0.588,1343,0.398,1344,0.588,1345,0.202,1346,0.202,1347,0.364,1348,0.398,1349,1.296,1350,0.952,1351,0.588,1352,0.398,1353,0.773,1354,0.398,1355,0.954,1356,0.174,1357,0.463,1358,0.708,1359,0.587,1360,0.342,1361,0.202,1362,0.202,1363,0.588,1364,0.185,1365,0.202,1366,0.174,1367,0.588,1368,0.202,1369,0.202,1370,0.202,1371,0.398,1372,1.399,1373,0.398,1374,0.202,1375,0.202,1376,0.174,1377,0.202,1378,0.202,1379,1.296,1380,0.174,1381,1.126,1382,0.202,1383,0.202,1384,0.103,1385,0.923,1386,0.569,1387,0.185,1388,1.126,1389,0.185,1390,0.165,1391,0.723,1392,0.326,1393,0.569,1394,0.608,1395,0.165,1396,0.202,1397,0.185,1398,0.174,1399,0.202,1400,0.144,1401,0.202,1402,0.364,1403,0.608,1404,0.75,1405,0.342,1406,0.159,1407,1.11,1408,0.202,1409,0.174,1410,0.174,1411,0.463,1412,0.174,1413,0.539,1414,0.202,1415,0.174,1416,0.174,1417,0.202,1418,0.398,1419,0.185,1420,0.174,1421,0.313,1422,0.202,1423,0.302,1424,1.198,1425,0.202,1426,0.202,1427,0.202,1428,0.202,1429,0.202,1430,0.202,1431,0.398,1432,0.185,1433,0.398,1434,0.482,1435,0.82,1436,0.202,1437,0.174,1438,0.202,1439,0.202,1440,0.202,1441,0.202,1442,0.398,1443,0.326,1444,0.174,1445,0.398,1446,0.202,1447,0.398,1448,0.398,1449,0.398,1450,0.185,1451,0.202,1452,0.506,1453,0.398,1454,0.398,1455,0.202,1456,0.202,1457,0.326,1458,0.202,1459,0.185,1460,0.185,1461,0.202,1462,0.202,1463,0.202,1464,0.202,1465,0.202,1466,0.506,1467,0.633,1468,0.342,1469,0.202,1470,0.159,1471,0.174,1472,0.174,1473,0.165,1474,0.588,1475,0.202,1476,0.708,1477,0.202,1478,0.202,1479,0.749,1480,0.202,1481,0.174,1482,0.202,1483,0.82,1484,0.588,1485,0.202,1486,0.41,1487,0.185,1488,0.185,1489,0.202,1490,0.165,1491,0.174,1492,0.174,1493,0.185,1494,0.165,1495,0.364,1496,0.202,1497,0.202,1498,0.185,1499,0.398,1500,0.506,1501,0.398,1502,1.032,1503,0.665,1504,0.202,1505,0.202,1506,0.202,1507,0.665,1508,0.588,1509,0.174,1510,0.174,1511,0.398,1512,0.185,1513,0.342,1514,0.202,1515,0.202,1516,0.78,1517,0.202,1518,0.153,1519,0.174,1520,0.398,1521,0.174,1522,0.202,1523,0.202,1524,0.202,1525,0.185,1526,0.202,1527,0.202,1528,0.202,1529,0.202,1530,0.398,1531,0.202,1532,0.185,1533,0.202,1534,0.185,1535,0.165,1536,0.185,1537,0.398,1538,0.202,1539,0.398,1540,0.202,1541,0.369,1542,0.202,1543,0.202,1544,0.202,1545,0.202,1546,0.202,1547,0.165,1548,0.326,1549,1.93,1550,0.202,1551,0.364,1552,0.202,1553,0.165,1554,0.202,1555,0.398,1556,0.398,1557,0.398,1558,0.398,1559,0.773,1560,0.364,1561,0.364,1562,0.185,1563,0.174,1564,0.174,1565,0.398,1566,0.153,1567,0.159,1568,0.313,1569,0.202,1570,0.708,1571,0.202,1572,0.506,1573,0.326,1574,0.398,1575,0.202,1576,0.202,1577,0.202,1578,0.364,1579,0.463,1580,0.202,1581,0.174,1582,0.202,1583,0.202,1584,0.202,1585,0.202,1586,0.202,1587,0.159,1588,0.159,1589,0.174,1590,0.174,1591,0.202,1592,0.398,1593,0.588,1594,0.398,1595,0.398,1596,0.398,1597,0.398,1598,0.398,1599,0.398,1600,0.398,1601,0.398,1602,0.137,1603,0.342,1604,0.202,1605,0.202,1606,0.185,1607,0.202,1608,0.773,1609,0.952,1610,0.773,1611,0.773,1612,0.773,1613,0.202,1614,0.202,1615,0.398,1616,0.202,1617,0.144,1618,0.165,1619,0.202,1620,0.364,1621,0.708,1622,0.872,1623,0.708,1624,0.398,1625,0.342,1626,0.364,1627,0.202,1628,0.398,1629,0.708,1630,0.364,1631,0.165,1632,0.202,1633,0.364,1634,0.202,1635,0.165,1636,0.539,1637,0.174,1638,0.463,1639,0.202,1640,0.588,1641,0.202,1642,0.202,1643,0.398,1644,0.398,1645,0.398,1646,0.398,1647,0.398,1648,0.302,1649,0.398,1650,0.202,1651,0.202,1652,0.202,1653,0.202,1654,0.202,1655,0.202,1656,0.202,1657,0.202,1658,0.398,1659,0.202,1660,0.202,1661,0.202,1662,0.202,1663,0.202,1664,0.202,1665,0.202,1666,0.174,1667,0.398,1668,0.174,1669,0.202,1670,0.202,1671,0.202,1672,0.202,1673,0.202,1674,0.202,1675,0.202,1676,0.202,1677,0.202,1678,0.202,1679,0.202,1680,0.202,1681,0.202,1682,0.202,1683,0.202,1684,0.202,1685,0.202,1686,0.159,1687,0.202,1688,0.326,1689,0.202,1690,0.185,1691,0.165,1692,0.433,1693,0.202,1694,0.153,1695,0.185,1696,0.132,1697,0.185,1698,0.185,1699,0.202,1700,0.174]],["component/38",[413,0.47]],["title/39-1",[406,40.486,1165,25.543,1193,18.49]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[1701,44.306]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39-3",[1200,42.834]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["title/39-4",[1255,55.767]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["title/39-5",[22,37.272,1238,22.587]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["title/39-6",[36,52.585]],["name/39-6",[]],["text/39-6",[]],["component/39-6",[]],["title/39-7",[416,23.65,1165,20.049,1193,14.513,1238,15.3,1702,25.247]],["name/39-7",[]],["text/39-7",[]],["component/39-7",[]],["title/39-8",[55,32.092,1702,37.272]],["name/39-8",[]],["text/39-8",[]],["component/39-8",[]],["title/39-9",[406,55.767]],["name/39-9",[]],["text/39-9",[]],["component/39-9",[]],["title/39-10",[43,36.294]],["name/39-10",[]],["text/39-10",[]],["component/39-10",[]],["title/39-11",[444,42.39,1165,25.543,1193,18.49]],["name/39-11",[]],["text/39-11",[]],["component/39-11",[]],["title/39-12",[107,42.064,444,49.12]],["name/39-12",[]],["text/39-12",[]],["component/39-12",[]],["title/39-13",[444,49.12,568,50.405]],["name/39-13",[]],["text/39-13",[]],["component/39-13",[]],["title/39-14",[1113,26.774,1165,22.465,1193,16.262,1703,43.832]],["name/39-14",[]],["text/39-14",[]],["component/39-14",[]],["title/39-15",[1165,25.543,1193,18.49,1566,46.173]],["name/39-15",[]],["text/39-15",[]],["component/39-15",[]],["title/39-16",[1165,25.543,1193,18.49,1199,34.249]],["name/39-16",[]],["text/39-16",[]],["component/39-16",[]],["title/39-17",[123,44.236,1199,39.687]],["name/39-17",[]],["text/39-17",[]],["component/39-17",[]],["title/39-18",[1199,39.687,1259,47.964]],["name/39-18",[]],["text/39-18",[]],["component/39-18",[]],["title/39-19",[1165,25.543,1193,18.49,1701,32.165]],["name/39-19",[]],["text/39-19",[]],["component/39-19",[]],["title/39-20",[337,35.747,826,39.655,1391,46.173]],["name/39-20",[]],["text/39-20",[]],["component/39-20",[]],["title/39-21",[1404,55.767]],["name/39-21",[]],["text/39-21",[]],["component/39-21",[]],["title/39-22",[1541,44.236,1701,37.272]],["name/39-22",[]],["text/39-22",[]],["component/39-22",[]],["title/39-23",[1219,42.39,1704,39.655,1705,28.187]],["name/39-23",[]],["text/39-23",[]],["component/39-23",[]],["title/39-24",[567,25.727,1165,18.102,1193,13.104,1238,13.814,1323,33.903,1706,31.712]],["name/39-24",[]],["text/39-24",[]],["component/39-24",[]],["title/39-25",[694,27.256,1165,20.049,1193,14.513,1238,15.3,1707,33.273]],["name/39-25",[]],["text/39-25",[]],["component/39-25",[]],["title/39-26",[694,40.237,1708,51.85]],["name/39-26",[]],["text/39-26",[]],["component/39-26",[]],["title/39-27",[349,34.225,694,40.237]],["name/39-27",[]],["text/39-27",[]],["component/39-27",[]],["title/39-28",[375,34.249,694,34.724,1708,44.746]],["name/39-28",[]],["text/39-28",[]],["component/39-28",[]],["title/39-29",[1224,49.12,1238,22.587]],["name/39-29",[]],["text/39-29",[]],["component/39-29",[]],["title/39-30",[567,28.493,1165,20.049,1185,21.738,1193,14.513,1238,15.3]],["name/39-30",[]],["text/39-30",[]],["component/39-30",[]],["title/39-31",[1185,27.695,1238,19.493,1709,49.838]],["name/39-31",[]],["text/39-31",[]],["component/39-31",[]],["title/39-32",[349,31.689,694,24.609,1165,18.102,1185,19.627,1193,13.104]],["name/39-32",[]],["text/39-32",[]],["component/39-32",[]],["title/39-33",[1165,22.465,1193,16.262,1238,17.144,1322,34.202]],["name/39-33",[]],["text/39-33",[]],["component/39-33",[]],["title/39-34",[1165,22.465,1193,16.262,1238,17.144,1710,43.832]],["name/39-34",[]],["text/39-34",[]],["component/39-34",[]],["title/39-35",[286,33.273,462,26.883,1193,14.513,1238,15.3,1602,32.49]],["name/39-35",[]],["text/39-35",[]],["component/39-35",[]],["title/39-36",[1602,57.016]],["name/39-36",[]],["text/39-36",[]],["component/39-36",[]],["title/39-37",[1711,68.649]],["name/39-37",[]],["text/39-37",[]],["component/39-37",[]],["title/39-38",[1193,16.262,1238,24.518,1702,28.289]],["name/39-38",[]],["text/39-38",[]],["component/39-38",[]],["title/39-39",[55,32.092,1702,37.272]],["name/39-39",[]],["text/39-39",[]],["component/39-39",[]],["title/39-40",[55,27.695,1712,49.838,1713,44.746]],["name/39-40",[]],["text/39-40",[]],["component/39-40",[]],["title/39-41",[975,46.173,1261,40.486,1713,44.746]],["name/39-41",[]],["text/39-41",[]],["component/39-41",[]],["title/39-42",[1165,25.543,1193,18.49,1400,43.499]],["name/39-42",[]],["text/39-42",[]],["component/39-42",[]],["title/39-43",[1714,57.75,1715,49.12]],["name/39-43",[]],["text/39-43",[]],["component/39-43",[]],["title/39-44",[1716,49.24]],["name/39-44",[]],["text/39-44",[]],["component/39-44",[]],["title/39-45",[1707,58.39]],["name/39-45",[]],["text/39-45",[]],["component/39-45",[]],["title/39-46",[375,47.177]],["name/39-46",[]],["text/39-46",[]],["component/39-46",[]],["title/39-47",[567,31.927,1193,16.262,1238,17.144,1716,31.44]],["name/39-47",[]],["text/39-47",[]],["component/39-47",[]],["title/39-48",[1020,45.062,1694,53.503]],["name/39-48",[]],["text/39-48",[]],["component/39-48",[]],["title/39-49",[1020,45.062,1707,49.12]],["name/39-49",[]],["text/39-49",[]],["component/39-49",[]],["title/39-50",[1020,45.062,1238,22.587]],["name/39-50",[]],["text/39-50",[]],["component/39-50",[]],["title/39-51",[1717,44.236,1718,57.75]],["name/39-51",[]],["text/39-51",[]],["component/39-51",[]],["title/39-52",[200,26.774,1193,16.262,1238,17.144,1716,31.44]],["name/39-52",[]],["text/39-52",[]],["component/39-52",[]],["title/39-53",[1486,49.12,1716,41.423]],["name/39-53",[]],["text/39-53",[]],["component/39-53",[]],["title/39-54",[430,45.951,1716,41.423]],["name/39-54",[]],["text/39-54",[]],["component/39-54",[]],["title/39-55",[55,19.627,1193,13.104,1238,13.814,1704,28.103,1705,19.976,1717,27.055]],["name/39-55",[]],["text/39-55",[]],["component/39-55",[]],["title/39-56",[348,45.062,1705,32.662]],["name/39-56",[]],["text/39-56",[]],["component/39-56",[]],["title/39-57",[1705,32.662,1719,51.85]],["name/39-57",[]],["text/39-57",[]],["component/39-57",[]],["title/39-58",[54,36.405,217,39.354,1705,24.79,1720,43.832]],["name/39-58",[]],["text/39-58",[]],["component/39-58",[]],["title/39-59",[337,23.092,416,19.464,826,25.616,1238,12.592,1702,20.778,1704,25.616,1705,18.208]],["name/39-59",[]],["text/39-59",[]],["component/39-59",[]],["title/39-60",[55,38.148]],["name/39-60",[]],["text/39-60",[]],["component/39-60",[]],["title/39-61",[349,23.183,1193,14.513,1238,15.3,1701,25.247,1721,35.122]],["name/39-61",[]],["text/39-61",[]],["component/39-61",[]],["title/39-62",[349,29.536,1221,39.655,1722,42.39]],["name/39-62",[]],["text/39-62",[]],["component/39-62",[]],["title/39-63",[631,42.064,1723,57.75]],["name/39-63",[]],["text/39-63",[]],["component/39-63",[]],["title/39-64",[348,38.888,631,36.301,1254,40.486]],["name/39-64",[]],["text/39-64",[]],["component/39-64",[]],["title/39-65",[55,16.435,349,17.528,1193,10.973,1221,23.533,1238,11.568,1717,22.655,1722,25.157,1724,27.401]],["name/39-65",[]],["text/39-65",[]],["component/39-65",[]],["title/39-66",[55,24.357,314,34.202,1717,33.575,1725,40.609]],["name/39-66",[]],["text/39-66",[]],["component/39-66",[]],["title/39-67",[31,46.173,55,27.695,1717,38.176]],["name/39-67",[]],["text/39-67",[]],["component/39-67",[]],["title/39-68",[1726,53.503,1727,57.75]],["name/39-68",[]],["text/39-68",[]],["component/39-68",[]],["title/39-69",[463,40.609,1203,37.282,1251,39.354,1726,40.609]],["name/39-69",[]],["text/39-69",[]],["component/39-69",[]],["title/39-70",[631,28.493,1193,14.513,1238,15.3,1717,29.965,1728,36.242]],["name/39-70",[]],["text/39-70",[]],["component/39-70",[]],["title/39-71",[631,36.301,1224,42.39,1728,46.173]],["name/39-71",[]],["text/39-71",[]],["component/39-71",[]],["title/39-72",[1541,44.236,1729,55.433]],["name/39-72",[]],["text/39-72",[]],["component/39-72",[]],["title/39-73",[55,24.357,1193,16.262,1238,17.144,1702,28.289]],["name/39-73",[]],["text/39-73",[]],["component/39-73",[]],["title/39-74",[375,30.122,1193,16.262,1238,17.144,1730,43.832]],["name/39-74",[]],["text/39-74",[]],["component/39-74",[]],["title/39-75",[55,24.357,1193,16.262,1238,17.144,1731,38.257]],["name/39-75",[]],["text/39-75",[]],["component/39-75",[]],["title/39-76",[67,44.236,1731,50.405]],["name/39-76",[]],["text/39-76",[]],["component/39-76",[]],["title/39-77",[507,33.363,961,41.393,1238,19.493]],["name/39-77",[]],["text/39-77",[]],["component/39-77",[]],["title/39-78",[1715,49.12,1731,50.405]],["name/39-78",[]],["text/39-78",[]],["component/39-78",[]],["title/39-79",[78,15.68,416,19.464,990,22.753,1193,11.944,1209,29.826,1238,12.592,1702,20.778]],["name/39-79",[]],["text/39-79",[]],["component/39-79",[]],["title/39-80",[416,30.131,990,35.223,1732,44.746]],["name/39-80",[]],["text/39-80",[]],["component/39-80",[]],["title/39-81",[337,35.747,990,35.223,1715,42.39]],["name/39-81",[]],["text/39-81",[]],["component/39-81",[]],["title/39-82",[990,40.815,1705,32.662]],["name/39-82",[]],["text/39-82",[]],["component/39-82",[]],["title/39-83",[990,35.223,1165,25.543,1400,43.499]],["name/39-83",[]],["text/39-83",[]],["component/39-83",[]],["title/39-84",[1193,16.262,1210,35.607,1238,17.144,1702,28.289]],["name/39-84",[]],["text/39-84",[]],["component/39-84",[]],["title/39-85",[1210,40.486,1238,19.493,1702,32.165]],["name/39-85",[]],["text/39-85",[]],["component/39-85",[]],["title/39-86",[416,30.131,1210,40.486,1702,32.165]],["name/39-86",[]],["text/39-86",[]],["component/39-86",[]],["title/39-87",[349,19.079,946,29.826,1193,11.944,1221,25.616,1238,12.592,1722,27.383,1724,29.826]],["name/39-87",[]],["text/39-87",[]],["component/39-87",[]],["title/39-88",[669,31.778,1193,14.513,1238,15.3,1704,31.126,1705,22.124]],["name/39-88",[]],["text/39-88",[]],["component/39-88",[]],["title/39-89",[337,28.059,826,31.126,1193,14.513,1238,15.3,1732,35.122]],["name/39-89",[]],["text/39-89",[]],["component/39-89",[]],["title/39-90",[1404,55.767]],["name/39-90",[]],["text/39-90",[]],["component/39-90",[]],["title/39-91",[1541,44.236,1701,37.272]],["name/39-91",[]],["text/39-91",[]],["component/39-91",[]],["title/39-92",[508,43.499,1541,38.176,1701,32.165]],["name/39-92",[]],["text/39-92",[]],["component/39-92",[]],["title/39-93",[43,20.682,278,31.126,416,23.65,1541,29.965,1701,25.247]],["name/39-93",[]],["text/39-93",[]],["component/39-93",[]],["title/39-94",[416,26.5,1193,16.262,1238,17.144,1702,28.289]],["name/39-94",[]],["text/39-94",[]],["component/39-94",[]],["title/39-95",[462,24.273,840,30.042,1144,33.903,1193,13.104,1238,13.814,1705,19.976]],["name/39-95",[]],["text/39-95",[]],["component/39-95",[]],["title/39-96",[55,27.695,1733,49.838,1734,49.838]],["name/39-96",[]],["text/39-96",[]],["component/39-96",[]],["title/39-97",[74,32.549,1143,42.39,1735,42.39]],["name/39-97",[]],["text/39-97",[]],["component/39-97",[]],["title/39-98",[74,21.026,81,20.088,1143,42.367,1168,19.873,1705,18.208,1736,28.905]],["name/39-98",[]],["text/39-98",[]],["component/39-98",[]],["title/39-99",[1143,37.282,1204,38.257,1705,24.79,1736,39.354]],["name/39-99",[]],["text/39-99",[]],["component/39-99",[]],["title/39-100",[1193,16.262,1238,17.144,1705,24.79,1737,40.609]],["name/39-100",[]],["text/39-100",[]],["component/39-100",[]],["title/39-101",[1238,19.493,1705,28.187,1737,46.173]],["name/39-101",[]],["text/39-101",[]],["component/39-101",[]],["title/39-102",[55,24.357,1193,16.262,1238,17.144,1738,43.832]],["name/39-102",[]],["text/39-102",[]],["component/39-102",[]],["title/39-103",[22,28.289,1193,16.262,1238,17.144,1739,43.832]],["name/39-103",[]],["text/39-103",[]],["component/39-103",[]],["title/39-104",[43,18.673,1238,13.814,1486,30.042,1617,30.828,1716,25.334,1740,30.828]],["name/39-104",[]],["text/39-104",[]],["component/39-104",[]],["title/39-105",[43,14.461,348,21.343,430,21.764,840,23.265,1704,21.764,1705,15.47,1716,19.619,1719,24.558,1740,23.873]],["name/39-105",[]],["text/39-105",[]],["component/39-105",[]],["title/39-106",[332,30.524,430,31.126,1238,15.3,1716,28.059,1740,34.143]],["name/39-106",[]],["text/39-106",[]],["component/39-106",[]],["title/39-107",[1165,22.465,1193,16.262,1702,28.289,1741,43.832]],["name/39-107",[]],["text/39-107",[]],["component/39-107",[]],["title/39-108",[172,31.126,1113,23.895,1165,20.049,1193,14.513,1283,37.549]],["name/39-108",[]],["text/39-108",[]],["component/39-108",[]],["title/39-109",[102,26.584,1113,21.575,1165,18.102,1190,24.609,1193,13.104,1742,37.095]],["name/39-109",[]],["text/39-109",[]],["component/39-109",[]],["title/39-110",[102,26.584,1113,21.575,1165,18.102,1190,24.609,1193,13.104,1743,37.095]],["name/39-110",[]],["text/39-110",[]],["component/39-110",[]],["title/39-111",[1113,35.276,1229,50.405]],["name/39-111",[]],["text/39-111",[]],["component/39-111",[]],["title/39-112",[1190,34.724,1744,52.343,1745,49.838]],["name/39-112",[]],["text/39-112",[]],["component/39-112",[]],["title/39-113",[1113,26.774,1165,22.465,1193,16.262,1200,27.349]],["name/39-113",[]],["text/39-113",[]],["component/39-113",[]],["title/39-114",[1199,39.687,1200,36.033]],["name/39-114",[]],["text/39-114",[]],["component/39-114",[]],["title/39-115",[453,42.064,1200,36.033]],["name/39-115",[]],["text/39-115",[]],["component/39-115",[]],["title/39-116",[123,33.575,1165,22.465,1193,16.262,1199,30.122]],["name/39-116",[]],["text/39-116",[]],["component/39-116",[]],["title/39-117",[123,38.176,1093,40.486,1199,34.249]],["name/39-117",[]],["text/39-117",[]],["component/39-117",[]],["title/39-118",[162,41.393,1199,34.249,1200,31.096]],["name/39-118",[]],["text/39-118",[]],["component/39-118",[]],["title/39-119",[1199,39.687,1259,47.964]],["name/39-119",[]],["text/39-119",[]],["component/39-119",[]],["title/39-120",[1200,36.033,1746,57.75]],["name/39-120",[]],["text/39-120",[]],["component/39-120",[]],["title/39-121",[1102,31.44,1191,41.393,1747,43.499]],["name/39-121",[]],["text/39-121",[]],["component/39-121",[]],["title/39-122",[1588,65.894]],["name/39-122",[]],["text/39-122",[]],["component/39-122",[]],["title/39-123",[1165,22.465,1193,16.262,1322,34.202,1686,42.073]],["name/39-123",[]],["text/39-123",[]],["component/39-123",[]],["title/39-124",[210,26.142,453,25.727,1113,21.575,1165,18.102,1193,13.104,1200,22.038]],["name/39-124",[]],["text/39-124",[]],["component/39-124",[]],["title/39-125",[1113,26.774,1178,34.876,1190,30.54,1200,27.349]],["name/39-125",[]],["text/39-125",[]],["component/39-125",[]],["title/39-126",[453,42.064,570,37.272]],["name/39-126",[]],["text/39-126",[]],["component/39-126",[]],["title/39-127",[1113,26.774,1130,39.354,1178,34.876,1200,27.349]],["name/39-127",[]],["text/39-127",[]],["component/39-127",[]],["title/39-128",[453,42.064,570,37.272]],["name/39-128",[]],["text/39-128",[]],["component/39-128",[]],["title/39-129",[1178,34.876,1185,24.357,1200,27.349,1238,17.144]],["name/39-129",[]],["text/39-129",[]],["component/39-129",[]],["title/39-130",[453,42.064,570,37.272]],["name/39-130",[]],["text/39-130",[]],["component/39-130",[]],["title/39-131",[55,19.627,154,22.534,1113,21.575,1193,13.104,1238,13.814,1748,35.32]],["name/39-131",[]],["text/39-131",[]],["component/39-131",[]],["title/39-132",[1113,35.276,1749,57.75]],["name/39-132",[]],["text/39-132",[]],["component/39-132",[]],["title/39-133",[1165,22.465,1193,16.262,1750,42.073,1751,42.073]],["name/39-133",[]],["text/39-133",[]],["component/39-133",[]],["title/39-134",[653,33.575,1193,16.262,1230,42.073,1255,35.607]],["name/39-134",[]],["text/39-134",[]],["component/39-134",[]],["title/39-135",[1393,51.85,1579,55.433]],["name/39-135",[]],["text/39-135",[]],["component/39-135",[]],["title/39-136",[1113,35.276,1211,53.503]],["name/39-136",[]],["text/39-136",[]],["component/39-136",[]],["title/39-137",[416,26.5,1102,27.652,1113,26.774,1136,48.985]],["name/39-137",[]],["text/39-137",[]],["component/39-137",[]],["title/39-138",[1102,43.307]],["name/39-138",[]],["text/39-138",[]],["component/39-138",[]],["title/39-139",[1113,41.933]],["name/39-139",[]],["text/39-139",[]],["component/39-139",[]],["title/39-140",[416,34.915,1460,64.539]],["name/39-140",[]],["text/39-140",[]],["component/39-140",[]],["title/39-141",[1102,36.432,1268,51.85]],["name/39-141",[]],["text/39-141",[]],["component/39-141",[]],["title/39-142",[1102,36.432,1165,29.598]],["name/39-142",[]],["text/39-142",[]],["component/39-142",[]],["title/39-143",[416,34.915,1269,57.75]],["name/39-143",[]],["text/39-143",[]],["component/39-143",[]],["title/39-144",[78,24.273,1254,40.486,1752,52.343]],["name/39-144",[]],["text/39-144",[]],["component/39-144",[]],["title/39-145",[1102,31.44,1255,40.486,1268,44.746]],["name/39-145",[]],["text/39-145",[]],["component/39-145",[]],["title/39-146",[567,50.003]],["name/39-146",[]],["text/39-146",[]],["component/39-146",[]],["title/39-147",[494,49.12,1102,36.432]],["name/39-147",[]],["text/39-147",[]],["component/39-147",[]],["title/39-148",[164,36.301,494,42.39,1102,31.44]],["name/39-148",[]],["text/39-148",[]],["component/39-148",[]],["title/39-149",[87,53.503,494,49.12]],["name/39-149",[]],["text/39-149",[]],["component/39-149",[]],["title/39-150",[465,44.746,494,42.39,1102,31.44]],["name/39-150",[]],["text/39-150",[]],["component/39-150",[]],["title/39-151",[494,42.39,1102,31.44,1753,55.696]],["name/39-151",[]],["text/39-151",[]],["component/39-151",[]],["title/39-152",[1701,44.306]],["name/39-152",[]],["text/39-152",[]],["component/39-152",[]],["title/39-153",[1102,36.432,1754,57.75]],["name/39-153",[]],["text/39-153",[]],["component/39-153",[]],["title/39-154",[1490,68.649]],["name/39-154",[]],["text/39-154",[]],["component/39-154",[]],["title/39-155",[1755,72.1]],["name/39-155",[]],["text/39-155",[]],["component/39-155",[]],["title/39-156",[1242,63.601]],["name/39-156",[]],["text/39-156",[]],["component/39-156",[]],["title/39-157",[200,23.895,1102,24.678,1165,20.049,1193,14.513,1195,30.524]],["name/39-157",[]],["text/39-157",[]],["component/39-157",[]],["title/39-158",[200,35.276,1102,36.432]],["name/39-158",[]],["text/39-158",[]],["component/39-158",[]],["title/39-159",[1102,36.432,1195,45.062]],["name/39-159",[]],["text/39-159",[]],["component/39-159",[]],["title/39-160",[617,39.655,1195,38.888,1238,19.493]],["name/39-160",[]],["text/39-160",[]],["component/39-160",[]],["title/39-161",[617,39.655,1195,38.888,1238,19.493]],["name/39-161",[]],["text/39-161",[]],["component/39-161",[]],["title/39-162",[1191,41.393,1195,38.888,1238,19.493]],["name/39-162",[]],["text/39-162",[]],["component/39-162",[]],["title/39-163",[81,31.096,1195,38.888,1238,19.493]],["name/39-163",[]],["text/39-163",[]],["component/39-163",[]],["title/39-164",[1102,36.432,1201,51.85]],["name/39-164",[]],["text/39-164",[]],["component/39-164",[]],["title/39-165",[160,28.692,617,28.103,1102,22.282,1238,20.914,1756,35.32]],["name/39-165",[]],["text/39-165",[]],["component/39-165",[]],["title/39-166",[124,52.343,635,46.173,1102,31.44]],["name/39-166",[]],["text/39-166",[]],["component/39-166",[]],["title/39-167",[252,27.383,678,28.905,1102,20.31,1165,16.5,1193,11.944,1200,20.088,1268,28.905]],["name/39-167",[]],["text/39-167",[]],["component/39-167",[]],["title/39",[26,42.39,1165,25.543,1193,18.49]],["name/39",[1757,0.915]],["text/39",[7,0.058,8,0.327,13,1.535,18,0.248,20,0.648,22,1.465,23,0.141,24,1.255,25,0.421,26,0.707,27,0.085,28,0.354,29,0.069,30,0.069,31,0.572,32,0.141,36,0.583,37,0.283,38,0.075,40,0.394,41,0.317,42,1.75,43,3.366,46,0.085,48,0.155,49,0.191,50,1.177,51,0.085,53,0.215,54,1.13,55,1.232,56,0.155,57,1.802,58,0.195,59,0.538,60,0.149,65,0.473,67,0.416,73,0.081,74,0.72,75,0.161,76,0.845,78,2.161,80,0.86,81,2.303,82,1.59,84,0.199,85,1.077,86,0.305,87,1.806,91,0.661,92,0.593,93,0.078,95,0.141,96,0.069,100,0.128,102,1.163,103,0.305,107,0.231,109,0.075,111,0.327,113,0.161,114,0.195,117,0.177,119,0.081,121,0.145,122,0.435,123,1.407,132,0.161,134,1.34,135,0.134,138,0.078,142,0.354,145,0.27,149,0.504,152,1.305,154,0.347,156,3.703,157,1.383,158,0.78,159,0.731,160,0.896,161,0.974,162,0.804,164,1.379,172,0.548,173,0.501,177,0.605,184,1.036,185,0.327,193,0.53,195,0.474,197,0.359,200,1.122,205,0.145,207,0.073,208,0.078,209,0.131,210,0.119,211,0.071,212,0.381,214,0.073,215,0.215,217,0.285,218,0.27,219,0.073,220,0.071,223,0.123,224,0.258,225,0.69,228,0.204,231,0.302,232,0.24,233,0.145,235,0.078,236,0.277,246,0.354,248,0.253,252,0.586,253,0.808,257,0.081,258,0.195,261,0.131,262,0.491,267,0.209,268,1.564,269,0.204,275,0.073,276,2.04,278,0.313,279,0.456,285,2.225,286,0.586,289,0.155,291,1.452,292,0.161,293,0.085,301,0.474,302,0.141,306,0.264,307,0.488,308,0.145,310,0.285,314,0.366,315,0.675,316,0.69,318,0.373,323,0.243,324,0.161,325,0.161,326,0.059,329,0.073,330,0.381,332,0.808,333,0.602,335,1.378,337,2.595,341,0.073,342,0.131,345,0.399,347,1.255,348,1.966,349,1.122,350,0.99,372,0.834,375,1.894,377,0.078,379,0.078,380,0.595,382,0.787,383,0.085,384,0.378,388,0.137,406,0.501,414,0.081,416,3.74,417,0.861,419,0.063,420,0.078,423,0.285,429,1.723,430,2.506,434,0.317,436,0.881,438,0.169,440,0.554,442,0.081,444,1.21,445,0.081,449,0.081,452,0.522,453,2.47,456,0.075,459,0.081,460,0.161,462,1.83,463,0.705,464,0.881,465,1.387,467,0.073,468,0.085,471,0.252,475,0.23,479,1.417,480,0.075,482,0.45,485,0.317,487,0.24,488,1.217,489,0.354,490,0.209,491,0.572,492,1.168,493,0.488,495,0.081,497,1.526,498,0.128,501,0.248,502,0.058,503,0.344,504,0.141,507,2.495,508,0.141,511,0.131,516,0.78,525,0.224,528,0.32,535,0.155,536,1.446,543,0.199,545,0.081,546,0.488,548,0.078,549,0.069,567,0.231,568,0.664,569,0.075,570,0.351,571,0.081,572,0.161,573,0.285,574,1.504,575,0.073,576,0.365,578,0.24,579,0.252,580,0.141,581,0.344,582,0.078,583,0.073,584,0.078,585,1.132,587,0.123,588,0.078,590,0.285,591,0.277,592,0.24,598,0.23,599,0.222,607,0.912,610,0.366,611,0.149,613,0.071,615,0.731,616,0.199,617,2.76,619,1.012,621,0.078,624,0.081,628,0.834,629,1.425,631,2.526,635,0.834,638,0.078,643,0.161,648,0.155,649,0.675,650,0.075,652,0.938,653,1.93,655,0.366,656,0.23,660,0.317,662,0.317,664,0.662,666,0.078,667,0.222,668,0.354,669,2.007,673,0.081,674,0.134,675,0.081,676,0.435,677,0.081,678,0.285,684,0.442,686,0.664,688,0.155,691,0.075,692,0.081,693,0.155,694,2.194,696,0.115,697,0.073,702,0.252,705,0.081,710,0.707,715,0.285,717,0.149,720,0.073,722,0.41,725,0.449,726,0.081,727,0.141,728,0.252,743,0.155,744,0.085,748,0.344,752,0.071,756,0.134,757,0.075,768,0.073,769,0.662,771,0.081,785,0.24,796,0.462,805,0.075,811,0.078,825,0.137,826,1.181,827,0.24,829,0.078,830,0.078,831,0.169,832,0.081,840,1.611,852,0.161,854,1.054,855,0.075,856,0.081,857,0.294,858,0.073,866,0.766,867,0.215,869,0.085,870,0.23,874,0.27,875,0.87,884,0.078,885,0.366,893,0.662,898,0.18,900,0.081,903,0.075,904,0.24,909,0.085,911,0.24,912,0.081,919,0.23,920,0.155,924,0.085,929,0.222,937,0.421,946,0.435,950,0.078,955,0.544,958,0.085,959,0.222,961,1.798,966,0.602,967,0.617,971,1.082,975,0.294,982,0.648,983,1.184,990,0.436,992,0.87,994,0.085,996,0.365,998,0.091,999,0.469,1002,0.45,1004,0.149,1005,0.085,1006,0.469,1016,0.365,1017,0.085,1019,0.085,1020,2.457,1021,0.24,1022,0.305,1023,0.078,1024,0.45,1025,0.222,1026,0.317,1030,0.317,1031,1.648,1034,0.317,1036,0.085,1038,0.081,1039,0.161,1054,0.365,1059,1.664,1062,0.45,1064,0.085,1072,0.689,1073,0.18,1074,0.073,1084,0.085,1086,0.222,1087,0.317,1088,1.058,1093,0.842,1095,0.161,1097,0.305,1098,0.317,1100,0.378,1102,4.305,1110,1.494,1111,0.085,1113,4.218,1120,0.354,1122,0.24,1125,0.078,1127,0.864,1128,0.075,1129,1.297,1130,1.387,1131,0.414,1133,0.252,1139,0.078,1141,0.252,1143,1.262,1144,0.994,1146,0.169,1149,0.085,1150,1.049,1154,0.317,1159,0.24,1162,0.081,1165,3.863,1167,0.081,1168,0.148,1169,1.71,1171,0.204,1172,0.085,1174,0.45,1177,0.169,1178,1.806,1180,0.075,1181,1.306,1183,0.145,1185,1.884,1186,0.204,1188,0.235,1190,2.901,1191,1.665,1192,0.344,1193,2.916,1194,0.081,1195,0.063,1199,3.416,1200,2.822,1201,1.494,1202,0.155,1203,0.824,1204,0.845,1205,0.078,1206,0.23,1207,0.081,1209,0.075,1210,1.538,1211,0.365,1212,0.39,1213,0.155,1215,0.145,1217,0.149,1218,0.354,1219,2.143,1221,0.433,1223,0.081,1224,0.335,1226,0.23,1227,0.085,1228,0.155,1229,0.845,1230,0.378,1233,0.078,1238,3.423,1240,0.085,1242,0.572,1243,0.305,1244,0.085,1245,0.081,1246,0.544,1248,0.169,1250,0.161,1251,1.848,1252,0.9,1253,0.554,1254,1.802,1255,0.949,1256,0.378,1257,0.091,1259,1.573,1260,0.252,1261,2.349,1262,0.161,1264,0.161,1265,0.081,1266,0.085,1267,2.616,1268,2.262,1269,1.545,1271,1.036,1273,0.522,1274,0.252,1275,0.085,1276,0.252,1277,0.091,1279,0.493,1281,0.085,1283,0.522,1284,1.837,1285,0.761,1286,0.797,1287,0.085,1289,0.435,1293,0.831,1295,0.285,1297,0.23,1298,0.169,1299,0.24,1300,0.091,1301,0.085,1302,0.091,1306,0.085,1308,0.161,1309,0.493,1314,0.081,1315,0.091,1318,0.689,1319,0.394,1322,0.756,1323,0.155,1324,0.9,1326,0.091,1327,0.252,1328,0.081,1329,0.085,1334,1.058,1337,0.091,1355,1.991,1356,0.085,1357,1.366,1359,1.806,1366,0.085,1372,0.078,1376,0.799,1380,0.169,1385,0.161,1386,0.285,1389,0.091,1390,1.297,1391,1.431,1392,0.544,1393,0.073,1394,0.23,1395,0.161,1400,1.504,1403,0.797,1404,2.007,1405,0.169,1406,0.078,1407,0.77,1409,0.252,1410,0.085,1411,1.184,1415,0.085,1421,0.155,1423,0.075,1424,0.317,1434,0.317,1435,0.085,1437,0.169,1443,0.469,1444,0.085,1452,0.169,1457,0.394,1466,0.085,1467,0.24,1468,0.085,1470,0.592,1472,0.085,1473,0.24,1479,0.305,1481,0.085,1483,0.414,1486,1.93,1490,0.469,1491,0.252,1492,0.169,1494,0.081,1500,0.085,1503,0.085,1510,0.252,1516,1.233,1518,0.504,1519,0.085,1521,0.169,1532,0.091,1535,0.617,1541,2.003,1547,0.081,1548,0.081,1553,0.394,1563,0.085,1564,0.252,1566,0.834,1567,0.93,1568,0.078,1572,0.169,1573,0.617,1578,0.091,1579,0.592,1581,0.333,1587,0.078,1588,0.994,1589,0.169,1602,1.024,1603,0.873,1617,2.199,1618,0.544,1622,0.18,1625,0.085,1631,0.394,1637,0.085,1638,0.662,1648,0.149,1666,0.085,1686,0.078,1688,0.24,1691,0.081,1692,0.746,1694,0.897,1696,0.065,1700,0.333,1701,1.749,1702,3.111,1703,0.081,1704,2.439,1705,3.77,1706,0.488,1707,1.886,1708,1.049,1709,0.081,1710,0.161,1711,0.317,1712,1.103,1713,0.488,1714,0.394,1715,2.383,1716,3.95,1717,1.618,1718,1.297,1719,1.221,1720,0.9,1721,0.93,1722,0.824,1723,0.617,1724,2.76,1725,0.504,1726,0.834,1727,0.469,1728,0.897,1729,1.541,1730,0.544,1731,0.786,1732,3.983,1733,0.617,1734,0.761,1735,0.994,1736,1.944,1737,0.504,1738,0.544,1739,0.317,1740,0.845,1741,0.24,1742,0.252,1743,0.414,1744,0.085,1745,0.161,1746,0.689,1747,0.141,1748,0.081,1749,1.605,1750,0.305,1751,0.378,1752,1.686,1753,1.232,1754,0.689,1755,0.169,1756,0.317,1757,1.423,1758,0.268,1759,0.169,1760,0.18,1761,0.18,1762,0.18,1763,0.18,1764,0.18,1765,0.18,1766,0.44,1767,0.081,1768,0.317,1769,0.091,1770,0.161,1771,1.017,1772,0.44,1773,0.355,1774,0.18,1775,0.18,1776,0.268,1777,0.085,1778,0.091,1779,0.091,1780,0.355,1781,0.268,1782,0.091,1783,0.091,1784,0.333,1785,0.169,1786,0.091,1787,0.085,1788,0.268,1789,0.252,1790,0.18,1791,0.18,1792,0.18,1793,0.18,1794,0.44,1795,0.091,1796,0.091,1797,0.091,1798,0.268,1799,0.091,1800,0.268,1801,0.091,1802,0.268,1803,0.268,1804,0.18,1805,0.091,1806,0.091,1807,0.44,1808,0.091,1809,0.091,1810,0.091,1811,0.091,1812,0.091,1813,0.169,1814,0.268,1815,0.18,1816,0.24,1817,0.268,1818,0.18,1819,0.18,1820,0.544,1821,1.017,1822,0.18,1823,0.091,1824,0.085,1825,0.091,1826,0.091,1827,0.091,1828,0.091,1829,0.169,1830,0.873,1831,0.355,1832,0.799,1833,0.608,1834,0.469,1835,0.18,1836,0.799,1837,0.44,1838,0.091,1839,0.18,1840,0.268,1841,0.085,1842,0.268,1843,0.44,1844,0.252,1845,0.18,1846,0.18,1847,0.091,1848,0.799,1849,0.414,1850,0.091,1851,0.18,1852,0.085,1853,0.091,1854,0.091,1855,0.091,1856,0.081,1857,0.18,1858,0.091,1859,0.333,1860,0.091,1861,0.085,1862,0.169,1863,0.268,1864,0.689,1865,0.268,1866,0.169,1867,0.169,1868,0.091,1869,0.085,1870,0.085,1871,0.18,1872,0.18,1873,0.18,1874,0.18,1875,0.18,1876,0.18,1877,0.355,1878,0.355,1879,0.524,1880,0.18,1881,0.18,1882,0.18,1883,0.091,1884,0.091,1885,0.161,1886,0.18,1887,0.085,1888,0.085,1889,0.169,1890,0.091,1891,0.161,1892,0.355,1893,0.524,1894,0.145,1895,0.091,1896,0.091,1897,0.091,1898,0.355,1899,0.18,1900,0.091,1901,0.091,1902,0.091,1903,0.091,1904,0.091,1905,0.524,1906,0.414,1907,0.085,1908,0.268,1909,0.091,1910,0.091,1911,0.091,1912,0.091,1913,0.169,1914,0.169,1915,0.085,1916,0.24,1917,0.333,1918,0.091,1919,0.252,1920,1.017,1921,0.333,1922,0.091,1923,0.493,1924,0.268,1925,0.091,1926,0.18,1927,0.268,1928,0.18,1929,0.252,1930,0.268,1931,0.617,1932,0.493,1933,0.085,1934,0.091,1935,0.091,1936,0.085,1937,0.268,1938,0.268,1939,0.091,1940,0.091,1941,0.091,1942,0.091,1943,0.091,1944,0.091,1945,0.091,1946,0.091,1947,0.085,1948,0.44,1949,0.091,1950,0.524,1951,0.091,1952,0.091,1953,0.091,1954,0.169,1955,0.091,1956,0.085,1957,0.928,1958,0.689,1959,0.689,1960,0.268,1961,0.091,1962,0.091,1963,0.333,1964,0.091,1965,0.18,1966,0.091,1967,0.091,1968,0.252,1969,0.268,1970,0.091,1971,0.091,1972,0.091,1973,0.268,1974,0.091,1975,0.608,1976,0.169,1977,0.268,1978,0.18,1979,0.355,1980,0.091,1981,0.18,1982,0.091,1983,0.091,1984,0.18,1985,0.091,1986,0.091,1987,0.18,1988,0.091,1989,0.18,1990,0.091,1991,0.091,1992,0.355,1993,0.078,1994,0.091,1995,0.091,1996,0.091,1997,0.394,1998,0.091,1999,0.77,2000,0.18,2001,0.091,2002,0.091,2003,0.085,2004,0.091,2005,0.081,2006,0.18,2007,0.085,2008,0.091,2009,0.091,2010,0.091,2011,0.18,2012,0.091,2013,0.18,2014,0.268,2015,0.091,2016,0.091,2017,0.091,2018,0.085,2019,0.091,2020,0.689,2021,0.355,2022,0.18,2023,0.091,2024,0.091,2025,0.18,2026,0.091,2027,0.091,2028,0.091,2029,0.091,2030,0.091,2031,0.268,2032,0.091,2033,0.268,2034,0.268,2035,0.18,2036,0.091,2037,0.091,2038,0.091,2039,0.333,2040,0.355,2041,0.091,2042,0.18,2043,0.524,2044,0.085,2045,0.091,2046,0.268,2047,0.091,2048,0.091,2049,0.091,2050,0.355,2051,0.091,2052,0.091,2053,0.091,2054,0.091,2055,0.091,2056,0.091,2057,0.091,2058,0.091,2059,0.091,2060,0.091,2061,0.18,2062,0.091,2063,0.091,2064,0.091,2065,0.091,2066,0.18,2067,0.18,2068,0.081,2069,0.091,2070,0.091,2071,0.268,2072,0.091,2073,0.091,2074,0.161,2075,0.524,2076,0.18,2077,0.161,2078,0.091,2079,0.18,2080,0.091,2081,0.091,2082,0.091,2083,0.091,2084,0.091,2085,0.355,2086,0.091,2087,0.091,2088,0.091,2089,0.091,2090,0.081,2091,0.091,2092,0.091,2093,0.091,2094,0.091,2095,0.155,2096,0.091,2097,0.18,2098,0.091,2099,0.18,2100,0.252,2101,0.091,2102,0.085,2103,0.222,2104,0.091,2105,0.317,2106,0.091,2107,0.18,2108,0.355,2109,0.268,2110,0.85,2111,0.091,2112,0.081,2113,0.689,2114,0.169,2115,1.378,2116,0.268,2117,0.169,2118,0.18,2119,0.333,2120,0.091,2121,0.091,2122,0.252,2123,0.091,2124,0.571,2125,0.18,2126,0.091,2127,0.355,2128,0.18,2129,0.091,2130,0.414,2131,0.091,2132,0.091,2133,0.155,2134,0.18,2135,0.091,2136,0.091,2137,0.085,2138,0.091,2139,0.091,2140,0.091,2141,0.18,2142,0.18,2143,0.18,2144,0.355,2145,0.18,2146,0.268,2147,0.252,2148,0.091,2149,0.18,2150,0.091,2151,0.091,2152,0.091,2153,0.091,2154,0.18,2155,0.091,2156,0.091,2157,0.091,2158,0.252,2159,0.091,2160,0.091,2161,0.091,2162,0.091,2163,0.091,2164,0.085,2165,0.091,2166,0.091,2167,0.091,2168,0.091,2169,0.085,2170,0.091,2171,0.091,2172,0.268,2173,0.085,2174,0.091,2175,0.18,2176,0.44,2177,0.689,2178,0.873,2179,0.091,2180,0.085,2181,0.091,2182,0.091,2183,0.091,2184,0.44,2185,0.091,2186,0.355,2187,0.085,2188,0.091,2189,0.091,2190,0.469,2191,0.091,2192,0.091,2193,0.268,2194,0.091,2195,0.091,2196,0.091,2197,0.091,2198,0.18,2199,0.091,2200,0.18,2201,0.268,2202,0.091,2203,0.091,2204,0.091,2205,0.091,2206,0.091,2207,0.091,2208,0.18,2209,0.18,2210,0.091,2211,0.085,2212,0.091,2213,0.161,2214,0.355,2215,0.091,2216,0.075,2217,0.091,2218,0.091,2219,0.099,2220,0.099,2221,0.099,2222,0.196,2223,0.099,2224,0.169,2225,0.085,2226,0.18,2227,0.081,2228,0.18,2229,0.091,2230,0.099,2231,0.099,2232,0.196,2233,0.085,2234,0.268,2235,0.099,2236,0.18,2237,0.099,2238,0.292,2239,0.44,2240,0.085,2241,0.099,2242,0.099,2243,0.099,2244,0.099,2245,0.085,2246,0.18,2247,0.18,2248,0.091,2249,0.099,2250,0.252,2251,0.18,2252,0.099,2253,0.099,2254,0.18,2255,0.091,2256,0.091,2257,0.091,2258,0.081,2259,0.18,2260,0.196,2261,0.099,2262,0.099,2263,0.099,2264,0.091,2265,0.099,2266,0.091,2267,0.099,2268,0.091,2269,0.099,2270,0.085,2271,0.099,2272,0.091,2273,0.091,2274,0.099,2275,0.18,2276,0.091,2277,0.099,2278,0.292,2279,0.292,2280,0.099,2281,0.099,2282,0.099,2283,0.196,2284,0.091,2285,0.196,2286,0.085,2287,0.387,2288,0.099,2289,0.091,2290,0.268,2291,0.099,2292,0.099,2293,0.085,2294,0.091,2295,0.091,2296,0.091,2297,0.091,2298,0.196,2299,0.099,2300,0.292,2301,0.099,2302,0.196,2303,0.572,2304,0.099,2305,0.196,2306,0.196,2307,0.196,2308,0.196,2309,0.196,2310,0.387,2311,0.387,2312,0.387,2313,0.48,2314,0.196,2315,0.48,2316,0.196,2317,0.196,2318,0.196,2319,0.268,2320,0.292,2321,0.387,2322,0.196,2323,0.387,2324,0.387,2325,0.099,2326,0.099,2327,0.099,2328,0.099,2329,0.099,2330,0.196,2331,0.196,2332,0.099,2333,0.099,2334,0.099,2335,0.099,2336,0.099,2337,0.099,2338,0.099,2339,0.099,2340,0.099,2341,0.099,2342,0.099,2343,0.099,2344,0.099,2345,0.18,2346,0.099,2347,0.099,2348,0.099,2349,0.099,2350,0.099,2351,0.099,2352,0.099,2353,0.085,2354,0.099,2355,0.085,2356,0.091,2357,0.099,2358,0.099,2359,0.099,2360,0.091,2361,0.099,2362,0.099]],["component/39",[413,0.47]],["title/40-1",[78,28.126,1322,45.062]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[361,57.016]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40-3",[78,21.348,507,29.343,937,39.354,1322,34.202]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["title/40-4",[1217,63.601]],["name/40-4",[]],["text/40-4",[]],["component/40-4",[]],["title/40-5",[1165,25.543,1193,18.49,1212,41.393]],["name/40-5",[]],["text/40-5",[]],["component/40-5",[]],["title/40-6",[160,35.607,416,26.5,1165,22.465,1193,16.262]],["name/40-6",[]],["text/40-6",[]],["component/40-6",[]],["title/40-7",[158,37.511,436,42.39,696,35.747]],["name/40-7",[]],["text/40-7",[]],["component/40-7",[]],["title/40-8",[78,19.052,696,28.059,1093,31.778,1102,24.678,1165,20.049]],["name/40-8",[]],["text/40-8",[]],["component/40-8",[]],["title/40-9",[416,23.65,1165,20.049,1193,14.513,1218,35.122,1322,30.524]],["name/40-9",[]],["text/40-9",[]],["component/40-9",[]],["title/40-10",[617,31.126,961,32.49,1238,15.3,1253,35.122,1706,35.122]],["name/40-10",[]],["text/40-10",[]],["component/40-10",[]],["title/40-11",[1238,22.587,2363,64.539]],["name/40-11",[]],["text/40-11",[]],["component/40-11",[]],["title/40-12",[349,25.977,1238,17.144,1253,39.354,1706,39.354]],["name/40-12",[]],["text/40-12",[]],["component/40-12",[]],["title/40-13",[694,34.724,1190,34.724,1238,19.493]],["name/40-13",[]],["text/40-13",[]],["component/40-13",[]],["title/40-14",[349,29.536,694,34.724,1190,34.724]],["name/40-14",[]],["text/40-14",[]],["component/40-14",[]],["title/40",[696,35.747,1193,18.49,1322,38.888]],["name/40",[2364,1.116]],["text/40",[13,1.295,18,0.581,20,0.301,22,0.249,24,4.068,25,0.346,28,0.669,29,0.634,30,0.328,32,0.337,36,0.295,42,1.518,43,1.765,49,0.593,50,0.923,53,0.346,55,0.214,57,1.134,65,0.295,67,0.295,74,0.706,76,0.337,78,2.794,80,1.319,81,1.691,82,0.561,83,0.405,85,0.619,86,0.37,91,0.593,92,0.301,100,0.307,102,0.814,108,0.346,117,0.8,126,0.405,134,0.561,152,1.132,154,1.729,156,5.431,157,1.273,158,1.05,159,2.551,160,0.313,161,0.218,162,0.619,164,0.787,172,0.86,177,2.945,184,2.155,185,0.269,193,0.269,197,0.295,200,0.66,202,0.357,205,0.971,209,0.313,211,0.65,212,0.878,214,0.346,218,2.671,223,0.295,228,0.328,235,0.37,236,0.943,253,0.301,258,0.313,261,0.313,268,0.581,275,0.346,276,3.331,279,0.493,285,1.897,286,0.328,287,0.405,291,0.337,299,0.346,307,1.767,308,0.346,314,3.155,315,0.313,330,1.812,332,0.843,337,1.001,342,0.313,345,4.259,347,1.599,349,0.641,361,0.32,372,0.357,375,2.989,380,0.715,384,1.623,388,1.187,393,1.56,415,0.346,416,1.022,417,0.32,423,0.669,436,5.542,440,0.971,453,1.624,462,0.512,464,0.328,465,0.971,475,1.038,477,0.337,479,1.774,487,1.081,488,0.764,489,0.346,491,1.404,498,0.593,499,0.386,501,1.089,507,3.43,521,0.634,528,0.313,535,0.715,543,0.619,549,1.897,581,0.65,583,0.346,598,0.37,599,0.69,600,0.357,607,1.536,613,2.558,615,0.605,616,2.251,617,4.564,619,0.581,621,1.34,631,1.017,635,0.357,649,0.878,652,2.305,653,2.245,655,0.301,658,0.715,669,0.878,675,0.386,676,1.001,678,0.346,686,0.337,688,1.34,694,2.703,696,2.9,704,0.357,710,0.634,714,0.337,715,0.346,717,5.775,725,0.281,727,0.337,756,0.32,757,0.357,768,1.253,811,1.038,825,0.634,828,0.386,830,0.715,832,0.386,854,1.134,857,1.001,867,0.346,870,0.37,874,4.453,875,4.797,885,1.089,893,0.37,903,0.357,912,0.386,934,0.386,937,0.971,961,1.852,962,0.431,966,0.65,968,1.038,971,0.357,983,1.038,986,0.328,990,0.527,992,2.433,1001,0.357,1002,1.889,1006,0.745,1016,1.001,1020,2.606,1022,0.37,1025,0.357,1031,1.089,1054,0.357,1072,1.081,1086,0.69,1093,3.533,1100,1.038,1102,2.92,1113,2.908,1114,0.431,1120,0.346,1122,0.386,1127,1.623,1128,0.69,1130,0.669,1150,0.669,1165,2.843,1169,3.222,1173,0.405,1178,0.86,1185,1.961,1186,0.634,1190,3.723,1191,1.635,1192,2.558,1193,2.128,1195,0.843,1199,1.533,1200,1.228,1204,1.718,1205,0.37,1210,0.313,1212,1.404,1215,0.669,1217,4.747,1218,1.767,1219,0.328,1221,0.307,1224,0.328,1226,2.377,1228,0.37,1238,3.158,1243,0.715,1245,0.745,1251,2.433,1252,0.386,1253,2.224,1254,1.374,1256,0.715,1259,0.32,1261,3.533,1264,0.745,1267,3.141,1268,0.346,1273,1.038,1282,0.405,1286,0.715,1289,0.357,1293,1.396,1295,1.518,1297,0.37,1317,0.782,1318,0.386,1319,0.386,1322,4.085,1324,1.691,1325,0.431,1334,2.601,1347,0.833,1355,2.82,1357,1.038,1359,0.69,1372,0.37,1390,1.691,1394,0.715,1404,0.605,1406,0.37,1407,0.357,1411,1.623,1413,1.208,1423,0.69,1424,1.396,1434,0.386,1435,0.405,1443,0.386,1457,0.386,1467,0.745,1470,0.37,1473,0.386,1479,0.37,1486,0.328,1513,0.782,1516,3.708,1518,3.094,1548,0.386,1553,0.386,1561,0.431,1566,1.293,1567,0.715,1568,3.015,1570,0.431,1579,0.715,1602,0.619,1606,0.431,1617,0.337,1620,3.51,1621,3.732,1623,3.732,1626,1.89,1629,1.89,1630,2.492,1631,2.23,1633,0.431,1636,0.431,1638,0.37,1668,0.405,1690,0.431,1691,1.081,1692,0.346,1694,0.357,1696,0.86,1697,0.431,1698,0.431,1701,0.481,1702,0.249,1706,1.253,1708,0.669,1725,0.357,1729,0.37,1750,0.715,1751,1.34,1754,0.386,1756,1.968,1757,1.081,1767,0.745,1768,1.396,1771,0.782,1787,0.405,1816,0.745,1820,0.745,1821,1.466,1829,0.405,1832,1.466,1836,0.405,1844,0.405,1848,2.601,1849,1.776,1859,1.466,1861,0.782,1862,0.782,1866,1.776,1867,0.782,1869,0.782,1870,0.782,1889,0.405,1891,0.745,1913,0.405,1914,1.776,1916,0.745,1917,0.405,1919,0.782,1920,0.405,1923,1.135,1931,0.745,1933,1.466,1947,0.405,1976,0.782,1993,0.37,2007,0.405,2039,0.782,2077,0.386,2102,0.782,2103,0.357,2105,1.081,2117,2.342,2119,0.405,2122,0.782,2124,0.782,2130,0.782,2133,0.715,2137,0.782,2158,0.405,2173,0.405,2178,1.135,2180,0.405,2187,0.405,2190,0.386,2211,0.405,2216,0.357,2233,0.405,2246,0.431,2250,0.405,2258,0.386,2264,2.2,2293,0.405,2319,0.431,2345,0.833,2353,0.782,2363,2.492,2365,1.208,2366,0.431,2367,0.47,2368,0.405,2369,0.745,2370,0.47,2371,0.47,2372,0.431,2373,0.431,2374,0.47,2375,0.431,2376,0.47,2377,1.318,2378,1.702,2379,0.47,2380,0.431,2381,0.47,2382,0.47,2383,0.47,2384,0.47,2385,2.062,2386,0.833,2387,0.47,2388,0.47,2389,0.47,2390,1.318,2391,3.732,2392,0.47,2393,0.47,2394,0.47,2395,1.208,2396,0.47,2397,0.47,2398,0.47,2399,1.702,2400,0.47,2401,0.47,2402,0.47,2403,0.47,2404,0.47,2405,0.47,2406,0.47,2407,0.47,2408,0.47,2409,0.47,2410,0.47,2411,0.47,2412,0.47,2413,0.47,2414,0.47,2415,0.47,2416,0.47,2417,0.47,2418,0.47,2419,0.47,2420,0.47,2421,0.47,2422,0.47,2423,0.47,2424,0.909,2425,0.47,2426,0.47,2427,0.47,2428,0.47,2429,0.47,2430,0.47,2431,0.47,2432,0.47,2433,0.431,2434,0.47,2435,0.47,2436,0.47,2437,0.47,2438,0.47,2439,0.47,2440,0.909,2441,0.47,2442,0.909,2443,1.318,2444,0.909,2445,0.47,2446,0.47,2447,0.431,2448,0.47,2449,0.47,2450,0.47,2451,0.909,2452,0.47,2453,0.909,2454,0.909,2455,0.47,2456,0.47,2457,0.47,2458,0.47,2459,0.47,2460,0.47,2461,0.47,2462,0.47,2463,0.47,2464,0.47,2465,0.47,2466,0.47,2467,0.47,2468,0.47,2469,1.318,2470,0.47,2471,0.47,2472,0.47,2473,0.47,2474,0.47,2475,0.47,2476,0.47,2477,0.47,2478,0.47,2479,0.47,2480,0.431,2481,0.909,2482,0.47,2483,0.47,2484,0.47,2485,0.47,2486,0.47,2487,0.47,2488,0.47,2489,0.47,2490,0.47,2491,0.47,2492,0.47,2493,0.909,2494,1.208,2495,0.909,2496,0.909,2497,0.909,2498,0.909,2499,0.909,2500,0.909,2501,2.401,2502,0.909]],["component/40",[413,0.47]],["title/41-1",[425,47.838,1193,18.49,2503,52.343]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[154,31.796,1193,18.49,2503,52.343]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[55,27.695,507,33.363,825,42.39]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[67,38.176,507,33.363,825,42.39]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[5,37.282,134,32.991,329,39.354,2504,48.985]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[278,39.655,1193,18.49,1721,44.746]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[285,37.282,1193,16.262,1238,17.144,1635,43.832]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41-8",[285,37.282,1238,17.144,1635,43.832,1747,38.257]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["title/41-9",[1299,68.649]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["title/41-10",[1192,34.143,1193,14.513,1238,15.3,1384,24.408,1894,35.122]],["name/41-10",[]],["text/41-10",[]],["component/41-10",[]],["title/41-11",[78,21.348,1126,42.073,1193,16.262,2225,46.035]],["name/41-11",[]],["text/41-11",[]],["component/41-11",[]],["title/41-12",[22,32.165,653,38.176,2505,55.696]],["name/41-12",[]],["text/41-12",[]],["component/41-12",[]],["title/41-13",[653,38.176,1222,52.343,1250,49.838]],["name/41-13",[]],["text/41-13",[]],["component/41-13",[]],["title/41-14",[78,21.348,1193,16.262,1384,27.349,2506,48.985]],["name/41-14",[]],["text/41-14",[]],["component/41-14",[]],["title/41-15",[1165,29.598,1193,21.426]],["name/41-15",[]],["text/41-15",[]],["component/41-15",[]],["title/41-16",[78,24.273,1168,30.764,1185,27.695]],["name/41-16",[]],["text/41-16",[]],["component/41-16",[]],["title/41-17",[78,29.671,507,21.552,714,28.099,1286,30.902,1385,32.194]],["name/41-17",[]],["text/41-17",[]],["component/41-17",[]],["title/41-18",[154,27.965,999,43.832,1193,16.262,1238,17.144]],["name/41-18",[]],["text/41-18",[]],["component/41-18",[]],["title/41-19",[278,31.126,416,23.65,653,29.965,1193,14.513,1261,31.778]],["name/41-19",[]],["text/41-19",[]],["component/41-19",[]],["title/41-20",[1261,46.914,1894,51.85]],["name/41-20",[]],["text/41-20",[]],["component/41-20",[]],["title/41-21",[154,31.796,507,33.363,1254,40.486]],["name/41-21",[]],["text/41-21",[]],["component/41-21",[]],["title/41-22",[1256,65.894]],["name/41-22",[]],["text/41-22",[]],["component/41-22",[]],["title/41-23",[201,50.405,507,38.66]],["name/41-23",[]],["text/41-23",[]],["component/41-23",[]],["title/41-24",[1165,29.598,1193,21.426]],["name/41-24",[]],["text/41-24",[]],["component/41-24",[]],["title/41-25",[1701,44.306]],["name/41-25",[]],["text/41-25",[]],["component/41-25",[]],["title/41-26",[1200,42.834]],["name/41-26",[]],["text/41-26",[]],["component/41-26",[]],["title/41-27",[1255,55.767]],["name/41-27",[]],["text/41-27",[]],["component/41-27",[]],["title/41-28",[22,37.272,1238,22.587]],["name/41-28",[]],["text/41-28",[]],["component/41-28",[]],["title/41-29",[36,52.585]],["name/41-29",[]],["text/41-29",[]],["component/41-29",[]],["title/41-30",[416,30.131,1238,19.493,1702,32.165]],["name/41-30",[]],["text/41-30",[]],["component/41-30",[]],["title/41-31",[55,32.092,1702,37.272]],["name/41-31",[]],["text/41-31",[]],["component/41-31",[]],["title/41-32",[406,55.767]],["name/41-32",[]],["text/41-32",[]],["component/41-32",[]],["title/41-33",[43,36.294]],["name/41-33",[]],["text/41-33",[]],["component/41-33",[]],["title/41-34",[444,42.39,1165,25.543,1193,18.49]],["name/41-34",[]],["text/41-34",[]],["component/41-34",[]],["title/41-35",[107,42.064,444,49.12]],["name/41-35",[]],["text/41-35",[]],["component/41-35",[]],["title/41-36",[444,49.12,568,50.405]],["name/41-36",[]],["text/41-36",[]],["component/41-36",[]],["title/41-37",[107,36.301,1113,30.443,1703,49.838]],["name/41-37",[]],["text/41-37",[]],["component/41-37",[]],["title/41-38",[107,42.064,1566,53.503]],["name/41-38",[]],["text/41-38",[]],["component/41-38",[]],["title/41-39",[107,31.927,1165,22.465,1193,16.262,1199,30.122]],["name/41-39",[]],["text/41-39",[]],["component/41-39",[]],["title/41-40",[123,44.236,1199,39.687]],["name/41-40",[]],["text/41-40",[]],["component/41-40",[]],["title/41-41",[1199,39.687,1259,47.964]],["name/41-41",[]],["text/41-41",[]],["component/41-41",[]],["title/41-42",[567,42.064,1701,37.272]],["name/41-42",[]],["text/41-42",[]],["component/41-42",[]],["title/41-43",[337,35.747,826,39.655,1391,46.173]],["name/41-43",[]],["text/41-43",[]],["component/41-43",[]],["title/41-44",[1404,55.767]],["name/41-44",[]],["text/41-44",[]],["component/41-44",[]],["title/41-45",[1541,44.236,1701,37.272]],["name/41-45",[]],["text/41-45",[]],["component/41-45",[]],["title/41-46",[1219,42.39,1704,39.655,1705,28.187]],["name/41-46",[]],["text/41-46",[]],["component/41-46",[]],["title/41-47",[567,28.493,1193,14.513,1238,15.3,1323,37.549,1706,35.122]],["name/41-47",[]],["text/41-47",[]],["component/41-47",[]],["title/41-48",[694,34.724,1238,19.493,1707,42.39]],["name/41-48",[]],["text/41-48",[]],["component/41-48",[]],["title/41-49",[694,40.237,1708,51.85]],["name/41-49",[]],["text/41-49",[]],["component/41-49",[]],["title/41-50",[349,34.225,694,40.237]],["name/41-50",[]],["text/41-50",[]],["component/41-50",[]],["title/41-51",[375,34.249,694,34.724,1708,44.746]],["name/41-51",[]],["text/41-51",[]],["component/41-51",[]],["title/41-52",[1224,49.12,1238,22.587]],["name/41-52",[]],["text/41-52",[]],["component/41-52",[]],["title/41-53",[567,36.301,1185,27.695,1238,19.493]],["name/41-53",[]],["text/41-53",[]],["component/41-53",[]],["title/41-54",[1709,68.649]],["name/41-54",[]],["text/41-54",[]],["component/41-54",[]],["title/41-55",[349,37.151,694,30.54,1185,24.357]],["name/41-55",[]],["text/41-55",[]],["component/41-55",[]],["title/41-56",[1238,22.587,1322,45.062]],["name/41-56",[]],["text/41-56",[]],["component/41-56",[]],["title/41-57",[1238,22.587,1710,57.75]],["name/41-57",[]],["text/41-57",[]],["component/41-57",[]],["title/41-58",[286,37.282,462,30.122,1238,17.144,1602,36.405]],["name/41-58",[]],["text/41-58",[]],["component/41-58",[]],["title/41-59",[1602,57.016]],["name/41-59",[]],["text/41-59",[]],["component/41-59",[]],["title/41-60",[1711,68.649]],["name/41-60",[]],["text/41-60",[]],["component/41-60",[]],["title/41-61",[1238,26.83,1702,32.165]],["name/41-61",[]],["text/41-61",[]],["component/41-61",[]],["title/41-62",[55,32.092,1702,37.272]],["name/41-62",[]],["text/41-62",[]],["component/41-62",[]],["title/41-63",[55,27.695,1712,49.838,1713,44.746]],["name/41-63",[]],["text/41-63",[]],["component/41-63",[]],["title/41-64",[975,46.173,1261,40.486,1713,44.746]],["name/41-64",[]],["text/41-64",[]],["component/41-64",[]],["title/41-65",[1165,25.543,1193,18.49,1400,43.499]],["name/41-65",[]],["text/41-65",[]],["component/41-65",[]],["title/41-66",[1714,57.75,1715,49.12]],["name/41-66",[]],["text/41-66",[]],["component/41-66",[]],["title/41-67",[1716,49.24]],["name/41-67",[]],["text/41-67",[]],["component/41-67",[]],["title/41-68",[1707,58.39]],["name/41-68",[]],["text/41-68",[]],["component/41-68",[]],["title/41-69",[375,47.177]],["name/41-69",[]],["text/41-69",[]],["component/41-69",[]],["title/41-70",[567,36.301,1238,19.493,1716,35.747]],["name/41-70",[]],["text/41-70",[]],["component/41-70",[]],["title/41-71",[1020,45.062,1694,53.503]],["name/41-71",[]],["text/41-71",[]],["component/41-71",[]],["title/41-72",[1020,45.062,1707,49.12]],["name/41-72",[]],["text/41-72",[]],["component/41-72",[]],["title/41-73",[1020,45.062,1238,22.587]],["name/41-73",[]],["text/41-73",[]],["component/41-73",[]],["title/41-74",[1717,44.236,1718,57.75]],["name/41-74",[]],["text/41-74",[]],["component/41-74",[]],["title/41-75",[200,30.443,1238,19.493,1716,35.747]],["name/41-75",[]],["text/41-75",[]],["component/41-75",[]],["title/41-76",[1486,49.12,1716,41.423]],["name/41-76",[]],["text/41-76",[]],["component/41-76",[]],["title/41-77",[430,45.951,1716,41.423]],["name/41-77",[]],["text/41-77",[]],["component/41-77",[]],["title/41-78",[55,24.357,1704,34.876,1705,24.79,1717,33.575]],["name/41-78",[]],["text/41-78",[]],["component/41-78",[]],["title/41-79",[348,45.062,1705,32.662]],["name/41-79",[]],["text/41-79",[]],["component/41-79",[]],["title/41-80",[1705,32.662,1719,51.85]],["name/41-80",[]],["text/41-80",[]],["component/41-80",[]],["title/41-81",[54,36.405,217,39.354,1705,24.79,1720,43.832]],["name/41-81",[]],["text/41-81",[]],["component/41-81",[]],["title/41-82",[337,23.092,416,19.464,826,25.616,1238,12.592,1702,20.778,1704,25.616,1705,18.208]],["name/41-82",[]],["text/41-82",[]],["component/41-82",[]],["title/41-83",[55,38.148]],["name/41-83",[]],["text/41-83",[]],["component/41-83",[]],["title/41-84",[349,29.536,1701,32.165,1721,44.746]],["name/41-84",[]],["text/41-84",[]],["component/41-84",[]],["title/41-85",[349,29.536,1221,39.655,1722,42.39]],["name/41-85",[]],["text/41-85",[]],["component/41-85",[]],["title/41-86",[631,42.064,1723,57.75]],["name/41-86",[]],["text/41-86",[]],["component/41-86",[]],["title/41-87",[348,38.888,631,36.301,1254,40.486]],["name/41-87",[]],["text/41-87",[]],["component/41-87",[]],["title/41-88",[55,19.627,349,20.932,1221,28.103,1717,27.055,1722,30.042,1724,32.723]],["name/41-88",[]],["text/41-88",[]],["component/41-88",[]],["title/41-89",[55,24.357,314,34.202,1717,33.575,1725,40.609]],["name/41-89",[]],["text/41-89",[]],["component/41-89",[]],["title/41-90",[31,46.173,55,27.695,1717,38.176]],["name/41-90",[]],["text/41-90",[]],["component/41-90",[]],["title/41-91",[1726,53.503,1727,57.75]],["name/41-91",[]],["text/41-91",[]],["component/41-91",[]],["title/41-92",[463,40.609,1203,37.282,1251,39.354,1726,40.609]],["name/41-92",[]],["text/41-92",[]],["component/41-92",[]],["title/41-93",[631,36.301,1717,38.176,1728,46.173]],["name/41-93",[]],["text/41-93",[]],["component/41-93",[]],["title/41-94",[631,36.301,1224,42.39,1728,46.173]],["name/41-94",[]],["text/41-94",[]],["component/41-94",[]],["title/41-95",[1541,44.236,1729,55.433]],["name/41-95",[]],["text/41-95",[]],["component/41-95",[]],["title/41-96",[55,27.695,1238,19.493,1702,32.165]],["name/41-96",[]],["text/41-96",[]],["component/41-96",[]],["title/41-97",[375,39.687,1730,57.75]],["name/41-97",[]],["text/41-97",[]],["component/41-97",[]],["title/41-98",[55,32.092,1731,50.405]],["name/41-98",[]],["text/41-98",[]],["component/41-98",[]],["title/41-99",[67,44.236,1731,50.405]],["name/41-99",[]],["text/41-99",[]],["component/41-99",[]],["title/41-100",[507,33.363,961,41.393,1238,19.493]],["name/41-100",[]],["text/41-100",[]],["component/41-100",[]],["title/41-101",[1715,49.12,1731,50.405]],["name/41-101",[]],["text/41-101",[]],["component/41-101",[]],["title/41-102",[78,21.348,990,30.978,1209,40.609,1732,39.354]],["name/41-102",[]],["text/41-102",[]],["component/41-102",[]],["title/41-103",[416,30.131,990,35.223,1732,44.746]],["name/41-103",[]],["text/41-103",[]],["component/41-103",[]],["title/41-104",[337,35.747,990,35.223,1715,42.39]],["name/41-104",[]],["text/41-104",[]],["component/41-104",[]],["title/41-105",[990,40.815,1705,32.662]],["name/41-105",[]],["text/41-105",[]],["component/41-105",[]],["title/41-106",[1210,40.486,1238,19.493,1702,32.165]],["name/41-106",[]],["text/41-106",[]],["component/41-106",[]],["title/41-107",[1210,40.486,1238,19.493,1702,32.165]],["name/41-107",[]],["text/41-107",[]],["component/41-107",[]],["title/41-108",[416,30.131,1210,40.486,1702,32.165]],["name/41-108",[]],["text/41-108",[]],["component/41-108",[]],["title/41-109",[349,23.183,946,36.242,1221,31.126,1722,33.273,1724,36.242]],["name/41-109",[]],["text/41-109",[]],["component/41-109",[]],["title/41-110",[669,40.486,1704,39.655,1705,28.187]],["name/41-110",[]],["text/41-110",[]],["component/41-110",[]],["title/41-111",[337,35.747,826,39.655,1732,44.746]],["name/41-111",[]],["text/41-111",[]],["component/41-111",[]],["title/41-112",[1404,55.767]],["name/41-112",[]],["text/41-112",[]],["component/41-112",[]],["title/41-113",[1541,44.236,1701,37.272]],["name/41-113",[]],["text/41-113",[]],["component/41-113",[]],["title/41-114",[508,43.499,1541,38.176,1701,32.165]],["name/41-114",[]],["text/41-114",[]],["component/41-114",[]],["title/41-115",[43,20.682,278,31.126,416,23.65,1541,29.965,1701,25.247]],["name/41-115",[]],["text/41-115",[]],["component/41-115",[]],["title/41-116",[416,30.131,1238,19.493,1702,32.165]],["name/41-116",[]],["text/41-116",[]],["component/41-116",[]],["title/41-117",[462,30.122,840,37.282,1144,42.073,1705,24.79]],["name/41-117",[]],["text/41-117",[]],["component/41-117",[]],["title/41-118",[55,27.695,1733,49.838,1734,49.838]],["name/41-118",[]],["text/41-118",[]],["component/41-118",[]],["title/41-119",[74,32.549,1143,42.39,1735,42.39]],["name/41-119",[]],["text/41-119",[]],["component/41-119",[]],["title/41-120",[74,21.026,81,20.088,1143,42.367,1168,19.873,1705,18.208,1736,28.905]],["name/41-120",[]],["text/41-120",[]],["component/41-120",[]],["title/41-121",[1143,37.282,1204,38.257,1705,24.79,1736,39.354]],["name/41-121",[]],["text/41-121",[]],["component/41-121",[]],["title/41-122",[1238,19.493,1705,28.187,1737,46.173]],["name/41-122",[]],["text/41-122",[]],["component/41-122",[]],["title/41-123",[1238,19.493,1705,28.187,1737,46.173]],["name/41-123",[]],["text/41-123",[]],["component/41-123",[]],["title/41-124",[55,32.092,1738,57.75]],["name/41-124",[]],["text/41-124",[]],["component/41-124",[]],["title/41-125",[22,37.272,1739,57.75]],["name/41-125",[]],["text/41-125",[]],["component/41-125",[]],["title/41-126",[43,18.673,1238,13.814,1486,30.042,1617,30.828,1716,25.334,1740,30.828]],["name/41-126",[]],["text/41-126",[]],["component/41-126",[]],["title/41-127",[43,14.461,348,21.343,430,21.764,840,23.265,1704,21.764,1705,15.47,1716,19.619,1719,24.558,1740,23.873]],["name/41-127",[]],["text/41-127",[]],["component/41-127",[]],["title/41-128",[332,30.524,430,31.126,1238,15.3,1716,28.059,1740,34.143]],["name/41-128",[]],["text/41-128",[]],["component/41-128",[]],["title/41-129",[1702,37.272,1741,57.75]],["name/41-129",[]],["text/41-129",[]],["component/41-129",[]],["title/41-130",[172,39.655,1113,30.443,1283,47.838]],["name/41-130",[]],["text/41-130",[]],["component/41-130",[]],["title/41-131",[102,26.584,1113,21.575,1165,18.102,1190,24.609,1193,13.104,1742,37.095]],["name/41-131",[]],["text/41-131",[]],["component/41-131",[]],["title/41-132",[102,26.584,1113,21.575,1165,18.102,1190,24.609,1193,13.104,1743,37.095]],["name/41-132",[]],["text/41-132",[]],["component/41-132",[]],["title/41-133",[1113,35.276,1229,50.405]],["name/41-133",[]],["text/41-133",[]],["component/41-133",[]],["title/41-134",[1190,34.724,1744,52.343,1745,49.838]],["name/41-134",[]],["text/41-134",[]],["component/41-134",[]],["title/41-135",[1113,35.276,1200,36.033]],["name/41-135",[]],["text/41-135",[]],["component/41-135",[]],["title/41-136",[1199,39.687,1200,36.033]],["name/41-136",[]],["text/41-136",[]],["component/41-136",[]],["title/41-137",[453,42.064,1200,36.033]],["name/41-137",[]],["text/41-137",[]],["component/41-137",[]],["title/41-138",[123,33.575,1165,22.465,1193,16.262,1199,30.122]],["name/41-138",[]],["text/41-138",[]],["component/41-138",[]],["title/41-139",[123,38.176,1093,40.486,1199,34.249]],["name/41-139",[]],["text/41-139",[]],["component/41-139",[]],["title/41-140",[162,41.393,1199,34.249,1200,31.096]],["name/41-140",[]],["text/41-140",[]],["component/41-140",[]],["title/41-141",[1199,39.687,1259,47.964]],["name/41-141",[]],["text/41-141",[]],["component/41-141",[]],["title/41-142",[1200,36.033,1746,57.75]],["name/41-142",[]],["text/41-142",[]],["component/41-142",[]],["title/41-143",[1102,31.44,1191,41.393,1747,43.499]],["name/41-143",[]],["text/41-143",[]],["component/41-143",[]],["title/41-144",[1588,65.894]],["name/41-144",[]],["text/41-144",[]],["component/41-144",[]],["title/41-145",[1322,45.062,1686,55.433]],["name/41-145",[]],["text/41-145",[]],["component/41-145",[]],["title/41-146",[210,32.443,453,31.927,1113,26.774,1200,27.349]],["name/41-146",[]],["text/41-146",[]],["component/41-146",[]],["title/41-147",[1113,26.774,1178,34.876,1190,30.54,1200,27.349]],["name/41-147",[]],["text/41-147",[]],["component/41-147",[]],["title/41-148",[453,42.064,570,37.272]],["name/41-148",[]],["text/41-148",[]],["component/41-148",[]],["title/41-149",[1113,26.774,1130,39.354,1178,34.876,1200,27.349]],["name/41-149",[]],["text/41-149",[]],["component/41-149",[]],["title/41-150",[453,42.064,570,37.272]],["name/41-150",[]],["text/41-150",[]],["component/41-150",[]],["title/41-151",[1178,34.876,1185,24.357,1200,27.349,1238,17.144]],["name/41-151",[]],["text/41-151",[]],["component/41-151",[]],["title/41-152",[453,42.064,570,37.272]],["name/41-152",[]],["text/41-152",[]],["component/41-152",[]],["title/41-153",[55,24.357,154,27.965,1113,26.774,1748,43.832]],["name/41-153",[]],["text/41-153",[]],["component/41-153",[]],["title/41-154",[1113,35.276,1749,57.75]],["name/41-154",[]],["text/41-154",[]],["component/41-154",[]],["title/41-155",[1165,22.465,1193,16.262,1750,42.073,1751,42.073]],["name/41-155",[]],["text/41-155",[]],["component/41-155",[]],["title/41-156",[78,24.273,1193,18.49,1384,31.096]],["name/41-156",[]],["text/41-156",[]],["component/41-156",[]],["title/41-157",[1193,18.49,1384,31.096,2507,47.838]],["name/41-157",[]],["text/41-157",[]],["component/41-157",[]],["title/41-158",[484,52.343,1193,18.49,1384,31.096]],["name/41-158",[]],["text/41-158",[]],["component/41-158",[]],["title/41-159",[78,21.348,349,25.977,1193,16.262,1384,27.349]],["name/41-159",[]],["text/41-159",[]],["component/41-159",[]],["title/41-160",[349,29.536,1185,27.695,1190,34.724]],["name/41-160",[]],["text/41-160",[]],["component/41-160",[]],["title/41-161",[22,28.289,1193,16.262,1384,27.349,1701,28.289]],["name/41-161",[]],["text/41-161",[]],["component/41-161",[]],["title/41-162",[1193,16.262,1384,27.349,1701,28.289,2508,46.035]],["name/41-162",[]],["text/41-162",[]],["component/41-162",[]],["title/41-163",[375,34.249,1255,40.486,2509,55.696]],["name/41-163",[]],["text/41-163",[]],["component/41-163",[]],["title/41-164",[1412,52.343,2510,55.696,2511,55.696]],["name/41-164",[]],["text/41-164",[]],["component/41-164",[]],["title/41-165",[5,33.273,1193,14.513,1384,24.408,1701,25.247,2508,41.085]],["name/41-165",[]],["text/41-165",[]],["component/41-165",[]],["title/41-166",[269,49.12,1261,46.914]],["name/41-166",[]],["text/41-166",[]],["component/41-166",[]],["title/41-167",[22,37.272,1171,49.12]],["name/41-167",[]],["text/41-167",[]],["component/41-167",[]],["title/41-168",[157,43.466,1171,49.12]],["name/41-168",[]],["text/41-168",[]],["component/41-168",[]],["title/41-169",[1171,49.12,1785,60.653]],["name/41-169",[]],["text/41-169",[]],["component/41-169",[]],["title/41-170",[1255,46.914,2224,60.653]],["name/41-170",[]],["text/41-170",[]],["component/41-170",[]],["title/41-171",[1169,47.964,1885,57.75]],["name/41-171",[]],["text/41-171",[]],["component/41-171",[]],["title/41-172",[279,45.384]],["name/41-172",[]],["text/41-172",[]],["component/41-172",[]],["title/41-173",[62,31.063,101,29.576,349,17.528,1221,23.533,1701,19.089,1721,26.555,1932,31.063,2512,33.053]],["name/41-173",[]],["text/41-173",[]],["component/41-173",[]],["title/41-174",[348,30.524,1701,25.247,1721,35.122,1722,33.273,1907,41.085]],["name/41-174",[]],["text/41-174",[]],["component/41-174",[]],["title/41-175",[22,22.796,1193,13.104,1255,28.692,1384,22.038,1701,22.796,2224,37.095]],["name/41-175",[]],["text/41-175",[]],["component/41-175",[]],["title/41-176",[349,23.183,694,27.256,1193,14.513,1384,24.408,1705,22.124]],["name/41-176",[]],["text/41-176",[]],["component/41-176",[]],["title/41-177",[1193,18.49,1384,31.096,1705,28.187]],["name/41-177",[]],["text/41-177",[]],["component/41-177",[]],["title/41-178",[1403,55.433,1705,32.662]],["name/41-178",[]],["text/41-178",[]],["component/41-178",[]],["title/41-179",[348,38.888,840,42.39,1705,28.187]],["name/41-179",[]],["text/41-179",[]],["component/41-179",[]],["title/41-180",[1705,32.662,1719,51.85]],["name/41-180",[]],["text/41-180",[]],["component/41-180",[]],["title/41-181",[840,42.39,1384,31.096,1705,28.187]],["name/41-181",[]],["text/41-181",[]],["component/41-181",[]],["title/41-182",[1001,36.242,1165,20.049,1193,14.513,1384,24.408,1705,22.124]],["name/41-182",[]],["text/41-182",[]],["component/41-182",[]],["title/41-183",[8,47.964,1856,57.75]],["name/41-183",[]],["text/41-183",[]],["component/41-183",[]],["title/41-184",[1856,57.75,2513,70.439]],["name/41-184",[]],["text/41-184",[]],["component/41-184",[]],["title/41-185",[152,26.187,1193,14.513,1384,24.408,1705,22.124,2514,43.717]],["name/41-185",[]],["text/41-185",[]],["component/41-185",[]],["title/41-186",[37,31.44,567,31.927,1193,16.262,1384,27.349]],["name/41-186",[]],["text/41-186",[]],["component/41-186",[]],["title/41-187",[37,49.24]],["name/41-187",[]],["text/41-187",[]],["component/41-187",[]],["title/41-188",[37,41.423,2515,55.433]],["name/41-188",[]],["text/41-188",[]],["component/41-188",[]],["title/41-189",[330,46.914,1692,51.85]],["name/41-189",[]],["text/41-189",[]],["component/41-189",[]],["title/41-190",[1915,72.1]],["name/41-190",[]],["text/41-190",[]],["component/41-190",[]],["title/41-191",[972,72.1]],["name/41-191",[]],["text/41-191",[]],["component/41-191",[]],["title/41-192",[1212,57.016]],["name/41-192",[]],["text/41-192",[]],["component/41-192",[]],["title/41-193",[1713,51.85,2516,64.539]],["name/41-193",[]],["text/41-193",[]],["component/41-193",[]],["title/41-194",[37,41.423,101,57.75]],["name/41-194",[]],["text/41-194",[]],["component/41-194",[]],["title/41-195",[2517,76.719]],["name/41-195",[]],["text/41-195",[]],["component/41-195",[]],["title/41-196",[37,31.44,1193,16.262,1384,27.349,2515,42.073]],["name/41-196",[]],["text/41-196",[]],["component/41-196",[]],["title/41-197",[37,35.747,81,31.096,2515,47.838]],["name/41-197",[]],["text/41-197",[]],["component/41-197",[]],["title/41-198",[349,34.225,462,39.687]],["name/41-198",[]],["text/41-198",[]],["component/41-198",[]],["title/41-199",[441,57.75,1200,36.033]],["name/41-199",[]],["text/41-199",[]],["component/41-199",[]],["title/41-200",[164,50.003]],["name/41-200",[]],["text/41-200",[]],["component/41-200",[]],["title/41-201",[1692,61.636]],["name/41-201",[]],["text/41-201",[]],["component/41-201",[]],["title/41-202",[1824,72.1]],["name/41-202",[]],["text/41-202",[]],["component/41-202",[]],["title/41-203",[615,35.607,1169,36.405,1190,30.54,1357,42.073]],["name/41-203",[]],["text/41-203",[]],["component/41-203",[]],["title/41-204",[37,35.747,152,33.363,2515,47.838]],["name/41-204",[]],["text/41-204",[]],["component/41-204",[]],["title/41-205",[37,31.44,1121,46.035,1406,42.073,2518,46.035]],["name/41-205",[]],["text/41-205",[]],["component/41-205",[]],["title/41-206",[462,39.687,1238,22.587]],["name/41-206",[]],["text/41-206",[]],["component/41-206",[]],["title/41-207",[8,41.393,1705,28.187,1885,49.838]],["name/41-207",[]],["text/41-207",[]],["component/41-207",[]],["title/41-208",[22,32.165,434,49.838,1238,19.493]],["name/41-208",[]],["text/41-208",[]],["component/41-208",[]],["title/41-209",[43,23.174,60,40.609,157,32.991,2519,48.985]],["name/41-209",[]],["text/41-209",[]],["component/41-209",[]],["title/41-210",[678,44.746,1106,46.173,1602,41.393]],["name/41-210",[]],["text/41-210",[]],["component/41-210",[]],["title/41-211",[37,49.24]],["name/41-211",[]],["text/41-211",[]],["component/41-211",[]],["title/41-212",[959,46.173,1106,46.173,1602,41.393]],["name/41-212",[]],["text/41-212",[]],["component/41-212",[]],["title/41-213",[102,26.584,276,27.055,349,20.932,479,28.103,483,37.095,1254,28.692]],["name/41-213",[]],["text/41-213",[]],["component/41-213",[]],["title/41-214",[43,17.021,256,29.826,1165,16.5,1193,11.944,1384,20.088,1813,33.812,2520,32.194]],["name/41-214",[]],["text/41-214",[]],["component/41-214",[]],["title/41-215",[22,37.272,157,43.466]],["name/41-215",[]],["text/41-215",[]],["component/41-215",[]],["title/41-216",[22,28.289,43,23.174,279,28.977,971,40.609]],["name/41-216",[]],["text/41-216",[]],["component/41-216",[]],["title/41-217",[971,40.609,1193,16.262,1384,27.349,2507,42.073]],["name/41-217",[]],["text/41-217",[]],["component/41-217",[]],["title/41-218",[1233,65.894]],["name/41-218",[]],["text/41-218",[]],["component/41-218",[]],["title/41-219",[462,34.249,1126,47.838,2521,60.788]],["name/41-219",[]],["text/41-219",[]],["component/41-219",[]],["title/41-220",[617,31.126,854,31.778,1193,14.513,1238,15.3,1384,24.408]],["name/41-220",[]],["text/41-220",[]],["component/41-220",[]],["title/41-221",[76,38.257,286,37.282,462,30.122,2522,46.035]],["name/41-221",[]],["text/41-221",[]],["component/41-221",[]],["title/41-222",[22,37.272,653,44.236]],["name/41-222",[]],["text/41-222",[]],["component/41-222",[]],["title/41-223",[276,33.575,479,34.876,696,31.44,1215,39.354]],["name/41-223",[]],["text/41-223",[]],["component/41-223",[]],["title/41-224",[160,35.607,696,31.44,722,38.257,1229,38.257]],["name/41-224",[]],["text/41-224",[]],["component/41-224",[]],["title/41-225",[423,39.354,543,36.405,1062,42.073,2523,48.985]],["name/41-225",[]],["text/41-225",[]],["component/41-225",[]],["title/41-226",[462,26.883,1193,14.513,1238,15.3,1384,24.408,1894,35.122]],["name/41-226",[]],["text/41-226",[]],["component/41-226",[]],["title/41-227",[885,30.524,1193,14.513,1238,15.3,1384,24.408,1894,35.122]],["name/41-227",[]],["text/41-227",[]],["component/41-227",[]],["title/41-228",[43,30.532,607,45.062]],["name/41-228",[]],["text/41-228",[]],["component/41-228",[]],["title/41-229",[1211,46.173,1238,19.493,1404,40.486]],["name/41-229",[]],["text/41-229",[]],["component/41-229",[]],["title/41-230",[67,29.965,462,26.883,1894,35.122,2518,41.085,2524,43.717]],["name/41-230",[]],["text/41-230",[]],["component/41-230",[]],["title/41-231",[36,33.575,349,25.977,1193,16.262,1384,27.349]],["name/41-231",[]],["text/41-231",[]],["component/41-231",[]],["title/41-232",[1183,39.354,1193,16.262,1384,27.349,2507,42.073]],["name/41-232",[]],["text/41-232",[]],["component/41-232",[]],["title/41-233",[349,23.183,617,31.126,1165,20.049,1193,14.513,1384,24.408]],["name/41-233",[]],["text/41-233",[]],["component/41-233",[]],["title/41-234",[1165,25.543,1193,18.49,1360,52.343]],["name/41-234",[]],["text/41-234",[]],["component/41-234",[]],["title/41-235",[1113,30.443,1238,19.493,1261,40.486]],["name/41-235",[]],["text/41-235",[]],["component/41-235",[]],["title/41-236",[1185,38.148]],["name/41-236",[]],["text/41-236",[]],["component/41-236",[]],["title/41-237",[380,32.948,1251,44.746,1273,47.838]],["name/41-237",[]],["text/41-237",[]],["component/41-237",[]],["title/41-238",[102,29.443,1193,14.513,1219,33.273,1384,24.408,2507,37.549]],["name/41-238",[]],["text/41-238",[]],["component/41-238",[]],["title/41-239",[36,38.176,349,29.536,543,41.393]],["name/41-239",[]],["text/41-239",[]],["component/41-239",[]],["title/41-240",[418,40.609,1242,40.609,1254,35.607,1471,46.035]],["name/41-240",[]],["text/41-240",[]],["component/41-240",[]],["title/41-241",[276,29.965,479,31.126,637,37.549,963,39.118,1238,15.3]],["name/41-241",[]],["text/41-241",[]],["component/41-241",[]],["title/41-242",[78,19.052,1193,14.513,1254,31.778,1384,24.408,1618,39.118]],["name/41-242",[]],["text/41-242",[]],["component/41-242",[]],["title/41-243",[22,20.778,43,17.021,417,26.739,1165,16.5,1193,18.48,1238,12.592]],["name/41-243",[]],["text/41-243",[]],["component/41-243",[]],["title/41-244",[22,32.165,885,38.888,1238,19.493]],["name/41-244",[]],["text/41-244",[]],["component/41-244",[]],["title/41-245",[885,53.566]],["name/41-245",[]],["text/41-245",[]],["component/41-245",[]],["title/41-246",[569,63.601]],["name/41-246",[]],["text/41-246",[]],["component/41-246",[]],["title/41-247",[43,20.682,462,26.883,1185,21.738,1238,22.573]],["name/41-247",[]],["text/41-247",[]],["component/41-247",[]],["title/41-248",[1185,27.695,1190,34.724,1238,19.493]],["name/41-248",[]],["text/41-248",[]],["component/41-248",[]],["title/41-249",[54,41.393,375,34.249,866,42.39]],["name/41-249",[]],["text/41-249",[]],["component/41-249",[]],["title/41-250",[375,39.687,1238,22.587]],["name/41-250",[]],["text/41-250",[]],["component/41-250",[]],["title/41",[78,28.126,1193,21.426]],["name/41",[361,0.76]],["text/41",[1,0.041,2,0.042,5,0.12,7,0.034,8,0.89,13,1.446,18,0.555,20,0.619,22,2.185,23,0.203,24,1.288,25,0.249,26,0.778,27,0.244,28,0.209,29,0.274,30,0.236,31,0.658,32,0.163,33,0.053,35,0.196,36,1.345,37,3.223,38,0.044,40,0.278,41,0.047,42,1.392,43,3.351,44,0.053,46,0.05,48,0.135,49,0.631,50,1.354,51,0.05,53,0.209,54,1.458,55,1.307,56,0.045,57,2.074,58,0.577,59,0.833,60,1.168,62,0.196,63,0.05,65,0.791,67,0.966,70,0.05,71,0.561,72,0.244,73,0.278,74,0.848,75,0.047,76,1.26,78,2.236,80,0.555,81,1.81,82,1.565,83,0.05,84,0.485,85,0.825,86,0.179,87,0.462,91,0.631,92,0.775,93,0.179,95,0.123,96,0.08,100,0.327,101,0.711,102,1.396,103,0.135,104,0.209,107,0.267,108,0.126,109,0.087,111,0.89,113,0.094,114,0.37,115,0.274,116,0.037,117,0.239,119,0.047,121,0.563,122,0.257,123,0.761,132,0.094,134,1.565,135,0.231,136,0.05,138,0.045,142,0.409,144,0.244,145,0.424,149,0.34,152,1.264,154,0.898,156,3.748,157,2.961,158,0.276,159,0.775,160,0.677,161,0.916,162,0.825,164,0.946,165,1.564,172,0.292,173,0.543,174,0.257,177,0.395,184,0.538,185,0.287,193,0.437,195,0.473,197,0.315,200,0.534,201,0.547,202,0.087,203,0.042,205,0.085,207,0.126,208,0.045,209,0.076,210,0.138,211,0.397,212,0.37,213,0.05,214,0.126,215,0.168,217,0.209,218,0.08,219,0.209,220,0.082,223,0.512,224,0.298,225,0.693,228,0.159,231,0.315,232,0.187,233,0.085,234,0.087,235,0.045,236,0.435,246,0.209,248,0.221,252,1.348,253,1.042,256,0.173,258,0.114,259,0.047,261,0.189,262,0.499,267,0.123,268,1.21,269,0.424,275,0.042,276,2.358,278,0.631,279,0.759,282,0.044,285,2,286,1.407,289,0.09,291,0.969,292,0.094,299,0.085,301,0.359,302,0.082,306,0.378,307,0.563,308,0.085,309,0.168,310,0.209,314,0.423,315,0.775,316,0.213,318,0.397,321,0.09,323,0.143,324,0.094,325,0.094,326,0.069,329,0.126,330,1.534,331,0.267,332,1.21,333,1.035,335,1.169,336,0.053,337,2.063,341,0.042,342,0.038,345,0.387,347,1.507,348,1.858,349,3.835,350,0.821,359,0.232,371,0.053,372,0.92,375,2.064,377,0.09,379,0.09,380,0.834,382,0.677,383,0.05,384,0.52,388,0.04,390,0.601,394,0.047,406,0.37,414,0.047,415,0.085,416,2.908,417,0.89,418,1.338,419,0.037,420,0.179,422,0.09,423,0.126,425,0.352,429,1.148,430,1.777,434,0.187,436,0.533,438,0.099,440,0.369,441,0.585,442,0.411,444,0.911,445,0.187,449,0.094,452,0.267,453,1.818,454,0.053,456,0.257,457,0.209,459,0.232,460,0.094,462,2.677,463,0.502,464,1.009,465,0.369,466,0.141,467,0.126,468,0.05,471,0.244,475,0.135,477,0.082,479,1.12,480,0.044,482,0.31,483,0.386,484,1.983,485,0.323,487,0.232,488,1.071,489,0.249,490,0.123,491,1.855,492,0.711,493,0.857,495,0.187,497,1.345,498,0.292,501,0.489,502,0.034,503,0.32,504,0.203,507,2.327,508,0.203,509,0.05,511,0.152,516,0.658,521,0.274,525,0.164,528,0.44,536,1.48,543,0.954,545,0.232,546,0.042,548,0.045,549,0.159,567,0.3,568,0.584,569,0.173,570,0.266,571,0.047,572,0.141,573,0.369,574,1.229,575,0.168,576,0.13,578,0.187,579,0.148,580,0.123,581,0.242,582,0.045,583,0.126,584,0.31,585,0.763,587,0.108,588,0.045,590,0.448,591,0.123,592,0.187,593,0.047,598,0.135,599,0.173,607,0.555,608,0.045,609,0.047,610,0.389,611,0.173,613,0.082,615,0.577,616,0.268,617,2.835,619,1.21,621,0.045,623,0.045,624,0.047,628,0.773,629,1.065,630,0.053,631,1.692,632,0.099,634,0.455,635,0.13,636,0.042,637,1.139,638,0.09,643,0.094,648,0.09,649,0.902,650,0.087,651,0.047,652,1.041,653,1.824,655,0.619,656,0.479,658,0.135,660,0.232,662,0.323,664,0.395,666,0.135,667,0.13,668,0.209,669,1.507,673,0.047,675,0.047,676,0.773,677,0.141,678,0.209,684,0.405,686,0.901,688,0.179,691,0.215,693,0.223,694,2.057,696,0.48,697,0.126,698,0.087,702,0.196,704,0.087,705,0.047,710,0.64,714,0.242,715,0.249,717,0.215,720,0.369,722,0.282,723,0.105,725,0.457,726,0.047,727,0.123,728,0.244,739,0.187,743,0.179,744,0.05,745,0.05,748,0.242,752,0.041,756,0.117,757,0.087,768,0.085,769,0.395,771,0.094,785,0.094,795,0.148,796,0.35,805,0.087,811,0.179,813,0.053,825,0.236,826,0.727,827,0.455,829,0.31,830,0.135,831,0.339,832,0.047,840,2.099,852,0.278,854,0.87,855,0.13,856,0.047,857,0.215,858,0.33,866,1.55,867,0.33,869,0.099,874,0.312,875,0.749,884,0.045,885,0.423,893,0.179,900,0.232,903,0.215,904,0.187,909,0.099,911,0.094,914,0.053,915,0.053,916,0.053,917,0.053,919,0.09,920,0.09,922,0.053,923,0.045,924,0.05,929,0.173,932,0.053,937,0.486,946,0.381,948,0.044,955,0.278,957,0.042,958,0.05,959,0.173,961,1.109,963,0.793,966,0.547,967,0.752,968,0.267,971,1.658,972,0.148,975,0.299,982,0.386,983,0.8,987,0.209,989,0.05,990,0.532,992,1.811,994,0.05,996,0.299,999,0.499,1000,0.41,1001,0.773,1002,0.135,1004,1.134,1005,0.099,1006,0.367,1016,0.173,1017,0.148,1019,0.099,1020,1.448,1021,0.232,1022,0.561,1023,0.31,1024,0.045,1025,0.299,1026,0.278,1030,0.232,1031,0.926,1034,0.278,1036,0.05,1038,0.232,1039,0.094,1043,0.099,1054,0.34,1059,1.071,1062,0.682,1064,0.292,1067,0.105,1072,0.232,1074,0.168,1084,0.05,1086,0.215,1087,0.411,1088,0.916,1093,0.644,1095,0.141,1097,0.223,1098,0.411,1100,0.135,1102,1,1106,0.299,1111,0.099,1113,3.447,1116,0.196,1120,0.486,1121,0.05,1122,0.047,1124,0.053,1125,0.09,1126,0.09,1127,0.602,1128,0.087,1129,0.323,1130,0.712,1131,0.292,1133,0.292,1139,0.09,1141,0.292,1143,0.744,1144,0.839,1146,0.099,1147,0.367,1149,0.05,1150,1.031,1153,0.05,1154,0.367,1159,0.187,1162,0.047,1164,0.794,1165,3.56,1166,0.05,1167,0.141,1168,0.254,1169,2.12,1171,0.569,1172,0.05,1173,0.05,1174,0.395,1177,0.148,1178,1.261,1181,0.839,1183,0.821,1184,0.099,1185,2.323,1186,0.08,1188,0.138,1190,3.255,1191,0.693,1192,0.32,1193,3.175,1194,0.323,1197,0.05,1198,0.411,1199,2.182,1200,2.011,1201,0.409,1202,0.045,1203,0.64,1204,0.51,1205,0.09,1206,0.395,1207,0.047,1209,0.13,1210,1.399,1211,0.62,1212,0.378,1213,0.352,1215,0.168,1217,0.087,1218,0.249,1219,1.848,1221,0.631,1222,0.05,1223,0.187,1224,0.12,1226,0.267,1227,0.05,1228,0.223,1229,0.435,1230,0.31,1233,0.437,1238,3.49,1240,0.196,1242,0.773,1243,0.437,1244,0.05,1245,0.232,1246,0.499,1248,0.099,1250,0.094,1251,1.485,1252,0.499,1253,0.409,1254,1.887,1255,0.577,1256,0.52,1259,1.109,1260,0.432,1261,2.75,1262,0.141,1263,0.05,1264,0.323,1265,0.323,1266,0.05,1267,2.203,1268,0.042,1269,0.627,1271,0.874,1273,0.722,1274,0.148,1275,0.05,1276,0.386,1279,0.918,1281,0.05,1283,0.479,1284,2.233,1285,0.542,1286,0.561,1287,0.099,1289,0.422,1293,0.874,1295,0.168,1297,0.31,1298,0.244,1299,0.278,1301,0.148,1306,0.05,1308,0.141,1309,0.432,1314,0.094,1317,0.05,1318,0.232,1319,0.542,1322,0.866,1323,0.09,1324,0.752,1327,0.099,1328,0.094,1329,0.05,1333,0.099,1334,2.026,1336,0.196,1355,1.724,1356,0.05,1357,2.45,1358,0.053,1359,0.993,1360,0.244,1364,0.053,1366,0.05,1372,0.395,1376,0.569,1380,0.099,1384,4.464,1385,0.187,1386,0.168,1387,0.053,1390,1.261,1391,0.81,1392,0.411,1393,0.126,1394,0.09,1395,0.094,1400,0.901,1403,0.839,1404,1.371,1405,0.099,1406,0.135,1407,0.81,1409,0.148,1410,0.148,1411,0.761,1412,0.05,1415,0.05,1416,0.196,1419,0.053,1421,0.135,1423,0.044,1424,0.278,1432,0.157,1434,0.232,1437,0.099,1443,0.094,1444,0.05,1450,0.105,1452,0.05,1457,0.232,1459,0.209,1466,0.05,1467,0.094,1468,0.099,1470,0.352,1471,1.085,1472,0.099,1473,0.094,1476,0.46,1479,0.179,1481,0.196,1483,0.339,1486,1.228,1487,0.053,1488,0.053,1490,0.141,1491,0.196,1492,0.148,1493,0.053,1494,0.047,1495,0.053,1498,0.209,1500,0.05,1502,0.209,1503,0.244,1507,0.148,1509,0.099,1510,0.148,1512,0.053,1513,0.292,1516,1.585,1518,0.422,1519,0.196,1521,0.148,1525,0.053,1534,0.053,1535,0.411,1536,0.053,1541,1.187,1547,0.141,1548,0.187,1551,0.053,1553,0.278,1560,0.053,1562,0.053,1563,0.099,1564,0.244,1566,0.502,1567,0.045,1568,0.135,1572,0.05,1573,0.542,1579,0.602,1581,0.196,1587,0.135,1588,0.602,1589,0.148,1602,1.139,1603,0.658,1617,1.383,1618,0.711,1625,0.05,1631,0.323,1635,0.141,1637,0.05,1638,0.395,1648,0.215,1666,0.148,1668,0.05,1686,0.179,1688,0.141,1691,0.094,1692,1.264,1694,0.542,1695,0.053,1696,0.075,1700,0.244,1701,2.314,1702,2.382,1703,0.047,1704,1.554,1705,3.551,1706,0.409,1707,1.348,1708,1.065,1709,0.187,1710,0.141,1711,0.411,1712,1.033,1713,0.409,1714,0.232,1715,1.522,1716,2.836,1717,1.023,1718,0.711,1719,1.264,1720,1.033,1721,1.296,1722,1.522,1723,0.323,1724,1.839,1725,0.299,1726,0.422,1727,0.232,1728,0.502,1729,0.839,1730,0.323,1731,0.397,1732,2.785,1733,0.411,1734,0.411,1735,0.675,1736,1.576,1737,0.658,1738,0.323,1739,0.187,1740,0.397,1741,0.187,1745,0.047,1746,0.367,1747,0.203,1748,0.141,1749,0.914,1750,0.179,1751,0.267,1752,0.746,1754,0.094,1755,0.196,1756,0.094,1757,0.585,1758,0.557,1759,0.244,1760,0.105,1761,0.157,1762,0.053,1763,0.26,1764,0.105,1765,0.209,1766,0.105,1767,0.047,1768,0.994,1769,0.105,1770,0.323,1771,0.79,1772,0.209,1773,0.209,1774,0.105,1775,0.157,1776,0.105,1777,0.099,1778,0.053,1779,0.105,1780,0.209,1781,0.157,1782,0.053,1783,0.105,1784,0.099,1785,0.918,1786,0.105,1787,0.099,1788,0.31,1789,0.244,1790,0.105,1791,0.105,1792,0.105,1793,0.105,1794,0.157,1795,0.053,1796,0.053,1797,0.053,1798,0.157,1799,0.053,1800,0.157,1801,0.053,1802,0.157,1803,0.209,1804,0.105,1805,0.053,1806,0.053,1807,0.209,1808,0.053,1809,0.053,1810,0.053,1811,0.053,1812,0.053,1813,0.292,1814,0.105,1815,0.105,1816,0.232,1817,0.157,1818,0.105,1819,0.105,1820,0.323,1821,1.043,1822,0.105,1823,0.053,1824,0.386,1825,0.053,1826,0.053,1827,0.053,1828,0.053,1829,0.05,1830,0.569,1831,0.209,1832,0.96,1833,0.361,1834,0.542,1835,0.053,1836,0.569,1837,0.31,1838,0.053,1839,0.105,1840,0.209,1841,0.05,1842,0.157,1843,0.46,1844,0.292,1845,0.157,1846,0.105,1847,0.105,1848,0.524,1849,0.524,1850,0.053,1851,0.105,1852,0.05,1853,0.053,1854,0.053,1855,0.105,1856,0.094,1857,0.053,1858,0.053,1859,0.099,1860,0.053,1861,0.05,1862,0.05,1863,0.053,1864,0.053,1865,0.053,1866,0.05,1867,0.05,1868,0.053,1869,0.05,1870,0.05,1871,0.053,1872,0.053,1873,0.053,1874,0.053,1875,0.053,1876,0.105,1877,0.361,1878,0.31,1879,0.41,1880,0.105,1881,0.105,1882,0.105,1883,0.053,1884,0.053,1885,0.752,1886,0.157,1887,0.244,1888,0.05,1889,0.05,1890,0.105,1891,0.141,1892,0.209,1893,0.509,1894,1.753,1895,0.209,1896,0.105,1897,0.053,1898,0.209,1899,0.105,1900,0.053,1901,0.157,1902,0.053,1903,0.053,1904,0.053,1905,0.41,1906,0.339,1907,0.386,1908,0.157,1909,0.053,1910,0.053,1911,0.053,1912,0.053,1913,0.196,1914,0.099,1915,0.703,1916,0.141,1917,0.386,1918,0.053,1919,0.148,1920,0.478,1921,0.148,1922,0.053,1923,0.292,1924,0.053,1925,0.053,1926,0.105,1927,0.157,1928,0.157,1929,0.196,1930,0.157,1931,0.367,1932,0.569,1933,0.386,1934,0.053,1935,0.105,1936,0.05,1937,0.157,1938,0.41,1939,0.053,1940,0.105,1941,0.053,1942,0.105,1943,0.053,1944,0.105,1945,0.053,1946,0.053,1947,0.099,1948,0.26,1949,0.053,1950,0.157,1951,0.053,1952,0.053,1953,0.053,1954,0.148,1955,0.053,1956,0.386,1957,0.605,1958,0.41,1959,0.41,1960,0.209,1961,0.053,1962,0.053,1963,0.099,1964,0.053,1965,0.105,1966,0.053,1967,0.053,1968,0.148,1969,0.157,1970,0.105,1971,0.105,1972,0.105,1973,0.157,1974,0.053,1975,0.053,1976,0.099,1977,0.157,1978,0.105,1979,0.209,1980,0.053,1981,0.105,1982,0.053,1983,0.053,1984,0.105,1985,0.053,1986,0.053,1987,0.26,1988,0.053,1989,0.209,1990,0.053,1991,0.053,1992,0.209,1993,0.045,1994,0.053,1995,0.053,1996,0.053,1997,0.232,1998,0.209,1999,0.46,2000,0.105,2001,0.053,2002,0.053,2003,0.05,2004,0.053,2005,0.047,2006,0.105,2007,0.099,2008,0.053,2009,0.053,2010,0.053,2011,0.105,2012,0.053,2013,0.26,2014,0.157,2015,0.053,2016,0.053,2017,0.053,2018,0.05,2019,0.053,2020,0.557,2021,0.209,2022,0.105,2023,0.053,2024,0.053,2025,0.105,2026,0.053,2027,0.053,2028,0.053,2029,0.053,2030,0.053,2031,0.31,2032,0.209,2033,0.209,2034,0.157,2035,0.105,2036,0.053,2037,0.105,2038,0.157,2039,0.658,2040,0.209,2041,0.053,2042,0.157,2043,0.41,2044,0.148,2045,0.053,2046,0.157,2047,0.053,2048,0.053,2049,0.053,2050,0.209,2051,0.053,2052,0.053,2053,0.053,2054,0.053,2055,0.053,2056,0.053,2057,0.053,2058,0.053,2059,0.053,2060,0.157,2061,0.105,2062,0.105,2063,0.053,2064,0.053,2065,0.053,2066,0.105,2067,0.105,2068,0.047,2069,0.41,2070,0.053,2071,0.31,2072,0.053,2073,0.053,2074,0.232,2075,0.157,2076,0.105,2077,0.047,2078,0.053,2079,0.26,2080,0.053,2081,0.053,2082,0.053,2083,0.26,2084,0.053,2085,0.209,2086,0.105,2087,0.053,2088,0.053,2089,0.157,2090,0.047,2091,0.053,2092,0.053,2093,0.105,2094,0.053,2095,0.09,2096,0.053,2097,0.105,2098,0.053,2099,0.105,2100,0.099,2101,0.053,2102,0.05,2103,0.299,2104,0.105,2105,0.187,2106,0.053,2107,0.105,2108,0.209,2109,0.157,2110,0.26,2111,0.209,2112,0.047,2113,0.41,2114,0.148,2115,0.84,2116,0.157,2117,0.099,2118,0.105,2119,0.148,2120,0.053,2121,0.053,2122,0.05,2123,0.105,2124,0.244,2125,0.105,2126,0.053,2127,0.209,2128,0.053,2129,0.053,2130,0.244,2131,0.053,2132,0.053,2133,0.135,2134,0.105,2135,0.053,2136,0.053,2137,0.05,2138,0.105,2139,0.053,2140,0.053,2141,0.105,2142,0.105,2143,0.105,2144,0.26,2145,0.105,2146,0.105,2147,0.148,2148,0.053,2149,0.105,2150,0.053,2151,0.053,2152,0.053,2153,0.053,2154,0.105,2155,0.209,2156,0.053,2157,0.053,2158,0.148,2159,0.053,2160,0.105,2161,0.053,2162,0.157,2163,0.053,2164,0.099,2165,0.053,2166,0.053,2167,0.053,2168,0.053,2169,0.099,2170,0.053,2171,0.053,2172,0.209,2173,0.05,2174,0.053,2175,0.105,2176,0.105,2177,0.26,2178,0.339,2179,0.053,2180,0.05,2181,0.053,2182,0.053,2183,0.105,2184,0.26,2185,0.105,2186,0.209,2187,0.05,2188,0.053,2189,0.053,2190,0.187,2191,0.053,2192,0.053,2193,0.157,2194,0.053,2195,0.053,2196,0.053,2197,0.053,2198,0.105,2199,0.053,2200,0.105,2201,0.157,2202,0.053,2203,0.053,2204,0.053,2205,0.053,2206,0.053,2207,0.053,2208,0.105,2209,0.105,2210,0.053,2211,0.524,2212,0.053,2213,0.047,2214,0.157,2215,0.053,2216,0.087,2217,0.053,2218,0.053,2225,0.386,2227,0.047,2228,0.157,2229,0.053,2233,0.339,2234,0.053,2236,0.053,2239,0.26,2240,0.148,2245,0.05,2247,0.053,2250,0.099,2251,0.105,2254,0.105,2255,0.105,2256,0.105,2258,0.094,2259,0.209,2266,0.053,2268,0.053,2270,0.099,2275,0.053,2276,0.105,2284,0.157,2286,0.05,2289,0.105,2290,0.053,2293,0.05,2294,0.053,2295,0.053,2297,0.105,2353,0.05,2355,0.099,2356,0.105,2365,0.053,2368,0.099,2369,0.232,2372,0.157,2373,0.157,2375,0.053,2380,0.053,2386,0.361,2391,0.053,2395,0.053,2433,0.053,2480,0.053,2503,0.524,2504,0.105,2505,0.105,2506,0.105,2507,1.996,2508,1.325,2509,0.053,2510,0.053,2511,0.053,2512,0.157,2514,0.105,2515,1.175,2516,0.105,2517,0.157,2518,0.05,2519,0.605,2520,0.141,2522,0.292,2523,0.105,2524,0.31,2525,0.172,2526,0.115,2527,0.228,2528,0.09,2529,0.502,2530,0.172,2531,0.058,2532,0.058,2533,0.058,2534,0.058,2535,0.172,2536,0.058,2537,0.047,2538,0.115,2539,0.058,2540,0.172,2541,0.115,2542,0.115,2543,0.115,2544,0.058,2545,0.058,2546,0.058,2547,0.058,2548,0.115,2549,0.115,2550,0.196,2551,0.058,2552,0.058,2553,0.058,2554,0.058,2555,0.172,2556,0.058,2557,0.115,2558,0.058,2559,0.058,2560,0.058,2561,0.172,2562,0.058,2563,0.115,2564,0.058,2565,0.058,2566,0.058,2567,0.058,2568,0.058,2569,0.058,2570,0.058,2571,0.115,2572,0.058,2573,0.058,2574,0.058,2575,0.058,2576,0.053,2577,0.058,2578,0.058,2579,0.058,2580,0.115,2581,0.115,2582,0.058,2583,0.115,2584,0.058,2585,0.058,2586,0.058,2587,0.053,2588,0.058,2589,0.115,2590,0.115,2591,0.115,2592,0.058,2593,0.172,2594,0.115,2595,0.115,2596,0.053,2597,0.172,2598,0.115,2599,0.058,2600,0.058,2601,0.058,2602,0.115,2603,0.058,2604,0.058,2605,0.115,2606,0.058,2607,0.502,2608,0.058,2609,0.115,2610,0.058,2611,0.394,2612,0.115,2613,0.058,2614,0.058,2615,0.058,2616,0.058,2617,0.058,2618,0.058,2619,0.058,2620,0.058,2621,0.283,2622,0.058,2623,0.058,2624,0.228,2625,0.228,2626,0.555,2627,0.172,2628,0.115,2629,0.058,2630,0.058,2631,0.058,2632,0.555,2633,0.115,2634,0.228,2635,0.058,2636,0.058,2637,0.105,2638,0.228,2639,0.058,2640,0.058,2641,0.058,2642,0.283,2643,0.058,2644,0.058,2645,0.058,2646,0.172,2647,0.31,2648,0.608,2649,0.115,2650,0.172,2651,0.058,2652,1.066,2653,0.058,2654,0.228,2655,0.058,2656,0.058,2657,0.115,2658,0.058,2659,0.058,2660,0.058,2661,0.115,2662,0.115,2663,0.283,2664,0.058,2665,0.058,2666,0.115,2667,0.172,2668,0.115,2669,0.058,2670,0.053,2671,0.058,2672,0.058,2673,0.058,2674,0.058,2675,0.058,2676,0.058,2677,0.058,2678,0.058,2679,0.058,2680,0.058,2681,0.115,2682,0.058,2683,0.058,2684,0.058,2685,0.26,2686,0.058,2687,0.058,2688,0.058,2689,0.058,2690,0.058,2691,0.058,2692,0.058,2693,0.058,2694,0.058,2695,0.058,2696,0.058,2697,0.058,2698,0.058,2699,0.053,2700,0.058,2701,0.105,2702,0.058,2703,0.115,2704,0.053,2705,0.058,2706,0.058,2707,0.058,2708,0.058,2709,0.058,2710,0.058,2711,0.058,2712,0.053,2713,0.058,2714,0.172,2715,0.058,2716,0.058,2717,0.058,2718,0.058,2719,0.115,2720,0.058,2721,0.115,2722,0.058,2723,0.058,2724,0.058,2725,0.058,2726,0.058,2727,0.058,2728,0.115,2729,0.058,2730,0.058,2731,0.058,2732,0.058,2733,0.058,2734,0.058,2735,0.228,2736,0.058,2737,0.058,2738,0.115,2739,0.058,2740,0.058,2741,0.115,2742,0.115,2743,0.228,2744,0.115,2745,0.115,2746,0.058,2747,0.058,2748,0.058,2749,0.058,2750,0.283,2751,0.05,2752,0.058,2753,0.058,2754,0.115,2755,0.058,2756,0.058,2757,0.058,2758,0.058,2759,0.058,2760,0.058,2761,0.058,2762,0.058,2763,0.058,2764,0.058,2765,0.058,2766,0.058,2767,0.115,2768,0.105,2769,0.115,2770,0.058,2771,0.058,2772,0.058,2773,0.115,2774,0.058,2775,0.053,2776,0.058,2777,0.058,2778,0.115,2779,0.502,2780,0.172,2781,0.172,2782,0.228,2783,0.172,2784,0.115,2785,0.058,2786,0.115,2787,0.058,2788,0.058,2789,0.115,2790,0.058,2791,0.115,2792,0.115,2793,0.058,2794,0.053,2795,0.058,2796,0.058,2797,0.058,2798,0.058,2799,0.058,2800,0.058,2801,0.058,2802,0.058,2803,0.058,2804,0.058,2805,0.228,2806,0.058,2807,0.228,2808,0.058,2809,0.058,2810,0.058,2811,0.058,2812,0.058,2813,0.058,2814,0.058,2815,0.058,2816,0.058,2817,0.058,2818,0.058,2819,0.115,2820,0.115,2821,0.283,2822,0.115,2823,0.058,2824,0.058,2825,0.115,2826,0.058,2827,0.058,2828,0.058,2829,0.228,2830,0.058,2831,0.228,2832,0.228,2833,0.058,2834,0.058,2835,0.058,2836,0.115,2837,0.058,2838,0.058,2839,0.058,2840,0.058,2841,0.058,2842,0.058,2843,0.058,2844,0.058,2845,0.058,2846,0.058,2847,0.058,2848,0.115,2849,0.339,2850,0.058,2851,0.115,2852,0.058,2853,0.058,2854,0.115,2855,0.058,2856,0.058,2857,0.058,2858,0.058,2859,0.058,2860,0.172,2861,0.058,2862,0.172,2863,0.058,2864,0.058,2865,0.058,2866,0.058,2867,0.058,2868,0.058,2869,0.053,2870,0.058,2871,0.058,2872,0.058,2873,0.058,2874,0.058,2875,0.115,2876,0.058,2877,0.058,2878,0.058,2879,0.058,2880,0.058,2881,0.058,2882,0.058,2883,0.115,2884,0.058,2885,0.058,2886,0.058,2887,0.058,2888,0.058,2889,0.058,2890,0.115,2891,0.058,2892,0.058,2893,0.058,2894,0.058,2895,0.058,2896,0.058,2897,0.115,2898,0.053,2899,0.058,2900,0.058,2901,0.115,2902,0.608,2903,0.058,2904,0.058,2905,0.058,2906,0.058,2907,0.058,2908,0.058,2909,0.058,2910,0.058,2911,0.058,2912,0.058,2913,0.058,2914,0.115,2915,0.058,2916,0.058,2917,0.058,2918,0.058,2919,0.058,2920,0.283,2921,0.053,2922,0.115,2923,0.058,2924,0.058,2925,0.058,2926,0.058,2927,0.058,2928,0.228,2929,0.058,2930,0.058,2931,0.058,2932,0.058,2933,0.115,2934,0.05,2935,0.058,2936,0.058,2937,0.058,2938,0.058,2939,0.058,2940,0.058,2941,0.058,2942,0.058,2943,0.058,2944,0.115,2945,0.058,2946,0.058,2947,0.058,2948,0.058,2949,0.115,2950,0.115,2951,0.058,2952,0.058,2953,0.058,2954,0.172,2955,0.058,2956,0.058,2957,0.058,2958,0.058,2959,0.283,2960,0.115,2961,0.058,2962,0.115,2963,0.172,2964,0.115,2965,0.115,2966,0.115,2967,0.115,2968,0.115,2969,0.058,2970,0.058,2971,0.058]],["component/41",[413,0.47]],["title/42",[48,55.433,2972,55.433]],["name/42",[48,0.878]],["text/42",[12,1.25,13,1.54,20,1.817,24,1.058,26,0.401,38,0.436,43,2.672,49,1.329,50,1.917,54,1.67,58,1.357,71,1.93,80,4.353,81,2.864,82,1.752,84,1.67,91,1.036,92,1.569,93,0.452,96,3.441,102,0.68,111,4.824,114,5.392,115,0.401,116,0.705,117,0.349,134,0.68,135,0.391,142,0.423,152,0.871,154,1.674,156,4.424,157,2.892,158,3.804,161,4.027,162,0.391,163,0.471,173,0.383,174,0.837,176,2.179,177,2.477,184,1.693,185,0.907,193,0.63,197,0.361,200,1.02,201,2.032,209,0.383,211,1.457,212,0.734,218,0.768,220,0.789,223,0.361,225,2.179,231,0.361,234,2.431,245,0.471,248,0.719,256,0.837,258,0.383,261,0.383,270,0.789,276,2.779,282,0.436,291,1.457,297,0.401,298,3.158,299,5.66,301,4.148,302,2.968,306,4.824,310,1.499,315,1.357,318,0.375,323,0.361,332,0.705,335,1.854,337,0.648,341,0.423,345,1.42,347,0.383,350,0.423,375,1.148,380,0.597,382,1.891,385,0.949,388,1.107,390,1.806,394,0.904,396,0.648,406,0.383,418,0.436,442,0.471,464,0.401,467,4.267,469,0.471,477,1.136,480,0.436,488,1.18,489,1.499,491,0.75,497,3.812,498,1.852,516,1.514,517,0.401,523,0.692,525,0.639,528,1.058,536,0.383,539,0.383,546,1.169,549,4.533,552,0.837,567,0.343,570,1.693,573,0.423,580,3.167,581,0.411,583,1.499,591,2.756,607,1.016,609,0.471,610,0.368,613,0.411,615,1.634,619,1.016,631,5.186,636,1.806,649,0.383,650,0.436,655,0.368,666,1.25,668,0.423,674,0.75,684,1.058,689,0.452,691,0.436,693,0.452,704,0.436,714,3.856,715,0.423,716,0.471,722,0.411,725,0.658,727,0.411,735,0.471,752,0.411,755,1.367,756,0.75,768,0.423,777,0.495,796,3.904,800,2.011,851,1.754,854,0.383,857,0.436,858,0.423,866,0.401,870,0.867,874,0.401,875,0.423,885,2.047,890,0.471,907,0.949,920,0.452,929,0.837,941,0.526,948,0.837,949,0.471,950,0.452,961,1.387,966,1.457,981,0.495,986,0.401,990,6.043,991,0.471,996,5.576,997,1.01,1007,0.526,1008,0.526,1020,2.262,1023,0.867,1024,0.452,1031,4.444,1042,2.755,1054,0.837,1069,0.495,1070,0.495,1071,2.112,1074,1.169,1088,0.452,1093,1.891,1097,0.452,1099,0.949,1109,0.495,1118,0.526,1120,6.093,1125,1.603,1139,2.518,1147,0.471,1150,3.053,1180,1.206,1203,0.401,1226,2.783,1229,0.411,1246,1.302,1259,0.391,1289,0.436,1333,0.495,1355,2.09,1359,0.436,1386,0.811,1400,0.411,1420,0.495,1421,1.93,1423,0.837,1518,2.157,1587,0.452,1590,3.317,1617,2.032,1648,0.837,1696,0.375,1735,6.581,1747,1.755,1770,0.904,1834,0.904,1891,0.904,1993,0.867,1997,2.011,2005,0.471,2068,1.67,2074,0.471,2077,0.471,2090,0.471,2095,3.264,2103,0.436,2112,0.471,2114,0.495,2133,2.783,2216,3.56,2355,0.495,2369,0.471,2520,0.471,2528,7.055,2537,1.302,2550,0.949,2587,1.01,2596,0.526,2670,0.526,2751,0.495,2934,4.036,2972,1.25,2973,5.777,2974,0.575,2975,0.526,2976,1.455,2977,0.526,2978,1.01,2979,0.526,2980,0.526,2981,0.526,2982,1.455,2983,2.247,2984,0.526,2985,7.051,2986,0.575,2987,0.495,2988,1.455,2989,1.01,2990,1.754,2991,0.526,2992,0.526,2993,1.01,2994,0.526,2995,0.526,2996,1.01,2997,0.526,2998,0.526,2999,2.602,3000,1.866,3001,0.526,3002,0.526,3003,0.526,3004,0.526,3005,0.526,3006,0.526,3007,1.455,3008,0.526,3009,1.01,3010,1.455,3011,1.01,3012,0.526,3013,1.866,3014,0.526,3015,0.526,3016,0.526,3017,0.526,3018,0.526,3019,0.526,3020,2.247,3021,0.526,3022,0.526,3023,0.526,3024,0.526,3025,1.455,3026,0.526,3027,1.01,3028,0.526,3029,0.526,3030,4.735,3031,0.526,3032,0.526,3033,0.526,3034,0.526,3035,0.526,3036,0.495,3037,0.526,3038,0.526,3039,1.01,3040,1.01,3041,0.526,3042,0.526,3043,0.575,3044,0.526,3045,0.526,3046,0.526,3047,0.526,3048,0.526,3049,0.526,3050,1.01,3051,0.526,3052,0.526,3053,0.526,3054,0.526,3055,0.526,3056,1.866,3057,1.01,3058,0.526,3059,0.526,3060,0.526,3061,0.526,3062,0.526,3063,4.067,3064,0.526,3065,0.526,3066,0.495,3067,2.602,3068,1.455,3069,0.575,3070,0.526,3071,0.526,3072,0.526,3073,1.01,3074,0.526,3075,5.597,3076,0.575,3077,0.526,3078,1.01,3079,0.575,3080,0.575,3081,0.526,3082,0.526,3083,0.526,3084,0.526,3085,0.526,3086,0.526,3087,0.526,3088,0.526,3089,0.526,3090,0.526,3091,0.526,3092,1.455,3093,0.526,3094,1.455,3095,1.102,3096,1.866,3097,0.526,3098,0.526,3099,0.526,3100,0.526,3101,0.526,3102,0.526,3103,1.866,3104,0.526,3105,0.575,3106,0.575,3107,0.575,3108,0.575,3109,0.575,3110,0.526,3111,1.01,3112,0.575,3113,0.526,3114,0.575,3115,0.526,3116,0.575,3117,0.575]],["component/42",[413,0.47]],["title/43-1",[252,42.39,299,44.746,996,46.173]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[26,42.39,306,41.393,2528,47.838]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[2095,65.894]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[689,55.433,2987,60.653]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43-5",[2985,60.653,3118,64.539]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["title/43-6",[116,38.888,375,34.249,1295,44.746]],["name/43-6",[]],["text/43-6",[]],["component/43-6",[]],["title/43-7",[154,43.798]],["name/43-7",[]],["text/43-7",[]],["component/43-7",[]],["title/43-8",[2528,65.894]],["name/43-8",[]],["text/43-8",[]],["component/43-8",[]],["title/43-9",[306,57.016]],["name/43-9",[]],["text/43-9",[]],["component/43-9",[]],["title/43-10",[302,59.917]],["name/43-10",[]],["text/43-10",[]],["component/43-10",[]],["title/43-11",[161,32.662,948,53.503]],["name/43-11",[]],["text/43-11",[]],["component/43-11",[]],["title/43-12",[714,50.405,2973,55.433]],["name/43-12",[]],["text/43-12",[]],["component/43-12",[]],["title/43-13",[3063,55.433,3066,60.653]],["name/43-13",[]],["text/43-13",[]],["component/43-13",[]],["title/43-14",[161,32.662,3063,55.433]],["name/43-14",[]],["text/43-14",[]],["component/43-14",[]],["title/43-15",[161,32.662,497,47.964]],["name/43-15",[]],["text/43-15",[]],["component/43-15",[]],["title/43-16",[380,38.178,3063,55.433]],["name/43-16",[]],["text/43-16",[]],["component/43-16",[]],["title/43-17",[1180,53.503,2973,55.433]],["name/43-17",[]],["text/43-17",[]],["component/43-17",[]],["title/43-18",[262,45.951,1180,53.503]],["name/43-18",[]],["text/43-18",[]],["component/43-18",[]],["title/43-19",[270,59.917]],["name/43-19",[]],["text/43-19",[]],["component/43-19",[]],["title/43-20",[114,40.486,306,41.393,990,35.223]],["name/43-20",[]],["text/43-20",[]],["component/43-20",[]],["title/43-21",[689,55.433,3119,64.539]],["name/43-21",[]],["text/43-21",[]],["component/43-21",[]],["title/43-22",[43,26.349,2973,47.838,2990,52.343]],["name/43-22",[]],["text/43-22",[]],["component/43-22",[]],["title/43-23",[2216,63.601]],["name/43-23",[]],["text/43-23",[]],["component/43-23",[]],["title/43-24",[161,32.662,3075,60.653]],["name/43-24",[]],["text/43-24",[]],["component/43-24",[]],["title/43-25",[161,32.662,345,49.12]],["name/43-25",[]],["text/43-25",[]],["component/43-25",[]],["title/43-26",[1735,58.39]],["name/43-26",[]],["text/43-26",[]],["component/43-26",[]],["title/43-27",[570,37.272,1735,49.12]],["name/43-27",[]],["text/43-27",[]],["component/43-27",[]],["title/43-28",[234,53.503,990,40.815]],["name/43-28",[]],["text/43-28",[]],["component/43-28",[]],["title/43-29",[885,45.062,2972,55.433]],["name/43-29",[]],["text/43-29",[]],["component/43-29",[]],["title/43",[990,40.815,2972,55.433]],["name/43",[3120,1.116]],["text/43",[13,1.233,19,0.475,20,1.256,24,1.018,25,0.78,28,0.406,32,0.395,42,0.406,43,2.684,49,1.281,50,2.47,54,1.869,57,0.706,58,2.282,71,2.16,80,5.994,81,2.456,82,1.911,84,1.041,91,0.691,92,0.978,95,0.395,96,2.807,102,0.654,107,0.329,111,6.667,114,5.972,115,0.385,116,0.978,117,0.643,122,0.419,134,0.654,135,0.375,142,0.406,152,2.359,154,2.511,156,4,157,0.943,158,1.461,161,3.775,163,0.869,171,0.367,173,2.062,176,2.927,177,2.721,184,0.561,185,0.873,200,0.276,201,2.673,208,0.434,209,0.367,211,0.758,212,0.367,218,1.066,220,0.395,223,0.346,225,3.851,228,0.385,229,0.475,230,0.475,231,0.346,234,3.058,245,0.452,248,0.691,252,0.739,253,0.353,256,1.161,258,0.367,261,0.367,262,0.36,268,0.353,276,3.015,291,1.405,297,0.385,298,3.3,299,5.473,301,5.761,302,3.076,303,0.452,306,5.661,310,2.963,315,1.308,323,0.346,326,0.633,332,0.353,333,0.395,335,1.794,337,0.324,341,0.406,345,2.389,375,1.334,380,0.574,382,2.062,385,1.691,388,0.385,394,2.539,396,0.623,452,0.834,462,0.311,464,0.385,467,4.163,469,0.452,477,1.094,480,0.419,488,1.372,489,2.522,490,0.395,497,2.543,516,1.694,521,0.385,523,0.665,525,0.614,539,0.367,548,0.834,549,3.661,552,0.805,567,1.414,568,0.395,570,0.809,573,0.406,576,0.419,580,2.673,581,0.758,583,0.406,586,0.475,591,3.757,600,1.161,610,0.353,611,0.419,613,1.405,616,0.375,619,0.678,631,3.005,636,0.78,650,0.419,655,0.678,666,0.834,674,0.375,684,0.706,686,0.758,687,0.434,689,3.383,691,1.161,692,0.452,704,0.419,714,5.321,716,0.452,722,0.395,725,0.329,727,0.395,740,0.475,752,0.395,755,3.924,756,0.375,777,0.475,796,1.914,800,1.61,851,0.912,854,0.706,866,0.385,874,0.385,875,1.743,885,2.389,890,0.869,907,0.912,920,0.434,921,0.475,929,0.805,948,1.161,949,0.452,950,0.434,961,0.375,966,1.405,981,0.475,990,4.098,991,0.452,992,0.78,996,6.811,1020,2.575,1023,0.834,1025,0.419,1031,4.066,1042,2.666,1054,0.419,1069,0.912,1070,0.475,1071,2.039,1074,0.406,1093,1.308,1097,0.834,1099,0.475,1109,0.912,1120,6.454,1125,1.863,1139,2.16,1150,1.445,1180,1.799,1203,1.066,1229,0.395,1295,0.406,1355,1.125,1359,0.419,1386,2.279,1400,0.758,1402,0.505,1420,0.475,1421,2.16,1423,0.805,1479,0.834,1509,0.475,1518,1.161,1590,2.363,1617,2.881,1648,2.085,1688,0.452,1696,0.691,1735,3.509,1747,1.694,1816,0.452,1888,0.475,1936,0.475,1993,0.834,1997,1.941,2005,0.452,2068,1.61,2074,0.452,2090,0.869,2095,2.437,2103,0.419,2105,0.452,2112,0.452,2133,1.545,2147,0.475,2190,0.452,2216,2.085,2240,0.475,2272,0.505,2360,0.505,2369,0.452,2447,0.971,2520,0.452,2528,7.245,2537,1.253,2550,1.316,2685,0.505,2751,0.475,2768,0.505,2934,3.466,2972,2.437,2973,3.383,2975,0.505,2976,1.401,2977,0.505,2978,0.971,2979,0.505,2980,0.505,2981,0.505,2982,0.971,2983,2.17,2984,0.505,2985,6.852,2987,0.912,2988,1.401,2989,0.971,2990,2.666,2991,0.505,2992,0.505,2993,0.971,2994,0.505,2995,0.505,2996,0.971,2997,0.505,2998,0.505,2999,1.401,3000,0.971,3001,0.505,3002,0.505,3003,0.505,3004,0.505,3005,0.505,3006,0.505,3007,0.505,3008,0.505,3009,1.401,3010,1.401,3011,0.971,3012,0.505,3013,1.799,3014,0.505,3015,0.505,3016,0.505,3017,0.505,3018,0.505,3019,0.505,3020,1.401,3021,1.401,3022,0.505,3023,0.505,3024,0.971,3025,0.971,3026,0.505,3027,0.971,3028,0.505,3029,0.971,3030,5.182,3031,0.505,3032,0.505,3033,0.505,3034,0.505,3035,0.505,3036,0.475,3037,1.401,3038,0.505,3039,0.505,3040,0.971,3041,0.505,3042,0.505,3044,0.505,3045,0.505,3046,0.505,3047,0.505,3048,0.505,3049,0.505,3050,1.401,3051,0.505,3052,1.401,3053,0.505,3054,0.505,3055,0.505,3056,2.17,3057,1.799,3058,0.505,3059,0.505,3060,0.505,3061,0.505,3062,0.505,3063,3.168,3064,0.505,3065,0.505,3066,2.039,3067,2.17,3068,0.505,3070,0.971,3071,0.505,3072,0.505,3073,0.971,3074,0.505,3075,4.7,3077,0.505,3078,0.505,3081,0.505,3082,0.505,3083,0.505,3084,0.505,3085,0.505,3086,0.505,3087,0.505,3088,0.505,3089,0.505,3090,0.505,3091,0.505,3092,1.401,3093,0.505,3094,1.401,3096,0.971,3097,0.505,3098,0.505,3099,0.505,3100,0.505,3101,0.505,3102,2.837,3103,0.505,3104,0.505,3110,1.401,3111,0.505,3113,0.505,3115,0.971,3118,0.971,3119,1.401,3121,0.551,3122,0.551,3123,1.529,3124,0.551,3125,0.551,3126,1.059,3127,0.551,3128,0.551,3129,0.551,3130,4.025,3131,0.551,3132,0.551,3133,0.551,3134,0.551,3135,1.059,3136,0.551,3137,0.551,3138,0.551,3139,0.551,3140,0.551,3141,1.059,3142,0.551,3143,0.551,3144,1.059,3145,1.059,3146,0.551,3147,0.551,3148,1.059,3149,0.551,3150,0.551,3151,1.059,3152,0.551,3153,0.551,3154,0.551,3155,1.059,3156,1.059,3157,0.551,3158,0.551,3159,0.551,3160,0.551,3161,0.551,3162,0.551,3163,0.551,3164,0.551,3165,0.551,3166,0.551,3167,1.529,3168,2.745,3169,0.551,3170,0.551,3171,0.551,3172,1.059,3173,1.059,3174,1.059]],["component/43",[413,0.47]],["title/44-1",[78,24.273,986,42.39,1696,39.655]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["title/44-2",[78,24.273,725,36.301,1386,44.746]],["name/44-2",[]],["text/44-2",[]],["component/44-2",[]],["title/44-3",[78,21.348,103,42.073,986,37.282,1696,34.876]],["name/44-3",[]],["text/44-3",[]],["component/44-3",[]],["title/44-4",[59,30.828,78,17.202,417,29.335,986,30.042,1696,28.103,3175,39.472]],["name/44-4",[]],["text/44-4",[]],["component/44-4",[]],["title/44-5",[78,19.052,986,33.273,1696,31.126,3176,41.085,3177,43.717]],["name/44-5",[]],["text/44-5",[]],["component/44-5",[]],["title/44-6",[78,19.052,986,33.273,1696,31.126,3176,41.085,3178,43.717]],["name/44-6",[]],["text/44-6",[]],["component/44-6",[]],["title/44-7",[326,42.064,2213,57.75]],["name/44-7",[]],["text/44-7",[]],["component/44-7",[]],["title/44-8",[78,24.273,725,36.301,1393,44.746]],["name/44-8",[]],["text/44-8",[]],["component/44-8",[]],["title/44-9",[1393,51.85,1407,53.503]],["name/44-9",[]],["text/44-9",[]],["component/44-9",[]],["title/44-10",[78,21.348,416,26.5,725,31.927,2227,43.832]],["name/44-10",[]],["text/44-10",[]],["component/44-10",[]],["title/44-11",[78,19.052,406,31.778,632,41.085,725,28.493,3179,43.717]],["name/44-11",[]],["text/44-11",[]],["component/44-11",[]],["title/44-12",[22,25.247,78,19.052,81,24.408,268,30.524,725,28.493]],["name/44-12",[]],["text/44-12",[]],["component/44-12",[]],["title/44-13",[22,25.247,78,19.052,268,30.524,430,31.126,725,28.493]],["name/44-13",[]],["text/44-13",[]],["component/44-13",[]],["title/44-14",[78,19.052,462,26.883,585,34.143,725,28.493,1398,41.085]],["name/44-14",[]],["text/44-14",[]],["component/44-14",[]],["title/44-15",[380,32.948,1404,40.486,3180,55.696]],["name/44-15",[]],["text/44-15",[]],["component/44-15",[]],["title/44",[60,46.173,78,24.273,1701,32.165]],["name/44",[361,0.76]],["text/44",[12,1.131,13,0.477,17,0.597,20,0.486,22,4.259,24,0.957,35,1.237,36,0.902,37,0.845,41,1.178,42,4.327,43,2.936,50,1.109,55,0.346,59,4.984,60,0.577,65,0.902,70,0.654,72,0.654,76,0.543,78,4.372,80,0.486,81,2.225,82,0.468,91,0.937,102,1.262,103,2.436,107,0.858,111,1.393,121,1.058,122,0.577,123,0.477,128,0.654,134,2.191,135,1.393,152,1.699,154,1.07,156,0.666,157,1.262,158,0.468,159,1.729,160,0.506,162,0.517,164,0.453,173,2.061,195,0.543,200,0.38,211,0.543,212,0.506,214,0.559,218,0.529,223,0.477,228,0.529,246,0.559,253,0.486,261,0.506,262,0.937,268,6.667,275,2.278,276,3.159,282,2.351,285,1.002,301,0.543,303,0.622,306,2.108,308,0.559,315,0.506,328,0.654,332,1.309,333,1.858,335,0.44,337,4.398,347,0.506,350,2.278,380,1.407,382,0.506,406,2.642,415,0.559,416,3.15,417,2.962,422,1.61,430,5.333,436,3.508,449,2.911,456,0.577,462,1.153,463,2.351,465,1.506,467,0.559,479,0.937,480,3.013,482,1.61,491,0.517,493,0.559,497,1.393,504,0.543,507,1.123,514,2.538,516,0.468,528,0.506,568,0.543,585,2.541,587,0.477,590,0.559,607,0.486,610,0.919,615,1.729,616,2.962,617,0.495,619,1.309,629,1.131,631,2.12,652,2.158,653,0.902,655,0.486,669,0.506,674,1.393,684,0.957,686,2.839,694,3.208,710,0.529,720,0.559,725,6.095,743,0.597,756,1.393,769,0.597,796,0.529,805,0.577,825,1.81,826,1.335,854,1.363,855,0.577,858,0.559,866,0.529,884,2.436,900,0.622,926,1.317,949,0.622,950,0.597,959,0.577,986,4.27,992,2.278,1001,0.577,1016,1.091,1027,0.696,1031,1.309,1034,0.622,1038,0.622,1043,0.654,1059,1.178,1065,1.317,1074,0.559,1086,1.091,1088,1.61,1093,1.729,1126,1.131,1128,0.577,1169,0.517,1174,0.597,1178,1.335,1181,0.597,1183,2.613,1202,0.597,1206,1.131,1213,2.043,1218,0.559,1219,2.476,1221,0.495,1223,0.622,1224,0.529,1228,0.597,1230,1.131,1233,1.131,1238,1.139,1241,0.696,1242,0.577,1243,0.597,1253,0.559,1255,1.729,1259,0.978,1261,3.552,1262,0.622,1263,0.654,1265,0.622,1271,3.567,1282,0.654,1284,4.124,1285,1.178,1289,0.577,1295,1.058,1297,1.131,1305,1.875,1308,0.622,1314,0.622,1322,0.919,1328,1.677,1334,0.597,1336,2.235,1355,2.613,1372,0.597,1386,2.613,1391,3.821,1392,0.622,1393,6.106,1394,3.122,1395,1.178,1397,1.875,1398,8.03,1403,0.597,1404,3.915,1407,3.573,1411,0.597,1416,1.762,1470,0.597,1486,0.529,1494,1.178,1507,1.237,1535,0.622,1541,1.285,1547,0.622,1567,0.597,1568,0.597,1573,1.178,1587,0.597,1638,1.61,1648,0.577,1692,1.506,1696,3.068,1701,3.477,1707,1.002,1715,3.034,1725,1.554,1735,0.529,1736,3.202,1747,0.543,1759,1.237,1767,0.622,1768,0.622,1770,2.911,1777,0.654,1784,0.654,1789,0.654,1820,1.178,1830,0.654,1834,1.178,1841,0.654,1852,0.654,1887,1.237,1906,0.654,1916,3.253,1921,0.654,1929,0.654,1931,0.622,1954,1.237,1956,2.665,1963,0.654,1968,0.654,2003,3.746,2018,0.654,2044,0.654,2100,0.654,2103,0.577,2164,0.654,2169,0.654,2213,0.622,2226,0.696,2227,4.124,2245,0.654,2248,3.635,2257,0.696,2258,3.856,2270,0.654,2273,0.696,2286,1.237,2296,0.696,2366,2.378,2368,0.654,2494,0.696,2522,1.237,2537,0.622,2576,0.696,2637,1.317,2647,0.696,2699,1.875,2701,0.696,2704,0.696,2712,0.696,2775,0.696,2794,0.696,2869,1.317,2898,0.696,2921,1.317,3036,1.237,3175,5.145,3176,2.235,3177,2.378,3178,1.875,3179,6.02,3180,3.253,3181,0.759,3182,0.759,3183,0.759,3184,1.437,3185,0.759,3186,0.759,3187,0.759,3188,0.759,3189,0.759,3190,0.759,3191,0.759,3192,1.437,3193,0.759,3194,0.759,3195,0.759,3196,3.967,3197,1.437,3198,0.759,3199,0.759,3200,0.759,3201,0.759,3202,0.759,3203,0.759,3204,0.759,3205,0.759,3206,2.046,3207,2.046,3208,0.759,3209,0.759,3210,1.437,3211,0.759,3212,0.759,3213,1.437,3214,0.759,3215,0.759,3216,0.759,3217,1.437,3218,0.759,3219,0.759,3220,0.759,3221,0.759,3222,0.759,3223,0.759,3224,0.759,3225,2.046,3226,0.759,3227,0.759,3228,2.046,3229,0.759,3230,0.759,3231,0.759,3232,0.759,3233,2.596,3234,0.759,3235,0.759,3236,0.759,3237,0.759,3238,1.437,3239,0.759,3240,0.759]],["component/44",[413,0.47]]],"invertedIndex":[["",{"_index":156,"title":{"18-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["0",{"_index":388,"title":{},"name":{},"text":{"18":{},"20":{},"26":{},"29":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["0.5",{"_index":2215,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["000000000000000001d4132452f67ce200000002000000000000000000000001",{"_index":2318,"title":{},"name":{},"text":{"39":{}},"component":{}}],["00000001",{"_index":391,"title":{},"name":{},"text":{"18":{}},"component":{}}],["00000010",{"_index":392,"title":{},"name":{},"text":{"18":{}},"component":{}}],["00001100",{"_index":401,"title":{},"name":{},"text":{"18":{}},"component":{}}],["00001110",{"_index":399,"title":{},"name":{},"text":{"18":{}},"component":{}}],["0001",{"_index":1863,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["01",{"_index":1864,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["01t00:00:00",{"_index":1865,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["02",{"_index":1869,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["02t19:17:44.4383997z",{"_index":2315,"title":{},"name":{},"text":{"39":{}},"component":{}}],["03",{"_index":1641,"title":{},"name":{},"text":{"38":{}},"component":{}}],["05",{"_index":2181,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["058e81ca6089",{"_index":1679,"title":{},"name":{},"text":{"38":{}},"component":{}}],["05t22:18:38.0708705z",{"_index":1669,"title":{},"name":{},"text":{"38":{}},"component":{}}],["06",{"_index":2314,"title":{},"name":{},"text":{"39":{}},"component":{}}],["07",{"_index":2438,"title":{},"name":{},"text":{"40":{}},"component":{}}],["07t20:58:30.48z",{"_index":2331,"title":{},"name":{},"text":{"39":{}},"component":{}}],["0827dbbf7f8e",{"_index":1684,"title":{},"name":{},"text":{"38":{}},"component":{}}],["08t18:55:31.8514657z",{"_index":2182,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["0b0110",{"_index":397,"title":{},"name":{},"text":{"18":{}},"component":{}}],["0b07f429",{"_index":1542,"title":{},"name":{},"text":{"38":{}},"component":{}}],["0b1010",{"_index":395,"title":{},"name":{},"text":{"18":{}},"component":{}}],["0da7877166b2",{"_index":2342,"title":{},"name":{},"text":{"39":{}},"component":{}}],["1",{"_index":184,"title":{},"name":{},"text":{"3":{},"8":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"31":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["1,10bdelet",{"_index":3028,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["1,10s/pattern/replac",{"_index":3173,"title":{},"name":{},"text":{"43":{}},"component":{}}],["1,40d",{"_index":3072,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["1.0",{"_index":359,"title":{},"name":{},"text":{"16":{},"17":{},"38":{},"41":{}},"component":{}}],["1.0.7",{"_index":2926,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1.1",{"_index":2783,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1.1.0",{"_index":2844,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1.1.x",{"_index":2843,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1.5",{"_index":1797,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["1.eventgrid.azure.net",{"_index":1674,"title":{},"name":{},"text":{"38":{}},"component":{}}],["10",{"_index":1648,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["10,000",{"_index":3142,"title":{},"name":{},"text":{"43":{}},"component":{}}],["100",{"_index":2383,"title":{},"name":{},"text":{"40":{}},"component":{}}],["100,000",{"_index":2288,"title":{},"name":{},"text":{"39":{}},"component":{}}],["1000",{"_index":1854,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["10;11;12",{"_index":778,"title":{},"name":{},"text":{"27":{}},"component":{}}],["10g",{"_index":3121,"title":{},"name":{},"text":{"43":{}},"component":{}}],["11",{"_index":1668,"title":{},"name":{},"text":{"38":{},"40":{},"41":{}},"component":{}}],["1111",{"_index":1795,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["1144.4",{"_index":1809,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["12",{"_index":813,"title":{},"name":{},"text":{"29":{},"41":{}},"component":{}}],["123",{"_index":1149,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["123455432199234570",{"_index":2337,"title":{},"name":{},"text":{"39":{}},"component":{}}],["124",{"_index":1148,"title":{},"name":{},"text":{"36":{}},"component":{}}],["128",{"_index":2117,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["13",{"_index":2433,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["13.68.244",{"_index":1652,"title":{},"name":{},"text":{"38":{}},"component":{}}],["14",{"_index":2588,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1414ded9",{"_index":2427,"title":{},"name":{},"text":{"40":{}},"component":{}}],["14c0",{"_index":1681,"title":{},"name":{},"text":{"38":{}},"component":{}}],["14t21:11:14.9918922z",{"_index":1642,"title":{},"name":{},"text":{"38":{}},"component":{}}],["15",{"_index":33,"title":{},"name":{},"text":{"1":{},"41":{}},"component":{}}],["16",{"_index":1803,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["16b9f0b16ab3",{"_index":1657,"title":{},"name":{},"text":{"38":{}},"component":{}}],["17",{"_index":2656,"title":{},"name":{},"text":{"41":{}},"component":{}}],["17bf7238abd8",{"_index":2309,"title":{},"name":{},"text":{"39":{}},"component":{}}],["1970",{"_index":1986,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["1;2;3",{"_index":776,"title":{},"name":{},"text":{"27":{}},"component":{}}],["1g",{"_index":2991,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["1gt",{"_index":3051,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["2",{"_index":193,"title":{"21-2":{}},"name":{},"text":{"3":{},"8":{},"12":{},"14":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"29":{},"30":{},"31":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["2).padleft(8",{"_index":387,"title":{},"name":{},"text":{"18":{}},"component":{}}],["2,$d",{"_index":3074,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["2.0",{"_index":1951,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["20",{"_index":1851,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["200",{"_index":1452,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["2015",{"_index":1868,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["2016",{"_index":2493,"title":{},"name":{},"text":{"40":{}},"component":{}}],["2017",{"_index":2180,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["2017\\\",\\\"duration\\\":\\\"0",{"_index":2434,"title":{},"name":{},"text":{"40":{}},"component":{}}],["2018",{"_index":2313,"title":{},"name":{},"text":{"39":{}},"component":{}}],["2019",{"_index":2330,"title":{},"name":{},"text":{"39":{}},"component":{}}],["2020",{"_index":1640,"title":{},"name":{},"text":{"38":{}},"component":{}}],["208,333",{"_index":1810,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["22.8",{"_index":1805,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["24",{"_index":2292,"title":{},"name":{},"text":{"39":{}},"component":{}}],["256",{"_index":2109,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["256kb",{"_index":2210,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["278",{"_index":1799,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["28b8",{"_index":1644,"title":{},"name":{},"text":{"38":{}},"component":{}}],["2a",{"_index":319,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{}}],["2b",{"_index":320,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{}}],["2e54",{"_index":1661,"title":{},"name":{},"text":{"38":{}},"component":{}}],["2f6a8e64",{"_index":1653,"title":{},"name":{},"text":{"38":{}},"component":{}}],["2xx",{"_index":1605,"title":{},"name":{},"text":{"38":{}},"component":{}}],["3",{"_index":197,"title":{},"name":{},"text":{"3":{},"8":{},"12":{},"14":{},"20":{},"21":{},"29":{},"31":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["300",{"_index":1811,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["30t16:24:48.789z",{"_index":1870,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["31",{"_index":1649,"title":{},"name":{},"text":{"38":{}},"component":{}}],["314",{"_index":1651,"title":{},"name":{},"text":{"38":{}},"component":{}}],["32",{"_index":1817,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["365",{"_index":3175,"title":{"44-4":{}},"name":{},"text":{"44":{}},"component":{}}],["4",{"_index":440,"title":{},"name":{},"text":{"20":{},"21":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["4+4",{"_index":3112,"title":{},"name":{},"text":{"42":{}},"component":{}}],["4,167",{"_index":1806,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["4.x",{"_index":2019,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["40",{"_index":981,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["400,000",{"_index":1801,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["4000x",{"_index":2749,"title":{},"name":{},"text":{"41":{}},"component":{}}],["404",{"_index":1604,"title":{},"name":{},"text":{"38":{}},"component":{}}],["408b",{"_index":1677,"title":{},"name":{},"text":{"38":{}},"component":{}}],["414d",{"_index":2429,"title":{},"name":{},"text":{"40":{}},"component":{}}],["42",{"_index":641,"title":{},"name":{},"text":{"22":{},"28":{}},"component":{}}],["43",{"_index":643,"title":{},"name":{},"text":{"22":{},"28":{},"39":{},"41":{}},"component":{}}],["443",{"_index":1898,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["454d",{"_index":1645,"title":{},"name":{},"text":{"38":{}},"component":{}}],["4714",{"_index":1544,"title":{},"name":{},"text":{"38":{}},"component":{}}],["491f",{"_index":1682,"title":{},"name":{},"text":{"38":{}},"component":{}}],["492a",{"_index":1655,"title":{},"name":{},"text":{"38":{}},"component":{}}],["4faa",{"_index":1662,"title":{},"name":{},"text":{"38":{}},"component":{}}],["4xx",{"_index":1606,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["5",{"_index":28,"title":{},"name":{},"text":{"1":{},"20":{},"36":{},"39":{},"40":{},"41":{},"43":{}},"component":{}}],["5.5",{"_index":1454,"title":{},"name":{},"text":{"38":{}},"component":{}}],["50",{"_index":1131,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["500",{"_index":1578,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["500m",{"_index":2170,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["520d",{"_index":2307,"title":{},"name":{},"text":{"39":{}},"component":{}}],["52464b0e.png",{"_index":2376,"title":{},"name":{},"text":{"40":{}},"component":{}}],["55",{"_index":1881,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["55d0",{"_index":1676,"title":{},"name":{},"text":{"38":{}},"component":{}}],["5671",{"_index":1899,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["56afc886",{"_index":2338,"title":{},"name":{},"text":{"39":{}},"component":{}}],["58d81613",{"_index":1660,"title":{},"name":{},"text":{"38":{}},"component":{}}],["5m",{"_index":1879,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["5xx",{"_index":1607,"title":{},"name":{},"text":{"38":{}},"component":{}}],["6",{"_index":460,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["64",{"_index":1975,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["67333793211",{"_index":2491,"title":{},"name":{},"text":{"40":{}},"component":{}}],["7",{"_index":475,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"40":{},"41":{}},"component":{}}],["70",{"_index":2381,"title":{},"name":{},"text":{"40":{}},"component":{}}],["72",{"_index":1138,"title":{},"name":{},"text":{"36":{}},"component":{}}],["7200",{"_index":2944,"title":{},"name":{},"text":{"41":{}},"component":{}}],["75",{"_index":3021,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["75ctrl",{"_index":3022,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["767b",{"_index":2339,"title":{},"name":{},"text":{"39":{}},"component":{}}],["7f73ab45",{"_index":1680,"title":{},"name":{},"text":{"38":{}},"component":{}}],["8",{"_index":1072,"title":{},"name":{},"text":{"36":{},"39":{},"40":{},"41":{}},"component":{}}],["80",{"_index":2241,"title":{},"name":{},"text":{"39":{}},"component":{}}],["814",{"_index":1808,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["8366",{"_index":1678,"title":{},"name":{},"text":{"38":{}},"component":{}}],["8836b3a3.png",{"_index":2864,"title":{},"name":{},"text":{"41":{}},"component":{}}],["8883",{"_index":1897,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["89b9",{"_index":2430,"title":{},"name":{},"text":{"40":{}},"component":{}}],["8b2a",{"_index":2328,"title":{},"name":{},"text":{"39":{}},"component":{}}],["8d40",{"_index":2326,"title":{},"name":{},"text":{"39":{}},"component":{}}],["8fc429bd.png",{"_index":2888,"title":{},"name":{},"text":{"41":{}},"component":{}}],["9",{"_index":2587,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["900",{"_index":2333,"title":{},"name":{},"text":{"39":{}},"component":{}}],["9392",{"_index":1545,"title":{},"name":{},"text":{"38":{}},"component":{}}],["94aa",{"_index":1654,"title":{},"name":{},"text":{"38":{}},"component":{}}],["9af86784",{"_index":2325,"title":{},"name":{},"text":{"39":{}},"component":{}}],["9f4b",{"_index":1543,"title":{},"name":{},"text":{"38":{}},"component":{}}],["_",{"_index":857,"title":{},"name":{},"text":{"30":{},"32":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["_*monospac",{"_index":190,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__**``acter``**__s__",{"_index":192,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__**acter**__s__",{"_index":183,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__``acter``__s__",{"_index":189,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["__char__acter__s__",{"_index":181,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["_bold",{"_index":182,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["_ital",{"_index":179,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["_monospac",{"_index":188,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["a,b",{"_index":533,"title":{},"name":{},"text":{"21":{},"23":{},"30":{}},"component":{}}],["a.k.a",{"_index":758,"title":{},"name":{},"text":{"26":{}},"component":{}}],["a39f9bda.png",{"_index":2774,"title":{},"name":{},"text":{"41":{}},"component":{}}],["a834",{"_index":1683,"title":{},"name":{},"text":{"38":{}},"component":{}}],["a878",{"_index":2308,"title":{},"name":{},"text":{"39":{}},"component":{}}],["a930",{"_index":1663,"title":{},"name":{},"text":{"38":{}},"component":{}}],["a;b",{"_index":559,"title":{},"name":{},"text":{"21":{}},"component":{}}],["aaaaaaaaaac",{"_index":1860,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["aaaaaaaaaae",{"_index":2343,"title":{},"name":{},"text":{"39":{}},"component":{}}],["abbrev",{"_index":970,"title":{},"name":{},"text":{"36":{}},"component":{}}],["abil",{"_index":1328,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["abov",{"_index":600,"title":{},"name":{},"text":{"21":{},"29":{},"30":{},"38":{},"40":{},"43":{}},"component":{}}],["absolut",{"_index":2128,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["abstract",{"_index":62,"title":{"41-173":{}},"name":{},"text":{"1":{},"41":{}},"component":{}}],["abus",{"_index":2217,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["acceler",{"_index":2899,"title":{},"name":{},"text":{"41":{}},"component":{}}],["accept",{"_index":466,"title":{},"name":{},"text":{"20":{},"27":{},"38":{},"41":{}},"component":{}}],["access",{"_index":337,"title":{"39-20":{},"39-59":{},"39-81":{},"39-89":{},"41-43":{},"41-82":{},"41-104":{},"41-111":{}},"name":{},"text":{"16":{},"20":{},"32":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["accomplish",{"_index":1554,"title":{},"name":{},"text":{"38":{}},"component":{}}],["accordingli",{"_index":2739,"title":{},"name":{},"text":{"41":{}},"component":{}}],["account",{"_index":1394,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["accur",{"_index":2570,"title":{},"name":{},"text":{"41":{}},"component":{}}],["achiev",{"_index":2283,"title":{},"name":{},"text":{"39":{}},"component":{}}],["ack",{"_index":2129,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["acknowledg",{"_index":1823,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["act",{"_index":1758,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["action",{"_index":384,"title":{},"name":{},"text":{"18":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["action/display",{"_index":2534,"title":{},"name":{},"text":{"41":{}},"component":{}}],["activ",{"_index":1696,"title":{"44-1":{},"44-3":{},"44-4":{},"44-5":{},"44-6":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["actor",{"_index":2063,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["actual",{"_index":1021,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["acunit",{"_index":1520,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ad",{"_index":725,"title":{"44-2":{},"44-8":{},"44-10":{},"44-11":{},"44-12":{},"44-13":{},"44-14":{}},"name":{},"text":{"25":{},"27":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["add",{"_index":173,"title":{},"name":{},"text":{"3":{},"8":{},"20":{},"27":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["added=%a",{"_index":779,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addedm",{"_index":780,"title":{},"name":{},"text":{"27":{}},"component":{}}],["addit",{"_index":1213,"title":{"38-59":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["addition",{"_index":2851,"title":{},"name":{},"text":{"41":{}},"component":{}}],["additon",{"_index":2167,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["address",{"_index":1116,"title":{},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["adequ",{"_index":2280,"title":{},"name":{},"text":{"39":{}},"component":{}}],["adjust",{"_index":2156,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["admin",{"_index":1397,"title":{},"name":{},"text":{"38":{},"44":{}},"component":{}}],["administr",{"_index":1398,"title":{"44-14":{}},"name":{},"text":{"38":{},"44":{}},"component":{}}],["adminstr",{"_index":3203,"title":{},"name":{},"text":{"44":{}},"component":{}}],["admonit",{"_index":106,"title":{"2":{},"7":{},"2-1":{},"2-2":{},"2-3":{},"7-1":{},"7-2":{},"7-3":{}},"name":{"2":{},"7":{}},"text":{"2":{},"7":{}},"component":{}}],["adopt",{"_index":2834,"title":{},"name":{},"text":{"41":{}},"component":{}}],["adt",{"_index":1216,"title":{"38-65":{},"38-67":{}},"name":{},"text":{"38":{}},"component":{}}],["adtdigitaltwinsoper",{"_index":1612,"title":{},"name":{},"text":{"38":{}},"component":{}}],["adteventroutesoper",{"_index":1611,"title":{},"name":{},"text":{"38":{}},"component":{}}],["adtmodelsoper",{"_index":1608,"title":{},"name":{},"text":{"38":{}},"component":{}}],["adtqueryoper",{"_index":1610,"title":{},"name":{},"text":{"38":{}},"component":{}}],["advanc",{"_index":1202,"title":{"38-27":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["advantag",{"_index":1895,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["affect",{"_index":991,"title":{},"name":{},"text":{"36":{},"38":{},"42":{},"43":{}},"component":{}}],["affin",{"_index":2157,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["afterward",{"_index":2694,"title":{},"name":{},"text":{"41":{}},"component":{}}],["again",{"_index":1074,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["against",{"_index":1831,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["agent",{"_index":484,"title":{"41-158":{}},"name":{},"text":{"20":{},"41":{}},"component":{}}],["agent:1.0",{"_index":2839,"title":{},"name":{},"text":{"41":{}},"component":{}}],["agent:1.1",{"_index":2806,"title":{},"name":{},"text":{"41":{}},"component":{}}],["aggreg",{"_index":2527,"title":{},"name":{},"text":{"41":{}},"component":{}}],["agnost",{"_index":1472,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["agre",{"_index":2841,"title":{},"name":{},"text":{"41":{}},"component":{}}],["agreement",{"_index":2273,"title":{},"name":{},"text":{"39":{},"44":{}},"component":{}}],["ai",{"_index":1769,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ailn",{"_index":2490,"title":{},"name":{},"text":{"40":{}},"component":{}}],["aim",{"_index":46,"title":{},"name":{},"text":{"1":{},"39":{},"41":{}},"component":{}}],["aka",{"_index":339,"title":{},"name":{},"text":{"16":{}},"component":{}}],["alert",{"_index":1217,"title":{"38-66":{},"40-4":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["alia",{"_index":976,"title":{},"name":{},"text":{"36":{}},"component":{}}],["alias.graph",{"_index":977,"title":{},"name":{},"text":{"36":{}},"component":{}}],["alic",{"_index":837,"title":{},"name":{},"text":{"30":{},"32":{}},"component":{}}],["alloc",{"_index":1714,"title":{"39-43":{},"41-66":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["allow",{"_index":854,"title":{"41-220":{}},"name":{},"text":{"30":{},"33":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["alon",{"_index":1526,"title":{},"name":{},"text":{"38":{}},"component":{}}],["along",{"_index":2044,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["alphanumer",{"_index":1923,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["alreadi",{"_index":650,"title":{},"name":{},"text":{"22":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["altern",{"_index":3020,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["although",{"_index":1511,"title":{},"name":{},"text":{"38":{}},"component":{}}],["alway",{"_index":224,"title":{"16-5":{},"17-3":{}},"name":{},"text":{"5":{},"10":{},"23":{},"24":{},"27":{},"31":{},"36":{},"39":{},"41":{}},"component":{}}],["am",{"_index":2440,"title":{},"name":{},"text":{"40":{}},"component":{}}],["amani",{"_index":3189,"title":{},"name":{},"text":{"44":{}},"component":{}}],["amend",{"_index":1015,"title":{},"name":{},"text":{"36":{}},"component":{}}],["amount",{"_index":2158,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["ampersand",{"_index":239,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["amqp",{"_index":1821,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["amqp/mqtt",{"_index":2847,"title":{},"name":{},"text":{"41":{}},"component":{}}],["amqpw",{"_index":2831,"title":{},"name":{},"text":{"41":{}},"component":{}}],["analog",{"_index":2873,"title":{},"name":{},"text":{"41":{}},"component":{}}],["analysi",{"_index":1548,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["analyst",{"_index":2220,"title":{},"name":{},"text":{"39":{}},"component":{}}],["analyt",{"_index":1256,"title":{"41-22":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["analyz",{"_index":1564,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["anchor",{"_index":1944,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["and/or",{"_index":1889,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["android",{"_index":2576,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["annoy",{"_index":794,"title":{},"name":{},"text":{"28":{}},"component":{}}],["anomali",{"_index":2538,"title":{},"name":{},"text":{"41":{}},"component":{}}],["anoth",{"_index":100,"title":{},"name":{},"text":{"1":{},"16":{},"17":{},"24":{},"25":{},"30":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["ansibl",{"_index":2827,"title":{},"name":{},"text":{"41":{}},"component":{}}],["answer",{"_index":47,"title":{},"name":{},"text":{"1":{},"25":{},"33":{}},"component":{}}],["anti",{"_index":1744,"title":{"39-112":{},"41-134":{}},"name":{},"text":{"39":{}},"component":{}}],["antora",{"_index":283,"title":{"16-3":{}},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{}}],["antora.yml",{"_index":281,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["anyon",{"_index":3232,"title":{},"name":{},"text":{"44":{}},"component":{}}],["anyth",{"_index":914,"title":{},"name":{},"text":{"34":{},"41":{}},"component":{}}],["anywher",{"_index":2265,"title":{},"name":{},"text":{"39":{}},"component":{}}],["apaa",{"_index":2505,"title":{"41-12":{}},"name":{},"text":{"41":{}},"component":{}}],["apach",{"_index":2149,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["api",{"_index":1171,"title":{"38-42":{},"38-63":{},"41-167":{},"41-168":{},"41-169":{}},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["api..digitaltwins.azure.net",{"_index":1433,"title":{},"name":{},"text":{"38":{}},"component":{}}],["api’",{"_index":1828,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["apostroph",{"_index":240,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["app",{"_index":417,"title":{"20-1":{},"20-2":{},"41-243":{},"44-4":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["appear",{"_index":1928,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["append",{"_index":3096,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["appli",{"_index":464,"title":{"38-10":{}},"name":{},"text":{"20":{},"27":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["applianc",{"_index":2551,"title":{},"name":{},"text":{"41":{}},"component":{}}],["applic",{"_index":42,"title":{},"name":{},"text":{"1":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["application/json",{"_index":1443,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["appplic",{"_index":2174,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["appproperti",{"_index":2183,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["approach",{"_index":569,"title":{"41-246":{}},"name":{},"text":{"21":{},"26":{},"38":{},"39":{},"41":{}},"component":{}}],["appropri",{"_index":215,"title":{},"name":{},"text":{"5":{},"10":{},"21":{},"33":{},"38":{},"39":{},"41":{}},"component":{}}],["appservic",{"_index":433,"title":{},"name":{},"text":{"20":{}},"component":{}}],["appset",{"_index":446,"title":{},"name":{},"text":{"20":{}},"component":{}}],["app’",{"_index":443,"title":{},"name":{},"text":{"20":{}},"component":{}}],["arbitrari",{"_index":2112,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["architect",{"_index":1819,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["architectur",{"_index":5,"title":{"16":{},"1-3":{},"16-2":{},"41-5":{},"41-165":{}},"name":{},"text":{"1":{},"16":{},"17":{},"41":{}},"component":{}}],["archiv",{"_index":2389,"title":{},"name":{},"text":{"40":{}},"component":{}}],["area",{"_index":3152,"title":{},"name":{},"text":{"43":{}},"component":{}}],["aren't",{"_index":2785,"title":{},"name":{},"text":{"41":{}},"component":{}}],["aren’t",{"_index":1503,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["arg",{"_index":2447,"title":{},"name":{},"text":{"40":{},"43":{}},"component":{}}],["argdo",{"_index":3132,"title":{},"name":{},"text":{"43":{}},"component":{}}],["arglist",{"_index":3130,"title":{},"name":{},"text":{"43":{}},"component":{}}],["argsadd",{"_index":3131,"title":{},"name":{},"text":{"43":{}},"component":{}}],["argument",{"_index":948,"title":{"36-14":{},"43-11":{}},"name":{},"text":{"36":{},"41":{},"42":{},"43":{}},"component":{}}],["arm",{"_index":2688,"title":{},"name":{},"text":{"41":{}},"component":{}}],["around",{"_index":1666,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["arrang",{"_index":1937,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["array",{"_index":1337,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["arriv",{"_index":1327,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["arrow",{"_index":260,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["articl",{"_index":2943,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ascii",{"_index":2105,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"43":{}},"component":{}}],["asciidoc",{"_index":343,"title":{},"name":{},"text":{"16":{}},"component":{}}],["asciidoctor",{"_index":120,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"10":{},"11":{}},"component":{}}],["asp.net",{"_index":424,"title":{"20":{}},"name":{},"text":{"20":{},"38":{}},"component":{}}],["aspect",{"_index":1241,"title":{},"name":{},"text":{"38":{},"44":{}},"component":{}}],["assembl",{"_index":1302,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["assign",{"_index":350,"title":{},"name":{},"text":{"16":{},"23":{},"38":{},"39":{},"41":{},"42":{},"44":{}},"component":{}}],["assist",{"_index":2229,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["associ",{"_index":628,"title":{},"name":{},"text":{"22":{},"25":{},"32":{},"38":{},"39":{},"41":{}},"component":{}}],["assum",{"_index":1122,"title":{},"name":{},"text":{"36":{},"39":{},"40":{},"41":{}},"component":{}}],["assur",{"_index":2672,"title":{},"name":{},"text":{"41":{}},"component":{}}],["asymmetr",{"_index":1952,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["async",{"_index":912,"title":{},"name":{},"text":{"33":{},"34":{},"39":{},"40":{}},"component":{}}],["asynchron",{"_index":2260,"title":{},"name":{},"text":{"39":{}},"component":{}}],["atom",{"_index":2962,"title":{},"name":{},"text":{"41":{}},"component":{}}],["attach",{"_index":1270,"title":{},"name":{},"text":{"38":{}},"component":{}}],["attempt",{"_index":811,"title":{},"name":{},"text":{"29":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["attent",{"_index":113,"title":{},"name":{},"text":{"2":{},"7":{},"39":{},"41":{}},"component":{}}],["attest",{"_index":1717,"title":{"39-51":{},"39-55":{},"39-65":{},"39-66":{},"39-67":{},"39-70":{},"41-74":{},"41-78":{},"41-88":{},"41-89":{},"41-90":{},"41-93":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["attribut",{"_index":275,"title":{},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["audit",{"_index":2541,"title":{},"name":{},"text":{"41":{}},"component":{}}],["augment",{"_index":2889,"title":{},"name":{},"text":{"41":{}},"component":{}}],["auth",{"_index":2124,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["auth.symkey",{"_index":2498,"title":{},"name":{},"text":{"40":{}},"component":{}}],["authent",{"_index":1404,"title":{"39-21":{},"39-90":{},"41-44":{},"41-112":{},"41-229":{},"44-15":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["authenticationtyp",{"_index":1872,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["author",{"_index":1403,"title":{"41-178":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["authority(ca",{"_index":1934,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["auto",{"_index":1974,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["autocomplet",{"_index":1478,"title":{},"name":{},"text":{"38":{}},"component":{}}],["autom",{"_index":1141,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["automat",{"_index":333,"title":{},"name":{},"text":{"16":{},"20":{},"36":{},"38":{},"39":{},"41":{},"43":{},"44":{}},"component":{}}],["autoprovis",{"_index":1730,"title":{"39-74":{},"41-97":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["auxiliari",{"_index":204,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["avail",{"_index":1407,"title":{"44-9":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["averag",{"_index":1581,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["avoid",{"_index":662,"title":{},"name":{},"text":{"23":{},"38":{},"39":{},"41":{}},"component":{}}],["await",{"_index":1513,"title":{},"name":{},"text":{"38":{},"40":{},"41":{}},"component":{}}],["awar",{"_index":2085,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["awrappedvalu",{"_index":644,"title":{},"name":{},"text":{"22":{}},"component":{}}],["axi",{"_index":1096,"title":{},"name":{},"text":{"36":{}},"component":{}}],["az",{"_index":429,"title":{},"name":{},"text":{"20":{},"38":{},"39":{},"41":{}},"component":{}}],["azur",{"_index":78,"title":{"16":{},"38":{},"41":{},"44":{},"16-2":{},"20-2":{},"20-4":{},"38-2":{},"38-3":{},"38-6":{},"38-7":{},"38-21":{},"38-22":{},"38-31":{},"38-42":{},"38-43":{},"38-44":{},"38-47":{},"38-48":{},"38-49":{},"38-56":{},"38-61":{},"38-66":{},"38-67":{},"39-79":{},"39-144":{},"40-1":{},"40-3":{},"40-8":{},"41-11":{},"41-14":{},"41-16":{},"41-17":{},"41-102":{},"41-156":{},"41-159":{},"41-242":{},"44-1":{},"44-2":{},"44-3":{},"44-4":{},"44-5":{},"44-6":{},"44-8":{},"44-10":{},"44-11":{},"44-12":{},"44-13":{},"44-14":{}},"name":{},"text":{"1":{},"16":{},"17":{},"20":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["azure/examin",{"_index":2373,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["azurearchitecturestarterpack",{"_index":354,"title":{},"name":{},"text":{"16":{}},"component":{"16":{},"17":{}}}],["azurearchitecturestarterpack/docs/modules/modul",{"_index":362,"title":{},"name":{},"text":{"17":{}},"component":{}}],["azurearchitecturestarterpack/docs/modules/root/pag",{"_index":346,"title":{},"name":{},"text":{"16":{}},"component":{}}],["azuredigitaltwin",{"_index":1220,"title":{},"name":{"38":{}},"text":{},"component":{}}],["azuremonitordiagnosticlog",{"_index":2444,"title":{},"name":{},"text":{"40":{}},"component":{}}],["azuretutori",{"_index":432,"title":{},"name":{},"text":{"20":{}},"component":{}}],["b",{"_index":323,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"18":{},"21":{},"23":{},"26":{},"29":{},"30":{},"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["b((int)featur",{"_index":408,"title":{},"name":{},"text":{"18":{}},"component":{}}],["b(1",{"_index":389,"title":{},"name":{},"text":{"18":{}},"component":{}}],["b(v",{"_index":398,"title":{},"name":{},"text":{"18":{}},"component":{}}],["b1",{"_index":324,"title":{},"name":{},"text":{"13":{},"15":{},"39":{},"41":{}},"component":{}}],["b2",{"_index":325,"title":{},"name":{},"text":{"13":{},"15":{},"39":{},"41":{}},"component":{}}],["b25e",{"_index":1646,"title":{},"name":{},"text":{"38":{}},"component":{}}],["b2c",{"_index":3196,"title":{},"name":{},"text":{"44":{}},"component":{}}],["b3",{"_index":1791,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["b445",{"_index":2428,"title":{},"name":{},"text":{"40":{}},"component":{}}],["bab65e106785",{"_index":2329,"title":{},"name":{},"text":{"39":{}},"component":{}}],["back",{"_index":866,"title":{"41-249":{}},"name":{},"text":{"31":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["backcamera",{"_index":1304,"title":{},"name":{},"text":{"38":{}},"component":{}}],["backend",{"_index":2043,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["background",{"_index":2030,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["backlog",{"_index":2267,"title":{},"name":{},"text":{"39":{}},"component":{}}],["backoff",{"_index":2295,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["backplan",{"_index":2244,"title":{},"name":{},"text":{"39":{}},"component":{}}],["backsward",{"_index":2986,"title":{},"name":{},"text":{"42":{}},"component":{}}],["backward",{"_index":548,"title":{},"name":{},"text":{"21":{},"36":{},"39":{},"41":{},"43":{}},"component":{}}],["bad",{"_index":814,"title":{},"name":{},"text":{"29":{}},"component":{}}],["bad1",{"_index":820,"title":{},"name":{},"text":{"29":{}},"component":{}}],["bad2",{"_index":821,"title":{},"name":{},"text":{"29":{}},"component":{}}],["badd",{"_index":3026,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["balanc",{"_index":1779,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["baltimor",{"_index":2696,"title":{},"name":{},"text":{"41":{}},"component":{}}],["bandwidth",{"_index":2590,"title":{},"name":{},"text":{"41":{}},"component":{}}],["bar",{"_index":1082,"title":{},"name":{},"text":{"36":{}},"component":{}}],["base",{"_index":1178,"title":{"39-125":{},"39-127":{},"39-129":{},"41-147":{},"41-149":{},"41-151":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["base64",{"_index":1976,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["basement",{"_index":141,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["bash",{"_index":2034,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["basi",{"_index":1519,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["basic",{"_index":107,"title":{"2-2":{},"7-2":{},"36-1":{},"38-26":{},"39-12":{},"41-35":{},"41-37":{},"41-38":{},"41-39":{}},"name":{},"text":{"2":{},"7":{},"33":{},"38":{},"39":{},"41":{},"43":{},"44":{}},"component":{}}],["batch",{"_index":1490,"title":{"39-154":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["batching/sess",{"_index":2263,"title":{},"name":{},"text":{"39":{}},"component":{}}],["batterylevel",{"_index":1880,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["battl",{"_index":1047,"title":{},"name":{},"text":{"36":{}},"component":{}}],["bc31",{"_index":1656,"title":{},"name":{},"text":{"38":{}},"component":{}}],["bdelet",{"_index":3027,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["be",{"_index":667,"title":{},"name":{},"text":{"23":{},"34":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["bearer",{"_index":1540,"title":{},"name":{},"text":{"38":{}},"component":{}}],["becom",{"_index":578,"title":{},"name":{},"text":{"21":{},"38":{},"39":{},"41":{}},"component":{}}],["befor",{"_index":966,"title":{"38-38":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["begin",{"_index":1997,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["behalf",{"_index":2642,"title":{},"name":{},"text":{"41":{}},"component":{}}],["behav",{"_index":2951,"title":{},"name":{},"text":{"41":{}},"component":{}}],["behavior",{"_index":998,"title":{},"name":{},"text":{"36":{},"39":{}},"component":{}}],["behaviour",{"_index":3116,"title":{},"name":{},"text":{"42":{}},"component":{}}],["behind",{"_index":698,"title":{},"name":{},"text":{"25":{},"27":{},"32":{},"34":{},"38":{},"41":{}},"component":{}}],["below",{"_index":32,"title":{},"name":{},"text":{"1":{},"5":{},"10":{},"38":{},"39":{},"40":{},"41":{},"43":{}},"component":{}}],["belt",{"_index":942,"title":{"36-10":{}},"name":{},"text":{"36":{}},"component":{}}],["benchmark",{"_index":1119,"title":{},"name":{},"text":{"36":{}},"component":{}}],["benefit",{"_index":632,"title":{"44-11":{}},"name":{},"text":{"22":{},"41":{}},"component":{}}],["best",{"_index":949,"title":{"36-16":{}},"name":{},"text":{"42":{},"43":{},"44":{}},"component":{}}],["beta.1",{"_index":334,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{}}],["better",{"_index":2835,"title":{},"name":{},"text":{"41":{}},"component":{}}],["between",{"_index":252,"title":{"38-9":{},"39-167":{},"43-1":{}},"name":{},"text":{"5":{},"10":{},"38":{},"39":{},"41":{},"43":{}},"component":{}}],["bf",{"_index":3017,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["bfirst",{"_index":3016,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["bi",{"_index":1760,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["bidirect",{"_index":2564,"title":{},"name":{},"text":{"41":{}},"component":{}}],["big",{"_index":898,"title":{},"name":{},"text":{"32":{},"39":{}},"component":{}}],["bill",{"_index":1314,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["billion",{"_index":2945,"title":{},"name":{},"text":{"41":{}},"component":{}}],["binari",{"_index":383,"title":{},"name":{},"text":{"18":{},"39":{},"41":{}},"component":{}}],["bind",{"_index":519,"title":{"26":{}},"name":{},"text":{"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"31":{},"33":{},"34":{}},"component":{}}],["bind(1",{"_index":736,"title":{},"name":{},"text":{"26":{}},"component":{}}],["bind(2",{"_index":737,"title":{},"name":{},"text":{"26":{}},"component":{}}],["bind(x",{"_index":738,"title":{},"name":{},"text":{"26":{}},"component":{}}],["biometr",{"_index":3225,"title":{},"name":{},"text":{"44":{}},"component":{}}],["bit",{"_index":205,"title":{},"name":{},"text":{"4":{},"9":{},"18":{},"36":{},"39":{},"40":{},"41":{}},"component":{}}],["bitlock",{"_index":3201,"title":{},"name":{},"text":{"44":{}},"component":{}}],["bitwis",{"_index":373,"title":{"18":{},"18-3":{}},"name":{},"text":{"18":{}},"component":{}}],["bitwiseoper",{"_index":376,"title":{},"name":{"18":{}},"text":{},"component":{}}],["bl",{"_index":3019,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["black",{"_index":941,"title":{"36-10":{}},"name":{},"text":{"42":{}},"component":{}}],["blade",{"_index":1405,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["blank",{"_index":469,"title":{},"name":{},"text":{"20":{},"36":{},"42":{},"43":{}},"component":{}}],["blast",{"_index":3018,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["blatantli",{"_index":928,"title":{},"name":{},"text":{"35":{}},"component":{}}],["bloat",{"_index":2510,"title":{"41-164":{}},"name":{},"text":{"41":{}},"component":{}}],["blob",{"_index":1618,"title":{"41-242":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["block",{"_index":115,"title":{"4-1":{},"9-1":{}},"name":{},"text":{"2":{},"5":{},"7":{},"10":{},"41":{},"42":{},"43":{}},"component":{}}],["blocklist",{"_index":1740,"title":{"39-104":{},"39-105":{},"39-106":{},"41-126":{},"41-127":{},"41-128":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["blog",{"_index":88,"title":{},"name":{},"text":{"1":{}},"component":{}}],["blueprint",{"_index":1288,"title":{},"name":{},"text":{"38":{}},"component":{}}],["bluetooth",{"_index":2546,"title":{},"name":{},"text":{"41":{}},"component":{}}],["bn",{"_index":3013,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["bnext",{"_index":3012,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["bob",{"_index":838,"title":{},"name":{},"text":{"30":{}},"component":{}}],["bodi",{"_index":1130,"title":{"39-127":{},"41-149":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["body.$metadata.$model",{"_index":1440,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body.errorcod",{"_index":1451,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body.modelid",{"_index":1441,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body.poweredon",{"_index":1456,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body.prop",{"_index":1458,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body.temperatur",{"_index":1453,"title":{},"name":{},"text":{"38":{}},"component":{}}],["body.weather.historicaldata[0].month",{"_index":2191,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["body.weather.isen",{"_index":2194,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["body.weather.temperatur",{"_index":2193,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["bold",{"_index":167,"title":{"3-1":{},"8-1":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["book",{"_index":427,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bookmark",{"_index":99,"title":{},"name":{},"text":{"1":{}},"component":{}}],["bool",{"_index":1455,"title":{},"name":{},"text":{"38":{}},"component":{}}],["boolean",{"_index":2172,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["boolean—and",{"_index":1362,"title":{},"name":{},"text":{"38":{}},"component":{}}],["boot",{"_index":1761,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["bootstrap",{"_index":2657,"title":{},"name":{},"text":{"41":{}},"component":{}}],["bootup",{"_index":1996,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["bosi",{"_index":2197,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["boss",{"_index":1048,"title":{},"name":{},"text":{"36":{}},"component":{}}],["bot",{"_index":1155,"title":{},"name":{},"text":{"36":{}},"component":{}}],["both",{"_index":629,"title":{},"name":{},"text":{"22":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["bottom",{"_index":341,"title":{},"name":{},"text":{"16":{},"26":{},"29":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["bound",{"_index":1301,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["boundari",{"_index":254,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["box",{"_index":138,"title":{},"name":{},"text":{"2":{},"7":{},"38":{},"39":{},"41":{}},"component":{}}],["bp",{"_index":3015,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["bpreviou",{"_index":3014,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["brace",{"_index":671,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bracket",{"_index":2989,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["brake",{"_index":410,"title":{},"name":{},"text":{"18":{}},"component":{}}],["branch",{"_index":461,"title":{"36-6":{}},"name":{},"text":{"20":{},"32":{},"36":{}},"component":{}}],["brand",{"_index":3193,"title":{},"name":{},"text":{"44":{}},"component":{}}],["breach",{"_index":2073,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["break",{"_index":1173,"title":{},"name":{},"text":{"36":{},"40":{},"41":{}},"component":{}}],["breaker",{"_index":137,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["bring",{"_index":1263,"title":{},"name":{},"text":{"38":{},"41":{},"44":{}},"component":{}}],["broaden",{"_index":2763,"title":{},"name":{},"text":{"41":{}},"component":{}}],["broken",{"_index":2094,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["broker",{"_index":2259,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["brokeredendpoint(\"/modules//input",{"_index":2796,"title":{},"name":{},"text":{"41":{}},"component":{}}],["brokeredendpoint(\\\"/modules/filtermodule/inputs/input1",{"_index":2816,"title":{},"name":{},"text":{"41":{}},"component":{}}],["brows",{"_index":468,"title":{},"name":{},"text":{"20":{},"39":{},"41":{}},"component":{}}],["browser",{"_index":303,"title":{},"name":{},"text":{"6":{},"11":{},"43":{},"44":{}},"component":{}}],["btn",{"_index":272,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["btn:[open",{"_index":294,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["btn:[submit",{"_index":288,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["bu",{"_index":1269,"title":{"39-143":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["budget",{"_index":2900,"title":{},"name":{},"text":{"41":{}},"component":{}}],["bufdo",{"_index":3023,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["buffer",{"_index":2528,"title":{"43-2":{},"43-8":{}},"name":{},"text":{"41":{},"42":{},"43":{}},"component":{}}],["bug",{"_index":1115,"title":{},"name":{},"text":{"36":{}},"component":{}}],["build",{"_index":493,"title":{"21-5":{}},"name":{},"text":{"20":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["build.",{"_index":1176,"title":{},"name":{},"text":{"36":{}},"component":{}}],["build/deploy",{"_index":1995,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["builder",{"_index":657,"title":{"28":{},"29":{},"30":{}},"name":{},"text":{"22":{},"25":{},"27":{},"30":{}},"component":{}}],["built",{"_index":123,"title":{"39-17":{},"39-116":{},"39-117":{},"41-40":{},"41-138":{},"41-139":{}},"name":{},"text":{"2":{},"5":{},"7":{},"10":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["bulk",{"_index":1840,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["bunch",{"_index":3042,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["bundl",{"_index":1017,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["busi",{"_index":1230,"title":{"39-134":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["button",{"_index":265,"title":{"6-1":{},"11-1":{}},"name":{},"text":{"6":{},"11":{}},"component":{}}],["buy",{"_index":2704,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["byte",{"_index":982,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["c",{"_index":248,"title":{},"name":{},"text":{"5":{},"10":{},"13":{},"15":{},"26":{},"29":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["c2d",{"_index":1743,"title":{"39-110":{},"41-132":{}},"name":{},"text":{"39":{}},"component":{}}],["c2dcommand",{"_index":2398,"title":{},"name":{},"text":{"40":{}},"component":{}}],["c2dtwinoper",{"_index":2414,"title":{},"name":{},"text":{"40":{}},"component":{}}],["c990c9430c8f/resourcegroups/myresourcegroup/providers/microsoft.digitaltwins/digitaltwinsinstances/myinstancenam",{"_index":1647,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ca",{"_index":840,"title":{"39-95":{},"39-105":{},"41-117":{},"41-127":{},"41-179":{},"41-181":{}},"name":{},"text":{"30":{},"39":{},"41":{}},"component":{}}],["ca:tru",{"_index":2717,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cacertscertchain",{"_index":2723,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cacertsedgedeviceca",{"_index":2727,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cach",{"_index":2535,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cadd",{"_index":3098,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["caddexpr",{"_index":3097,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["calcul",{"_index":1177,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["calendar",{"_index":3221,"title":{},"name":{},"text":{"44":{}},"component":{}}],["california",{"_index":841,"title":{},"name":{},"text":{"30":{}},"component":{}}],["call",{"_index":655,"title":{},"name":{},"text":{"22":{},"23":{},"25":{},"32":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["callabl",{"_index":2678,"title":{},"name":{},"text":{"41":{}},"component":{}}],["callback",{"_index":2611,"title":{},"name":{},"text":{"41":{}},"component":{}}],["caller",{"_index":2677,"title":{},"name":{},"text":{"41":{}},"component":{}}],["calleripaddress",{"_index":1633,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["came",{"_index":965,"title":{},"name":{},"text":{"36":{}},"component":{}}],["cancellationtoken",{"_index":2463,"title":{},"name":{},"text":{"40":{}},"component":{}}],["cancellationtokensourc",{"_index":2453,"title":{},"name":{},"text":{"40":{}},"component":{}}],["can’t",{"_index":852,"title":{},"name":{},"text":{"30":{},"38":{},"39":{},"41":{}},"component":{}}],["capabilities.iotedg",{"_index":2935,"title":{},"name":{},"text":{"41":{}},"component":{}}],["capabl",{"_index":1242,"title":{"39-156":{},"41-240":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["capac",{"_index":2266,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["capit",{"_index":1132,"title":{},"name":{},"text":{"36":{}},"component":{}}],["captur",{"_index":870,"title":{},"name":{},"text":{"32":{},"38":{},"39":{},"40":{},"42":{}},"component":{}}],["care",{"_index":1536,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["carriag",{"_index":3061,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cascad",{"_index":853,"title":{},"name":{},"text":{"30":{}},"component":{}}],["case",{"_index":607,"title":{"41-228":{}},"name":{},"text":{"21":{},"24":{},"25":{},"27":{},"28":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["catalog",{"_index":2558,"title":{},"name":{},"text":{"41":{}},"component":{}}],["catch",{"_index":2395,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["categori",{"_index":717,"title":{"38-59":{}},"name":{},"text":{"25":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["caus",{"_index":675,"title":{},"name":{},"text":{"23":{},"39":{},"40":{},"41":{}},"component":{}}],["caution",{"_index":125,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["cave",{"_index":1381,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cave_1",{"_index":1382,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cave_2",{"_index":1383,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cawhello",{"_index":3138,"title":{},"name":{},"text":{"43":{}},"component":{}}],["cc",{"_index":3083,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cc5e8e80c8b0",{"_index":1546,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cd",{"_index":1161,"title":{},"name":{},"text":{"36":{}},"component":{}}],["cdo",{"_index":3091,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["celesti",{"_index":1374,"title":{},"name":{},"text":{"38":{}},"component":{}}],["celestialbodi",{"_index":1371,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cellular",{"_index":1883,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["center",{"_index":2366,"title":{},"name":{},"text":{"40":{},"44":{}},"component":{}}],["central",{"_index":1759,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["centralu",{"_index":431,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cer",{"_index":2066,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cert",{"_index":2731,"title":{},"name":{},"text":{"41":{}},"component":{}}],["certain",{"_index":768,"title":{},"name":{},"text":{"27":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["certgen.sh",{"_index":2721,"title":{},"name":{},"text":{"41":{}},"component":{}}],["certif",{"_index":1705,"title":{"39-23":{},"39-55":{},"39-56":{},"39-57":{},"39-58":{},"39-59":{},"39-82":{},"39-88":{},"39-95":{},"39-98":{},"39-99":{},"39-100":{},"39-101":{},"39-105":{},"41-46":{},"41-78":{},"41-79":{},"41-80":{},"41-81":{},"41-82":{},"41-105":{},"41-110":{},"41-117":{},"41-120":{},"41-121":{},"41-122":{},"41-123":{},"41-127":{},"41-176":{},"41-177":{},"41-178":{},"41-179":{},"41-180":{},"41-181":{},"41-182":{},"41-185":{},"41-207":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["certifi",{"_index":2557,"title":{},"name":{},"text":{"41":{}},"component":{}}],["certificate’",{"_index":2061,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cex",{"_index":3094,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cexpr",{"_index":3093,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cfir",{"_index":3088,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cfirst",{"_index":3087,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["chain",{"_index":574,"title":{},"name":{},"text":{"21":{},"26":{},"29":{},"30":{},"32":{},"38":{},"39":{},"41":{}},"component":{}}],["challeng",{"_index":1727,"title":{"39-68":{},"41-91":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["chang",{"_index":497,"title":{"36-15":{},"43-15":{}},"name":{},"text":{"20":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["changelist",{"_index":3136,"title":{},"name":{},"text":{"43":{}},"component":{}}],["channel",{"_index":2845,"title":{},"name":{},"text":{"41":{}},"component":{}}],["char**``acter``**",{"_index":187,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["char**acter**",{"_index":178,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["char``acter``",{"_index":186,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["charact",{"_index":177,"title":{"5":{},"10":{},"5-1":{},"10-1":{}},"name":{"5":{},"10":{}},"text":{"3":{},"5":{},"8":{},"10":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["characterist",{"_index":1772,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["charg",{"_index":2214,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["chart",{"_index":1094,"title":{},"name":{},"text":{"36":{}},"component":{}}],["check",{"_index":1006,"title":{},"name":{},"text":{"36":{},"39":{},"40":{},"41":{}},"component":{}}],["checkbox",{"_index":1418,"title":{},"name":{},"text":{"38":{}},"component":{}}],["checklist",{"_index":2821,"title":{},"name":{},"text":{"41":{}},"component":{}}],["checkout",{"_index":1080,"title":{},"name":{},"text":{"36":{}},"component":{}}],["chees",{"_index":1379,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cherri",{"_index":944,"title":{"36-12":{},"36-13":{}},"name":{},"text":{"36":{}},"component":{}}],["child",{"_index":637,"title":{"41-241":{}},"name":{},"text":{"22":{},"31":{},"38":{},"41":{}},"component":{}}],["children",{"_index":2922,"title":{},"name":{},"text":{"41":{}},"component":{}}],["choic",{"_index":2592,"title":{},"name":{},"text":{"41":{}},"component":{}}],["choos",{"_index":678,"title":{"39-167":{},"41-210":{}},"name":{},"text":{"23":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["chose",{"_index":1408,"title":{},"name":{},"text":{"38":{}},"component":{}}],["chosen",{"_index":1815,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["churn",{"_index":2511,"title":{"41-164":{}},"name":{},"text":{"41":{}},"component":{}}],["ci",{"_index":1160,"title":{},"name":{},"text":{"36":{}},"component":{}}],["ci/cd",{"_index":2523,"title":{"41-225":{}},"name":{},"text":{"41":{}},"component":{}}],["circuit",{"_index":136,"title":{},"name":{},"text":{"2":{},"7":{},"41":{}},"component":{}}],["citi",{"_index":1237,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ciw",{"_index":3004,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cl",{"_index":3081,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cla",{"_index":3090,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["claim",{"_index":3199,"title":{},"name":{},"text":{"44":{}},"component":{}}],["class",{"_index":658,"title":{},"name":{},"text":{"22":{},"27":{},"38":{},"40":{},"41":{}},"component":{}}],["clast",{"_index":3089,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["claus",{"_index":2793,"title":{},"name":{},"text":{"41":{}},"component":{}}],["clean",{"_index":1036,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["cleaner",{"_index":901,"title":{},"name":{},"text":{"32":{}},"component":{}}],["cleanli",{"_index":2629,"title":{},"name":{},"text":{"41":{}},"component":{}}],["clear",{"_index":920,"title":{},"name":{},"text":{"34":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["cli",{"_index":1209,"title":{"38-43":{},"39-79":{},"41-102":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["click",{"_index":293,"title":{},"name":{},"text":{"6":{},"11":{},"39":{}},"component":{}}],["client",{"_index":1279,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["client.decommissionmodelasync(dtmiofplanetinterfac",{"_index":1514,"title":{},"name":{},"text":{"38":{}},"component":{}}],["client.deletemodelasync(idtodelet",{"_index":1528,"title":{},"name":{},"text":{"38":{}},"component":{}}],["client.gettwinasync",{"_index":2645,"title":{},"name":{},"text":{"41":{}},"component":{}}],["client.openasync",{"_index":2609,"title":{},"name":{},"text":{"41":{}},"component":{}}],["client.sendeventasync(\"output1",{"_index":2610,"title":{},"name":{},"text":{"41":{}},"component":{}}],["client.setinputmessagehandlerasync(\"input1",{"_index":2614,"title":{},"name":{},"text":{"41":{}},"component":{}}],["clipboard",{"_index":2068,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["clipboard+=unnamedplu",{"_index":3109,"title":{},"name":{},"text":{"42":{}},"component":{}}],["clist",{"_index":3082,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["clone",{"_index":2022,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["close",{"_index":1139,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["closest",{"_index":2097,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cloud",{"_index":1261,"title":{"39-41":{},"41-19":{},"41-20":{},"41-64":{},"41-166":{},"41-235":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["cloudev",{"_index":1446,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cloudtodevicemessagecount",{"_index":1871,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cluster",{"_index":2159,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cmap",{"_index":3055,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cmdline",{"_index":3071,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cn",{"_index":2074,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["cnext",{"_index":3084,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cnoremap",{"_index":3060,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["coap5",{"_index":2544,"title":{},"name":{},"text":{"41":{}},"component":{}}],["code",{"_index":74,"title":{"18-1":{},"18-2":{},"38-14":{},"39-97":{},"39-98":{},"41-119":{},"41-120":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"9":{},"10":{},"18":{},"21":{},"23":{},"28":{},"32":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["codebas",{"_index":3077,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["coexist",{"_index":1499,"title":{},"name":{},"text":{"38":{}},"component":{}}],["cold",{"_index":1287,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["collabor",{"_index":3218,"title":{},"name":{},"text":{"44":{}},"component":{}}],["collect",{"_index":937,"title":{"36-4":{},"40-3":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["colon",{"_index":1925,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["color",{"_index":974,"title":{},"name":{},"text":{"36":{}},"component":{}}],["colour",{"_index":980,"title":{},"name":{},"text":{"36":{}},"component":{}}],["column",{"_index":1422,"title":{},"name":{},"text":{"38":{}},"component":{}}],["combin",{"_index":498,"title":{"21":{},"21-1":{},"21-3":{},"21-4":{},"21-5":{},"21-6":{}},"name":{},"text":{"21":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["combine(a,zero",{"_index":618,"title":{},"name":{},"text":{"21":{}},"component":{}}],["combine(zero,a",{"_index":620,"title":{},"name":{},"text":{"21":{}},"component":{}}],["combinemethod",{"_index":512,"title":{},"name":{"21":{}},"text":{},"component":{}}],["come",{"_index":121,"title":{},"name":{},"text":{"2":{},"7":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["comfort",{"_index":1061,"title":{},"name":{},"text":{"36":{}},"component":{}}],["comma",{"_index":3125,"title":{},"name":{},"text":{"43":{}},"component":{}}],["command",{"_index":990,"title":{"43":{},"39-79":{},"39-80":{},"39-81":{},"39-82":{},"39-83":{},"41-102":{},"41-103":{},"41-104":{},"41-105":{},"43-20":{},"43-28":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["comment",{"_index":221,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["commerci",{"_index":2695,"title":{},"name":{},"text":{"41":{}},"component":{}}],["commit",{"_index":496,"title":{"36-5":{},"36-16":{}},"name":{},"text":{"20":{},"36":{}},"component":{}}],["commit’",{"_index":1041,"title":{},"name":{},"text":{"36":{}},"component":{}}],["common",{"_index":1283,"title":{"39-108":{},"41-130":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["commonli",{"_index":1277,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["commun",{"_index":286,"title":{"39-35":{},"41-58":{},"41-221":{}},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["comp1.comp2",{"_index":1436,"title":{},"name":{},"text":{"38":{}},"component":{}}],["compani",{"_index":1887,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["compar",{"_index":747,"title":{},"name":{},"text":{"26":{}},"component":{}}],["comparison",{"_index":1460,"title":{"39-140":{}},"name":{},"text":{"38":{}},"component":{}}],["compat",{"_index":1174,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["compil",{"_index":3079,"title":{},"name":{},"text":{"42":{}},"component":{}}],["complement",{"_index":374,"title":{"18-3":{}},"name":{},"text":{"18":{}},"component":{}}],["complet",{"_index":1022,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["complex",{"_index":108,"title":{"2-3":{},"7-3":{}},"name":{},"text":{"2":{},"7":{},"38":{},"40":{},"41":{}},"component":{}}],["complianc",{"_index":2003,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["complic",{"_index":1487,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["compliment",{"_index":2673,"title":{},"name":{},"text":{"41":{}},"component":{}}],["compon",{"_index":278,"title":{"39-93":{},"41-6":{},"41-19":{},"41-115":{}},"name":{},"text":{"6":{},"11":{},"16":{},"17":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["compos",{"_index":726,"title":{},"name":{},"text":{"25":{},"38":{},"39":{},"41":{}},"component":{}}],["composit",{"_index":621,"title":{"22":{}},"name":{},"text":{"25":{},"39":{},"40":{},"41":{}},"component":{}}],["comprehens",{"_index":1613,"title":{},"name":{},"text":{"38":{}},"component":{}}],["compressor",{"_index":1313,"title":{},"name":{},"text":{"38":{}},"component":{}}],["compromis",{"_index":1948,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["comput",{"_index":587,"title":{"22":{}},"name":{},"text":{"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"32":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["computationexpressioncomposit",{"_index":622,"title":{},"name":{"22":{}},"text":{},"component":{}}],["concept",{"_index":567,"title":{"39-24":{},"39-30":{},"39-47":{},"39-146":{},"41-42":{},"41-47":{},"41-53":{},"41-70":{},"41-186":{}},"name":{},"text":{"21":{},"25":{},"34":{},"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["conceptu",{"_index":63,"title":{},"name":{},"text":{"1":{},"38":{},"41":{}},"component":{}}],["concern",{"_index":916,"title":{},"name":{},"text":{"34":{},"41":{}},"component":{}}],["concret",{"_index":66,"title":{},"name":{},"text":{"1":{}},"component":{}}],["concurr",{"_index":1814,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["condit",{"_index":1692,"title":{"41-189":{},"41-201":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["conferenceroom",{"_index":1367,"title":{},"name":{},"text":{"38":{}},"component":{}}],["config",{"_index":445,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["config.yaml",{"_index":2735,"title":{},"name":{},"text":{"41":{}},"component":{}}],["configur",{"_index":462,"title":{"38-22":{},"38-23":{},"39-35":{},"39-95":{},"41-58":{},"41-117":{},"41-198":{},"41-206":{},"41-219":{},"41-221":{},"41-226":{},"41-230":{},"41-247":{},"44-14":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["configuration/3",{"_index":2871,"title":{},"name":{},"text":{"41":{}},"component":{}}],["configuration/4",{"_index":2872,"title":{},"name":{},"text":{"41":{}},"component":{}}],["configuration/media/m06",{"_index":2863,"title":{},"name":{},"text":{"41":{}},"component":{}}],["confirm",{"_index":1929,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["conflict",{"_index":1888,"title":{},"name":{},"text":{"39":{},"41":{},"43":{}},"component":{}}],["conform",{"_index":729,"title":{},"name":{},"text":{"25":{}},"component":{}}],["connect",{"_index":617,"title":{"39-160":{},"39-161":{},"39-165":{},"40-10":{},"41-220":{},"41-233":{}},"name":{},"text":{"21":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["connectionauthmethod",{"_index":2126,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["connectiondevicegenerationid",{"_index":2125,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["connectiondeviceid",{"_index":2121,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["connectionmoduleid",{"_index":2123,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["connectionst",{"_index":1866,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["connectionstateupdatedtim",{"_index":2502,"title":{},"name":{},"text":{"40":{}},"component":{}}],["connectionstr",{"_index":2439,"title":{},"name":{},"text":{"40":{}},"component":{}}],["connector",{"_index":2357,"title":{},"name":{},"text":{"39":{}},"component":{}}],["consequ",{"_index":1524,"title":{},"name":{},"text":{"38":{}},"component":{}}],["consid",{"_index":1062,"title":{"41-225":{}},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["consider",{"_index":1121,"title":{"41-205":{}},"name":{},"text":{"36":{},"41":{}},"component":{}}],["consist",{"_index":959,"title":{"41-212":{}},"name":{},"text":{"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["console.readlin",{"_index":2458,"title":{},"name":{},"text":{"40":{}},"component":{}}],["console.writeline(\"exit",{"_index":2459,"title":{},"name":{},"text":{"40":{}},"component":{}}],["console.writeline(\"ha",{"_index":409,"title":{},"name":{},"text":{"18":{}},"component":{}}],["console.writeline(\"hello",{"_index":378,"title":{},"name":{},"text":{"18":{}},"component":{}}],["console.writeline(\"messag",{"_index":2473,"title":{},"name":{},"text":{"40":{}},"component":{}}],["console.writeline(\"monitor",{"_index":2448,"title":{},"name":{},"text":{"40":{}},"component":{}}],["console.writeline(convert.tostring(n",{"_index":386,"title":{},"name":{},"text":{"18":{}},"component":{}}],["console.writeline(featur",{"_index":407,"title":{},"name":{},"text":{"18":{}},"component":{}}],["constrain",{"_index":2540,"title":{},"name":{},"text":{"41":{}},"component":{}}],["constraint",{"_index":1748,"title":{"39-131":{},"41-153":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["construct",{"_index":1197,"title":{"38-17":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["constructor",{"_index":712,"title":{},"name":{},"text":{"25":{}},"component":{}}],["consum",{"_index":635,"title":{"39-166":{}},"name":{},"text":{"22":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["consumpt",{"_index":2131,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["contact",{"_index":1774,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["contain",{"_index":157,"title":{"41-168":{},"41-209":{},"41-215":{}},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["container’",{"_index":2676,"title":{},"name":{},"text":{"41":{}},"component":{}}],["contains(subject",{"_index":1449,"title":{},"name":{},"text":{"38":{}},"component":{}}],["contains(x,i",{"_index":1465,"title":{},"name":{},"text":{"38":{}},"component":{}}],["content",{"_index":158,"title":{"40-7":{}},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"8":{},"9":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["contentencod",{"_index":2177,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["contenttyp",{"_index":2176,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["context",{"_index":923,"title":{"38-6":{},"38-10":{}},"name":{},"text":{"34":{},"38":{},"41":{}},"component":{}}],["continu",{"_index":521,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"27":{},"33":{},"34":{},"40":{},"41":{},"43":{}},"component":{}}],["contoso",{"_index":1378,"title":{},"name":{},"text":{"38":{}},"component":{}}],["contosoregistri",{"_index":2801,"title":{},"name":{},"text":{"41":{}},"component":{}}],["contract",{"_index":1172,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["contribut",{"_index":1375,"title":{},"name":{},"text":{"38":{}},"component":{}}],["contributing.md",{"_index":951,"title":{"36-17":{}},"name":{},"text":{},"component":{}}],["contributor",{"_index":1399,"title":{},"name":{},"text":{"38":{}},"component":{}}],["control",{"_index":826,"title":{"39-20":{},"39-59":{},"39-89":{},"41-43":{},"41-82":{},"41-111":{}},"name":{},"text":{"30":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["conveni",{"_index":2719,"title":{},"name":{},"text":{"41":{}},"component":{}}],["convent",{"_index":2842,"title":{},"name":{},"text":{"41":{}},"component":{}}],["convers",{"_index":213,"title":{},"name":{},"text":{"5":{},"10":{},"41":{}},"component":{}}],["convert",{"_index":381,"title":{},"name":{},"text":{"18":{},"21":{},"27":{},"28":{},"29":{},"30":{}},"component":{}}],["cool",{"_index":1310,"title":{},"name":{},"text":{"38":{}},"component":{}}],["coordin",{"_index":2649,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cope",{"_index":3100,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["copen",{"_index":3099,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["copi",{"_index":929,"title":{},"name":{},"text":{"35":{},"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["copyright",{"_index":247,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["core",{"_index":425,"title":{"20":{},"41-1":{}},"name":{},"text":{"20":{},"38":{},"41":{}},"component":{}}],["core.editor",{"_index":1152,"title":{},"name":{},"text":{"36":{}},"component":{}}],["corpor",{"_index":2699,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["correct",{"_index":1473,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["correctli",{"_index":2740,"title":{},"name":{},"text":{"41":{}},"component":{}}],["correl",{"_index":1275,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["correlationid",{"_index":1636,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["correspond",{"_index":656,"title":{},"name":{},"text":{"22":{},"30":{},"38":{},"39":{},"41":{}},"component":{}}],["cost",{"_index":1755,"title":{"39-155":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["couldn’t",{"_index":2708,"title":{},"name":{},"text":{"41":{}},"component":{}}],["count",{"_index":1891,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"42":{}},"component":{}}],["coupl",{"_index":2670,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["cover",{"_index":1389,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["cp",{"_index":3086,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cpreviou",{"_index":3085,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cpu",{"_index":2380,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["crash",{"_index":2627,"title":{},"name":{},"text":{"41":{}},"component":{}}],["crater",{"_index":1343,"title":{},"name":{},"text":{"38":{}},"component":{}}],["creat",{"_index":81,"title":{"20-1":{},"38-24":{},"39-98":{},"39-163":{},"41-120":{},"41-197":{},"44-12":{}},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"11":{},"16":{},"17":{},"20":{},"21":{},"25":{},"26":{},"27":{},"28":{},"31":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["create/delet",{"_index":1439,"title":{},"name":{},"text":{"38":{}},"component":{}}],["create/manag",{"_index":3204,"title":{},"name":{},"text":{"44":{}},"component":{}}],["create/upload",{"_index":2012,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["create_edge_device_ca_certif",{"_index":2726,"title":{},"name":{},"text":{"41":{}},"component":{}}],["create_root_and_intermedi",{"_index":2722,"title":{},"name":{},"text":{"41":{}},"component":{}}],["createdeviceident",{"_index":2484,"title":{},"name":{},"text":{"40":{}},"component":{}}],["createopt",{"_index":2807,"title":{},"name":{},"text":{"41":{}},"component":{}}],["creating/starting/stopping/remov",{"_index":2674,"title":{},"name":{},"text":{"41":{}},"component":{}}],["creation",{"_index":1224,"title":{"39-29":{},"39-71":{},"41-52":{},"41-94":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["credenti",{"_index":463,"title":{"39-69":{},"41-92":{}},"name":{},"text":{"20":{},"39":{},"41":{},"44":{}},"component":{}}],["credentials/password",{"_index":3211,"title":{},"name":{},"text":{"44":{}},"component":{}}],["criteria",{"_index":2377,"title":{},"name":{},"text":{"40":{}},"component":{}}],["critic",{"_index":1767,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["cross",{"_index":329,"title":{"16-4":{},"17-2":{},"41-5":{}},"name":{},"text":{"16":{},"17":{},"39":{},"41":{}},"component":{}}],["crud",{"_index":2021,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cryptograph",{"_index":2037,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["csharp",{"_index":414,"title":{"19":{}},"name":{},"text":{"19":{},"39":{},"41":{}},"component":{}}],["ct",{"_index":2454,"title":{},"name":{},"text":{"40":{}},"component":{}}],["ct.iscancellationrequest",{"_index":2467,"title":{},"name":{},"text":{"40":{}},"component":{}}],["ctrl",{"_index":2976,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+alt+v",{"_index":2981,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+alt+w",{"_index":3031,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+c",{"_index":2975,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+d",{"_index":2998,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+e",{"_index":2994,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+f",{"_index":3070,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+i",{"_index":3065,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+o",{"_index":3064,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+r",{"_index":2988,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+u",{"_index":2997,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+v",{"_index":2980,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ctrl+w",{"_index":3030,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["cts.cancel",{"_index":2460,"title":{},"name":{},"text":{"40":{}},"component":{}}],["cts.token",{"_index":2457,"title":{},"name":{},"text":{"40":{}},"component":{}}],["curli",{"_index":670,"title":{},"name":{},"text":{"23":{}},"component":{}}],["current",{"_index":1120,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["currenttemp",{"_index":1559,"title":{},"name":{},"text":{"38":{}},"component":{}}],["currrent",{"_index":2015,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["cursor",{"_index":2985,"title":{"43-5":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["curv",{"_index":241,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["cust42",{"_index":877,"title":{},"name":{},"text":{"32":{}},"component":{}}],["custid",{"_index":879,"title":{},"name":{},"text":{"32":{}},"component":{}}],["custom",{"_index":1259,"title":{"39-18":{},"39-119":{},"41-41":{},"41-141":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["customer’",{"_index":2705,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cut",{"_index":2504,"title":{"41-5":{}},"name":{},"text":{"41":{}},"component":{}}],["cycl",{"_index":1415,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["d",{"_index":1071,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["d1",{"_index":2335,"title":{},"name":{},"text":{"39":{}},"component":{}}],["d2c",{"_index":1742,"title":{"39-109":{},"41-131":{}},"name":{},"text":{"39":{}},"component":{}}],["d2c.endpoints.latency.builtin.ev",{"_index":2171,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["d2cpartit",{"_index":2451,"title":{},"name":{},"text":{"40":{}},"component":{}}],["d2ctwinoper",{"_index":2416,"title":{},"name":{},"text":{"40":{}},"component":{}}],["d2d.telemetry.egress.invalid",{"_index":2212,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["d359",{"_index":2340,"title":{},"name":{},"text":{"39":{}},"component":{}}],["d365",{"_index":2306,"title":{},"name":{},"text":{"39":{}},"component":{}}],["d59e",{"_index":2341,"title":{},"name":{},"text":{"39":{}},"component":{}}],["d980e6e2a884?api",{"_index":1664,"title":{},"name":{},"text":{"38":{}},"component":{}}],["daemon",{"_index":2508,"title":{"41-162":{},"41-165":{}},"name":{},"text":{"41":{}},"component":{}}],["daili",{"_index":1781,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["dark",{"_index":139,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["dash",{"_index":251,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["dashboard",{"_index":2584,"title":{},"name":{},"text":{"41":{}},"component":{}}],["data",{"_index":507,"title":{"21-5":{},"38-3":{},"38-4":{},"38-5":{},"38-49":{},"38-50":{},"38-51":{},"38-53":{},"39-77":{},"40-3":{},"41-3":{},"41-4":{},"41-17":{},"41-21":{},"41-23":{},"41-100":{}},"name":{},"text":{"21":{},"34":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["databas",{"_index":869,"title":{},"name":{},"text":{"32":{},"39":{},"41":{}},"component":{}}],["databrick",{"_index":2153,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["datacontenttyp",{"_index":1442,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dataschema",{"_index":1437,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["datavers",{"_index":2323,"title":{},"name":{},"text":{"39":{}},"component":{}}],["date",{"_index":1002,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["datetim",{"_index":1363,"title":{},"name":{},"text":{"38":{}},"component":{}}],["datetime.utcnow",{"_index":2466,"title":{},"name":{},"text":{"40":{}},"component":{}}],["day",{"_index":1700,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["dbresult",{"_index":873,"title":{},"name":{},"text":{"32":{}},"component":{}}],["dbresultbuild",{"_index":895,"title":{},"name":{},"text":{"32":{}},"component":{}}],["dd",{"_index":3102,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["dead",{"_index":2246,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{}}],["debug",{"_index":2211,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["decid",{"_index":1024,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["decim",{"_index":229,"title":{},"name":{},"text":{"5":{},"10":{},"43":{}},"component":{}}],["decis",{"_index":2356,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["declar",{"_index":441,"title":{"41-199":{}},"name":{},"text":{"20":{},"38":{},"41":{}},"component":{}}],["decod",{"_index":1982,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["decommis",{"_index":1506,"title":{},"name":{},"text":{"38":{}},"component":{}}],["decommiss",{"_index":1207,"title":{"38-36":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["decor",{"_index":973,"title":{},"name":{},"text":{"36":{}},"component":{}}],["decorate=short",{"_index":978,"title":{},"name":{},"text":{"36":{}},"component":{}}],["decreas",{"_index":3038,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["decrypt",{"_index":1969,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["dedic",{"_index":2950,"title":{},"name":{},"text":{"41":{}},"component":{}}],["dedupl",{"_index":2145,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["deepestcrat",{"_index":1352,"title":{},"name":{},"text":{"38":{}},"component":{}}],["default",{"_index":315,"title":{},"name":{},"text":{"6":{},"11":{},"20":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["defend",{"_index":2662,"title":{},"name":{},"text":{"41":{}},"component":{}}],["defin",{"_index":615,"title":{"41-203":{}},"name":{},"text":{"21":{},"25":{},"29":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["definit",{"_index":494,"title":{"38-12":{},"39-147":{},"39-148":{},"39-149":{},"39-150":{},"39-151":{}},"name":{},"text":{"20":{},"25":{},"38":{}},"component":{}}],["delay",{"_index":535,"title":{"23":{}},"name":{},"text":{"21":{},"23":{},"39":{},"40":{}},"component":{}}],["delayrunmethod",{"_index":661,"title":{},"name":{"23":{}},"text":{},"component":{}}],["deleg",{"_index":1395,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["delet",{"_index":1031,"title":{"38-37":{},"38-38":{},"38-39":{},"38-40":{},"38-41":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["deletedeviceident",{"_index":2485,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deliv",{"_index":1252,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["deliveri",{"_index":1754,"title":{"39-153":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["demand",{"_index":2008,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["demo",{"_index":327,"title":{"16-3":{}},"name":{},"text":{"16":{}},"component":{}}],["denot",{"_index":2755,"title":{},"name":{},"text":{"41":{}},"component":{}}],["depart",{"_index":1886,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["depend",{"_index":827,"title":{},"name":{},"text":{"30":{},"38":{},"39":{},"41":{}},"component":{}}],["deploy",{"_index":37,"title":{"20-2":{},"20-3":{},"41-186":{},"41-187":{},"41-188":{},"41-194":{},"41-196":{},"41-197":{},"41-204":{},"41-205":{},"41-211":{}},"name":{},"text":{"1":{},"20":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["deployer/oper",{"_index":1904,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["deployment/media/m06",{"_index":2772,"title":{},"name":{},"text":{"41":{}},"component":{}}],["deployment_branch=main",{"_index":447,"title":{},"name":{},"text":{"20":{}},"component":{}}],["deploymentloc",{"_index":1876,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["deprovis",{"_index":1738,"title":{"39-102":{},"41-124":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["depth",{"_index":2730,"title":{},"name":{},"text":{"41":{}},"component":{}}],["deregist",{"_index":2082,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["deriv",{"_index":1935,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["describ",{"_index":1240,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["descript",{"_index":1424,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["descriptor",{"_index":280,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["deseri",{"_index":2102,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["design",{"_index":904,"title":{},"name":{},"text":{"32":{},"38":{},"39":{},"41":{}},"component":{}}],["desir",{"_index":1357,"title":{"41-203":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["desktop",{"_index":2898,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["destin",{"_index":1274,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["detail",{"_index":31,"title":{"39-67":{},"41-90":{}},"name":{},"text":{"1":{},"38":{},"39":{},"41":{}},"component":{}}],["detect",{"_index":2144,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["determin",{"_index":1573,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["detract",{"_index":1346,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dev",{"_index":2902,"title":{},"name":{},"text":{"41":{}},"component":{}}],["dev/test",{"_index":2513,"title":{"41-184":{}},"name":{},"text":{},"component":{}}],["deva",{"_index":1858,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["develop",{"_index":36,"title":{"20":{},"38-21":{},"39-6":{},"41-29":{},"41-231":{},"41-239":{}},"name":{},"text":{"1":{},"20":{},"25":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["development/6",{"_index":2917,"title":{},"name":{},"text":{"41":{}},"component":{}}],["development/7",{"_index":2918,"title":{},"name":{},"text":{"41":{}},"component":{}}],["development/debug",{"_index":2500,"title":{},"name":{},"text":{"40":{}},"component":{}}],["development/media/m07",{"_index":2887,"title":{},"name":{},"text":{"41":{}},"component":{}}],["devic",{"_index":1238,"title":{"39-5":{},"39-7":{},"39-24":{},"39-25":{},"39-29":{},"39-30":{},"39-31":{},"39-33":{},"39-34":{},"39-35":{},"39-38":{},"39-47":{},"39-50":{},"39-52":{},"39-55":{},"39-59":{},"39-61":{},"39-65":{},"39-70":{},"39-73":{},"39-74":{},"39-75":{},"39-77":{},"39-79":{},"39-84":{},"39-85":{},"39-87":{},"39-88":{},"39-89":{},"39-94":{},"39-95":{},"39-100":{},"39-101":{},"39-102":{},"39-103":{},"39-104":{},"39-106":{},"39-129":{},"39-131":{},"39-160":{},"39-161":{},"39-162":{},"39-163":{},"39-165":{},"40-10":{},"40-11":{},"40-12":{},"40-13":{},"41-7":{},"41-8":{},"41-10":{},"41-18":{},"41-28":{},"41-30":{},"41-47":{},"41-48":{},"41-52":{},"41-53":{},"41-56":{},"41-57":{},"41-58":{},"41-61":{},"41-70":{},"41-73":{},"41-75":{},"41-82":{},"41-96":{},"41-100":{},"41-106":{},"41-107":{},"41-116":{},"41-122":{},"41-123":{},"41-126":{},"41-128":{},"41-151":{},"41-206":{},"41-208":{},"41-220":{},"41-226":{},"41-227":{},"41-229":{},"41-235":{},"41-241":{},"41-243":{},"41-244":{},"41-247":{},"41-248":{},"41-250":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["device1",{"_index":2931,"title":{},"name":{},"text":{"41":{}},"component":{}}],["device_list",{"_index":2938,"title":{},"name":{},"text":{"41":{}},"component":{}}],["device_list=$(az",{"_index":2932,"title":{},"name":{},"text":{"41":{}},"component":{}}],["devicecli",{"_index":2789,"title":{},"name":{},"text":{"41":{}},"component":{}}],["deviceconnect",{"_index":1829,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["deviceconnectionstateeventinfo",{"_index":2316,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devicecr",{"_index":2348,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devicedelet",{"_index":2349,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devicedisconnect",{"_index":2347,"title":{},"name":{},"text":{"39":{}},"component":{}}],["deviceetag\":\"nul",{"_index":2344,"title":{},"name":{},"text":{"39":{}},"component":{}}],["deviceid",{"_index":1848,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["deviceid\":\"11576",{"_index":2489,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceid='operator''sdevic",{"_index":2753,"title":{},"name":{},"text":{"41":{}},"component":{}}],["deviceid\\\":\\\"\\\",\\\"batching\\\":\\\"0\\\",\\\"messagesizeinbytes\\\":\\\"\\\",\\\"eventprocessedutctime\\\":\\\"\\\",\\\"eventenqueuedutctime\\\":\\\"\\\",\\\"partitionid\\\":\\\"1",{"_index":2411,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceid\\\":\\\"\\\",\\\"messageid\\\":\\\"\\\",\\\"messagesizeinbytes\\\":\\\"\\\",\\\"protocol\\\":\\\"amqp\\\",\\\"deliveryacknowledgement\\\":\\\"\\\",\\\"deliverycount\\\":\\\"0\\\",\\\"expirytime\\\":\\\"\\\",\\\"timeinsystem\\\":\\\"\\\",\\\"ttl",{"_index":2400,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceid\\\":\\\"\\\",\\\"protocol\\\":\\\"\\\",\\\"authenticationtype\\\":\\\"{\\\\\\\"scope\\\\\\\":\\\\\\\"device\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"sas\\\\\\\",\\\\\\\"issuer\\\\\\\":\\\\\\\"iothub\\\\\\\",\\\\\\\"acceptingipfilterrule\\\\\\\":nul",{"_index":2417,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceid\\\":\\\"\\\",\\\"protocol\\\":\\\"\\\",\\\"authtype\\\":\\\"{\\\\\\\"scope\\\\\\\":\\\\\\\"device\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"sas\\\\\\\",\\\\\\\"issuer\\\\\\\":\\\\\\\"iothub\\\\\\\",\\\\\\\"acceptingipfilterrule\\\\\\\":null}\\\",\\\"bloburi\\\":\\\"http//bloburi.com",{"_index":2413,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceid\\\":\\\"\\\",\\\"protocol\\\":\\\"\\\",\\\"authtype\\\":\\\"{\\\\\\\"scope\\\\\\\":\\\\\\\"device\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"sas\\\\\\\",\\\\\\\"issuer\\\\\\\":\\\\\\\"iothub\\\\\\\",\\\\\\\"acceptingipfilterrule\\\\\\\":null}\\\",\\\"maskedipaddress",{"_index":2392,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceid\\\":\\\"\\\",\\\"sdkversion\\\":\\\"\\\",\\\"messages",{"_index":2415,"title":{},"name":{},"text":{"40":{}},"component":{}}],["deviceidentityoper",{"_index":2404,"title":{},"name":{},"text":{"40":{}},"component":{}}],["devicelifecycleev",{"_index":2481,"title":{},"name":{},"text":{"40":{}},"component":{}}],["devicelifecyclenotif",{"_index":2488,"title":{},"name":{},"text":{"40":{}},"component":{}}],["devicemessag",{"_index":2179,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["devicemoduleid",{"_index":2322,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devices.net",{"_index":2850,"title":{},"name":{},"text":{"41":{}},"component":{}}],["devices/hannover01/modules/insight",{"_index":2641,"title":{},"name":{},"text":{"41":{}},"component":{}}],["devices/logicapptestdevic",{"_index":2311,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devices/{deviceid",{"_index":2346,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devicetelemetri",{"_index":2410,"title":{},"name":{},"text":{"40":{}},"component":{}}],["device’",{"_index":1830,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["devop",{"_index":422,"title":{"20":{},"20-4":{}},"name":{},"text":{"20":{},"41":{},"44":{}},"component":{}}],["devopsfordevelop",{"_index":426,"title":{},"name":{"20":{}},"text":{},"component":{}}],["dgg",{"_index":3001,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["diagnost",{"_index":1215,"title":{"38-61":{},"38-65":{},"41-223":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["diagram",{"_index":2365,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["dice",{"_index":2035,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["dictionari",{"_index":832,"title":{},"name":{},"text":{"30":{},"39":{},"40":{},"41":{}},"component":{}}],["didn’t",{"_index":1032,"title":{},"name":{},"text":{"36":{}},"component":{}}],["differ",{"_index":91,"title":{},"name":{},"text":{"1":{},"21":{},"26":{},"33":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["differenti",{"_index":1189,"title":{"38-9":{}},"name":{},"text":{"38":{}},"component":{}}],["difficult",{"_index":1124,"title":{},"name":{},"text":{"36":{},"41":{}},"component":{}}],["digicert",{"_index":2698,"title":{},"name":{},"text":{"41":{}},"component":{}}],["digit",{"_index":1168,"title":{"38":{},"38-2":{},"38-3":{},"38-6":{},"38-7":{},"38-12":{},"38-17":{},"38-18":{},"38-19":{},"38-21":{},"38-22":{},"38-31":{},"38-42":{},"38-43":{},"38-44":{},"38-45":{},"38-46":{},"38-47":{},"38-48":{},"38-49":{},"38-56":{},"38-61":{},"38-66":{},"39-98":{},"41-16":{},"41-120":{}},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["digitaltwinmodel",{"_index":1469,"title":{},"name":{},"text":{"38":{}},"component":{}}],["digitaltwinoper",{"_index":1650,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dimens",{"_index":1214,"title":{"38-60":{}},"name":{},"text":{"38":{}},"component":{}}],["dip",{"_index":3005,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["direct",{"_index":1273,"title":{"41-237":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["directli",{"_index":528,"title":{},"name":{},"text":{"21":{},"22":{},"24":{},"33":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["directmethod",{"_index":2435,"title":{},"name":{},"text":{"40":{}},"component":{}}],["directori",{"_index":986,"title":{"44-1":{},"44-3":{},"44-4":{},"44-5":{},"44-6":{}},"name":{},"text":{"36":{},"40":{},"42":{},"44":{}},"component":{}}],["disabl",{"_index":1411,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["disappear",{"_index":3107,"title":{},"name":{},"text":{"42":{}},"component":{}}],["disast",{"_index":2542,"title":{},"name":{},"text":{"41":{}},"component":{}}],["disconnect",{"_index":1756,"title":{"39-165":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["discov",{"_index":1841,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["discret",{"_index":1950,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["discuss",{"_index":723,"title":{},"name":{},"text":{"25":{},"41":{}},"component":{}}],["disenrol",{"_index":1739,"title":{"39-103":{},"41-125":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["disk",{"_index":987,"title":{},"name":{},"text":{"36":{},"41":{}},"component":{}}],["dispatch",{"_index":1764,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["display",{"_index":467,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["displaynam",{"_index":1350,"title":{},"name":{},"text":{"38":{}},"component":{}}],["distinct",{"_index":2822,"title":{},"name":{},"text":{"41":{}},"component":{}}],["distinguish",{"_index":1317,"title":{},"name":{},"text":{"38":{},"40":{},"41":{}},"component":{}}],["distribut",{"_index":1784,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["divid",{"_index":745,"title":{},"name":{},"text":{"26":{},"29":{},"41":{}},"component":{}}],["dividebi",{"_index":751,"title":{},"name":{},"text":{"26":{},"29":{}},"component":{}}],["dividebyexplicit",{"_index":750,"title":{},"name":{},"text":{"26":{}},"component":{}}],["dividebywithbindfunct",{"_index":760,"title":{},"name":{},"text":{"26":{}},"component":{}}],["dividebywithbindoper",{"_index":766,"title":{},"name":{},"text":{"26":{}},"component":{}}],["dividebywithcompexpr",{"_index":762,"title":{},"name":{},"text":{"26":{}},"component":{}}],["dividebyworkflow",{"_index":754,"title":{},"name":{},"text":{"26":{},"29":{}},"component":{}}],["dividebyworkflowm",{"_index":816,"title":{},"name":{},"text":{"29":{}},"component":{}}],["diw",{"_index":3003,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["dn",{"_index":2849,"title":{},"name":{},"text":{"41":{}},"component":{}}],["do",{"_index":673,"title":{},"name":{},"text":{"23":{},"32":{},"39":{},"41":{}},"component":{}}],["doc",{"_index":336,"title":{},"name":{},"text":{"16":{},"41":{}},"component":{}}],["docker",{"_index":1164,"title":{},"name":{},"text":{"36":{},"41":{}},"component":{}}],["document",{"_index":18,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"10":{},"11":{},"16":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["doesn’t",{"_index":911,"title":{},"name":{},"text":{"33":{},"38":{},"39":{},"41":{}},"component":{}}],["domain",{"_index":2227,"title":{"44-10":{}},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["domethod",{"_index":690,"title":{},"name":{"24":{}},"text":{},"component":{}}],["don't",{"_index":127,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["done",{"_index":668,"title":{},"name":{},"text":{"23":{},"30":{},"36":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["don’t",{"_index":149,"title":{},"name":{},"text":{"2":{},"7":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["dotnet",{"_index":44,"title":{},"name":{},"text":{"1":{},"41":{}},"component":{}}],["doubl",{"_index":259,"title":{},"name":{},"text":{"5":{},"10":{},"38":{},"41":{}},"component":{}}],["down",{"_index":1038,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"44":{}},"component":{}}],["download",{"_index":2013,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["downstream",{"_index":1211,"title":{"38-55":{},"39-136":{},"41-229":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["downward",{"_index":2993,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["dp",{"_index":1732,"title":{"39-80":{},"39-89":{},"41-102":{},"41-103":{},"41-111":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["dps/how",{"_index":2076,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["dps/quick",{"_index":2080,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["draw",{"_index":112,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["drawer",{"_index":340,"title":{},"name":{},"text":{"16":{}},"component":{}}],["driven",{"_index":1257,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["driver",{"_index":2854,"title":{},"name":{},"text":{"41":{}},"component":{}}],["drop",{"_index":2147,"title":{},"name":{},"text":{"39":{},"41":{},"43":{}},"component":{}}],["ds",{"_index":3179,"title":{"44-11":{}},"name":{},"text":{"44":{}},"component":{}}],["dt",{"_index":2127,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["dtdl",{"_index":1292,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi",{"_index":1354,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:com:contoso:celestialbody;1",{"_index":1373,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:com:contoso:crater;1",{"_index":1353,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:com:contoso:moon;1",{"_index":1351,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:com:contoso:patientroom;1",{"_index":1496,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:com:contoso:patientroom;2",{"_index":1497,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:com:contoso:planet;1",{"_index":1348,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:dtdl:context;2",{"_index":1349,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:example:com:floor",{"_index":1448,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dtmi:example:com:floor4;2",{"_index":1438,"title":{},"name":{},"text":{"38":{}},"component":{}}],["dump",{"_index":2729,"title":{},"name":{},"text":{"41":{}},"component":{}}],["duplic",{"_index":2075,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["durabl",{"_index":2106,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["durat",{"_index":1364,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["durationm",{"_index":1630,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["dure",{"_index":212,"title":{"38-39":{}},"name":{},"text":{"5":{},"10":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["dynam",{"_index":2248,"title":{},"name":{},"text":{"39":{},"44":{}},"component":{}}],["e",{"_index":1070,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["e48e8c6285d5']\\\",\\\"starttimeutc\\\":\\\"wednesday",{"_index":2431,"title":{},"name":{},"text":{"40":{}},"component":{}}],["each",{"_index":82,"title":{},"name":{},"text":{"1":{},"18":{},"21":{},"27":{},"28":{},"30":{},"32":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["earli",{"_index":665,"title":{},"name":{},"text":{"23":{},"30":{}},"component":{}}],["earlier",{"_index":724,"title":{},"name":{},"text":{"25":{},"38":{}},"component":{}}],["eas",{"_index":2718,"title":{},"name":{},"text":{"41":{}},"component":{}}],["easi",{"_index":83,"title":{},"name":{},"text":{"1":{},"40":{},"41":{}},"component":{}}],["easier",{"_index":2583,"title":{},"name":{},"text":{"41":{}},"component":{}}],["easili",{"_index":93,"title":{},"name":{},"text":{"1":{},"25":{},"39":{},"41":{},"42":{}},"component":{}}],["eason",{"_index":933,"title":{},"name":{},"text":{"35":{}},"component":{}}],["echo",{"_index":451,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ecosystem",{"_index":2359,"title":{},"name":{},"text":{"39":{}},"component":{}}],["edg",{"_index":1384,"title":{"41-10":{},"41-14":{},"41-156":{},"41-157":{},"41-158":{},"41-159":{},"41-161":{},"41-162":{},"41-165":{},"41-175":{},"41-176":{},"41-177":{},"41-181":{},"41-182":{},"41-185":{},"41-186":{},"41-196":{},"41-214":{},"41-217":{},"41-220":{},"41-226":{},"41-227":{},"41-231":{},"41-232":{},"41-233":{},"41-238":{},"41-242":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["edgeag",{"_index":2648,"title":{},"name":{},"text":{"41":{}},"component":{}}],["edgehub",{"_index":2652,"title":{},"name":{},"text":{"41":{}},"component":{}}],["edit",{"_index":1386,"title":{"44-2":{}},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["editor",{"_index":1151,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["effect",{"_index":582,"title":{},"name":{},"text":{"21":{},"23":{},"36":{},"39":{},"41":{}},"component":{}}],["effici",{"_index":2284,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["effort",{"_index":2824,"title":{},"name":{},"text":{"41":{}},"component":{}}],["eg",{"_index":2350,"title":{},"name":{},"text":{"39":{}},"component":{}}],["egde_devic",{"_index":2937,"title":{},"name":{},"text":{"41":{}},"component":{}}],["egde_device=\"edg",{"_index":2930,"title":{},"name":{},"text":{"41":{}},"component":{}}],["egress",{"_index":1187,"title":{"38-5":{},"38-50":{},"38-53":{},"38-54":{},"38-55":{},"38-64":{}},"name":{},"text":{"38":{}},"component":{}}],["egtesthub1",{"_index":2320,"title":{},"name":{},"text":{"39":{}},"component":{}}],["ek",{"_index":1958,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ek_pub",{"_index":1965,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["elaps",{"_index":1586,"title":{},"name":{},"text":{"38":{}},"component":{}}],["electr",{"_index":130,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["electron",{"_index":2707,"title":{},"name":{},"text":{"41":{}},"component":{}}],["element",{"_index":219,"title":{"38-8":{}},"name":{},"text":{"5":{},"10":{},"27":{},"38":{},"39":{},"41":{}},"component":{}}],["elev",{"_index":2636,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ellips",{"_index":249,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["elsewher",{"_index":2235,"title":{},"name":{},"text":{"39":{}},"component":{}}],["em",{"_index":250,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["email",{"_index":2297,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["emb",{"_index":2861,"title":{},"name":{},"text":{"41":{}},"component":{}}],["embed",{"_index":1930,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["emerg",{"_index":2589,"title":{},"name":{},"text":{"41":{}},"component":{}}],["emit",{"_index":1435,"title":{},"name":{},"text":{"38":{},"39":{},"40":{}},"component":{}}],["employe",{"_index":3182,"title":{},"name":{},"text":{"44":{}},"component":{}}],["empti",{"_index":477,"title":{},"name":{},"text":{"20":{},"21":{},"34":{},"38":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["enabl",{"_index":285,"title":{"41-7":{},"41-8":{}},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["enable/dis",{"_index":2165,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["encapsul",{"_index":1294,"title":{},"name":{},"text":{"38":{}},"component":{}}],["enclav",{"_index":2663,"title":{},"name":{},"text":{"41":{}},"component":{}}],["encod",{"_index":1920,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["encoding.utf8.getstring(eventdata.getbyt",{"_index":2472,"title":{},"name":{},"text":{"40":{}},"component":{}}],["encrypt",{"_index":1968,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["encryption/decrypt",{"_index":3200,"title":{},"name":{},"text":{"44":{}},"component":{}}],["end",{"_index":54,"title":{"39-58":{},"41-81":{},"41-249":{}},"name":{},"text":{"1":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["endors",{"_index":1723,"title":{"39-63":{},"41-86":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["endpoint",{"_index":1199,"title":{"38-23":{},"39-16":{},"39-17":{},"39-18":{},"39-114":{},"39-116":{},"39-117":{},"39-118":{},"39-119":{},"41-39":{},"41-40":{},"41-41":{},"41-136":{},"41-138":{},"41-139":{},"41-140":{},"41-141":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["endpoint(",{"_index":2206,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["endpointeventgridinvalidkey",{"_index":1685,"title":{},"name":{},"text":{"38":{}},"component":{}}],["endpointnam",{"_index":1667,"title":{},"name":{},"text":{"38":{}},"component":{}}],["endpointname\\\":\\\"\\\",\\\"messageid\\\":,\\\"details\\\":\\\"\\\",\\\"routenam",{"_index":2409,"title":{},"name":{},"text":{"40":{}},"component":{}}],["endpointunhealthi",{"_index":2408,"title":{},"name":{},"text":{"40":{}},"component":{}}],["ends_with($body.$metadata.$model",{"_index":1463,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ends_with(x,i",{"_index":1462,"title":{},"name":{},"text":{"38":{}},"component":{}}],["energi",{"_index":1232,"title":{},"name":{},"text":{"38":{}},"component":{}}],["enforc",{"_index":909,"title":{},"name":{},"text":{"33":{},"39":{},"41":{}},"component":{}}],["engin",{"_index":60,"title":{"44":{},"41-209":{}},"name":{},"text":{"1":{},"39":{},"41":{},"44":{}},"component":{}}],["engineer’",{"_index":3186,"title":{},"name":{},"text":{"44":{}},"component":{}}],["english",{"_index":1092,"title":{},"name":{},"text":{"36":{}},"component":{}}],["enough",{"_index":2862,"title":{},"name":{},"text":{"41":{}},"component":{}}],["enqueuedtim",{"_index":2119,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["enrich",{"_index":1749,"title":{"39-132":{},"41-154":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["enrol",{"_index":1716,"title":{"39-44":{},"39-47":{},"39-52":{},"39-53":{},"39-54":{},"39-104":{},"39-105":{},"39-106":{},"41-67":{},"41-70":{},"41-75":{},"41-76":{},"41-77":{},"41-126":{},"41-127":{},"41-128":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["enrollmentread",{"_index":2050,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["enrollmentwrit",{"_index":2056,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ensur",{"_index":728,"title":{},"name":{},"text":{"25":{},"39":{},"41":{}},"component":{}}],["enter",{"_index":1423,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["enterpris",{"_index":41,"title":{},"name":{},"text":{"1":{},"39":{},"41":{},"44":{}},"component":{}}],["entir",{"_index":174,"title":{},"name":{},"text":{"3":{},"8":{},"23":{},"38":{},"41":{},"42":{}},"component":{}}],["entiti",{"_index":217,"title":{"39-58":{},"41-81":{}},"name":{},"text":{"5":{},"10":{},"38":{},"39":{},"41":{}},"component":{}}],["entri",{"_index":1617,"title":{"39-104":{},"41-126":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["enul",{"_index":2036,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["enum",{"_index":1365,"title":{},"name":{},"text":{"38":{}},"component":{}}],["environ",{"_index":1183,"title":{"38-1":{},"38-2":{},"41-232":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["environment/5",{"_index":2650,"title":{},"name":{},"text":{"41":{}},"component":{}}],["envis",{"_index":2219,"title":{},"name":{},"text":{"39":{}},"component":{}}],["equal",{"_index":1913,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["equip",{"_index":1387,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["equival",{"_index":586,"title":{},"name":{},"text":{"21":{},"36":{},"43":{}},"component":{}}],["eras",{"_index":1966,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["error",{"_index":874,"title":{},"name":{},"text":{"32":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["es",{"_index":2687,"title":{},"name":{},"text":{"41":{}},"component":{}}],["esc",{"_index":2977,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["escap",{"_index":2751,"title":{},"name":{},"text":{"41":{},"42":{},"43":{}},"component":{}}],["especi",{"_index":2949,"title":{},"name":{},"text":{"41":{}},"component":{}}],["establish",{"_index":1276,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["etag",{"_index":1859,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["etag\":\"aaaaaaaaaa",{"_index":2492,"title":{},"name":{},"text":{"40":{}},"component":{}}],["etc",{"_index":739,"title":{},"name":{},"text":{"26":{},"36":{},"38":{},"41":{}},"component":{}}],["evalu",{"_index":581,"title":{},"name":{},"text":{"21":{},"23":{},"34":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["even",{"_index":727,"title":{},"name":{},"text":{"25":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["evenli",{"_index":1911,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["event",{"_index":1102,"title":{"38-24":{},"38-25":{},"38-49":{},"39-121":{},"39-137":{},"39-138":{},"39-141":{},"39-142":{},"39-145":{},"39-147":{},"39-148":{},"39-150":{},"39-151":{},"39-153":{},"39-157":{},"39-158":{},"39-159":{},"39-164":{},"39-165":{},"39-166":{},"39-167":{},"40-8":{},"41-143":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["eventdata",{"_index":2469,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventgrid",{"_index":1672,"title":{},"name":{},"text":{"38":{}},"component":{}}],["eventhub",{"_index":2441,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubcli",{"_index":2443,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubclient.createfromconnectionstring(connectionstr",{"_index":2450,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubclient.getdefaultconsumergroup().createreceiver(partit",{"_index":2465,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubclient.getruntimeinformationasync().partitionid",{"_index":2452,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubreceiv",{"_index":2464,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubreceiver.closeasync",{"_index":2468,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventhubreceiver.receiveasync(new",{"_index":2470,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventprocessedutctime\\\":\\\"\\\",\\\"eventenqueuedutctim",{"_index":2401,"title":{},"name":{},"text":{"40":{}},"component":{}}],["eventroutesoper",{"_index":1670,"title":{},"name":{},"text":{"38":{}},"component":{}}],["eventtim",{"_index":2312,"title":{},"name":{},"text":{"39":{}},"component":{}}],["eventtyp",{"_index":2303,"title":{},"name":{},"text":{"39":{}},"component":{}}],["eventu",{"_index":2767,"title":{},"name":{},"text":{"41":{}},"component":{}}],["everyon",{"_index":1060,"title":{},"name":{},"text":{"36":{}},"component":{}}],["everyone’",{"_index":1063,"title":{},"name":{},"text":{"36":{}},"component":{}}],["everyth",{"_index":851,"title":{},"name":{},"text":{"30":{},"42":{},"43":{}},"component":{}}],["evident/self",{"_index":1123,"title":{},"name":{},"text":{"36":{}},"component":{}}],["exact",{"_index":2084,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["exactli",{"_index":687,"title":{},"name":{},"text":{"23":{},"27":{},"33":{},"36":{},"43":{}},"component":{}}],["examin",{"_index":2518,"title":{"41-205":{},"41-230":{}},"name":{},"text":{"41":{}},"component":{}}],["exampl",{"_index":152,"title":{"38-11":{},"38-14":{},"41-185":{},"41-204":{}},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"25":{},"26":{},"28":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["exce",{"_index":2209,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["exceed",{"_index":2394,"title":{},"name":{},"text":{"40":{}},"component":{}}],["except",{"_index":220,"title":{},"name":{},"text":{"5":{},"10":{},"24":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["exchang",{"_index":3036,"title":{},"name":{},"text":{"42":{},"43":{},"44":{}},"component":{}}],["exclud",{"_index":2794,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["exclus",{"_index":2906,"title":{},"name":{},"text":{"41":{}},"component":{}}],["execut",{"_index":71,"title":{},"name":{},"text":{"1":{},"36":{},"41":{},"42":{},"43":{}},"component":{}}],["exist",{"_index":686,"title":{},"name":{},"text":{"23":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["existingproperti",{"_index":2966,"title":{},"name":{},"text":{"41":{}},"component":{}}],["exit",{"_index":297,"title":{},"name":{},"text":{"6":{},"11":{},"21":{},"23":{},"24":{},"33":{},"34":{},"42":{},"43":{}},"component":{}}],["exit.\\n",{"_index":2449,"title":{},"name":{},"text":{"40":{}},"component":{}}],["expand",{"_index":1417,"title":{},"name":{},"text":{"38":{}},"component":{}}],["expect",{"_index":1318,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["experi",{"_index":35,"title":{},"name":{},"text":{"1":{},"41":{},"44":{}},"component":{}}],["experiment",{"_index":274,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["expir",{"_index":1931,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["expiri",{"_index":1984,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["explain",{"_index":1051,"title":{},"name":{},"text":{"36":{}},"component":{}}],["explicit",{"_index":749,"title":{},"name":{},"text":{"26":{},"32":{}},"component":{}}],["explicitli",{"_index":795,"title":{},"name":{},"text":{"28":{},"34":{},"41":{}},"component":{}}],["explor",{"_index":1385,"title":{"41-17":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["exponenti",{"_index":2294,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["export",{"_index":1855,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["expos",{"_index":1376,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["exposur",{"_index":2703,"title":{},"name":{},"text":{"41":{}},"component":{}}],["expr",{"_index":3165,"title":{},"name":{},"text":{"43":{}},"component":{}}],["expr1",{"_index":601,"title":{},"name":{},"text":{"21":{}},"component":{}}],["expr2",{"_index":603,"title":{},"name":{},"text":{"21":{}},"component":{}}],["express",{"_index":570,"title":{"22":{},"39-126":{},"39-128":{},"39-130":{},"41-148":{},"41-150":{},"41-152":{},"43-27":{}},"name":{},"text":{"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["extend",{"_index":1372,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["extens",{"_index":1147,"title":{},"name":{},"text":{"36":{},"38":{},"41":{},"42":{}},"component":{}}],["extern",{"_index":1282,"title":{},"name":{},"text":{"38":{},"40":{},"44":{}},"component":{}}],["extra",{"_index":1763,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["extract",{"_index":1281,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["f",{"_index":523,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"42":{},"43":{}},"component":{}}],["f6bbf8f4",{"_index":2305,"title":{},"name":{},"text":{"39":{}},"component":{}}],["f6f45831",{"_index":1675,"title":{},"name":{},"text":{"38":{}},"component":{}}],["face",{"_index":1820,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["facilit",{"_index":1842,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["fact",{"_index":701,"title":{},"name":{},"text":{"25":{}},"component":{}}],["factor",{"_index":3236,"title":{},"name":{},"text":{"44":{}},"component":{}}],["factori",{"_index":1154,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["factory’",{"_index":1941,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["fail",{"_index":830,"title":{},"name":{},"text":{"30":{},"32":{},"39":{},"40":{},"41":{}},"component":{}}],["failur",{"_index":504,"title":{"21-3":{}},"name":{},"text":{"21":{},"30":{},"34":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["fall",{"_index":2832,"title":{},"name":{},"text":{"41":{}},"component":{}}],["fallback",{"_index":1746,"title":{"39-120":{},"41-142":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["fallbackrouteproperti",{"_index":2166,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["fals",{"_index":599,"title":{},"name":{},"text":{"21":{},"34":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["famili",{"_index":1459,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["familiar",{"_index":1504,"title":{},"name":{},"text":{"38":{}},"component":{}}],["fan",{"_index":1762,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["far",{"_index":746,"title":{},"name":{},"text":{"26":{}},"component":{}}],["farm",{"_index":1231,"title":{},"name":{},"text":{"38":{}},"component":{}}],["fast",{"_index":989,"title":{},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["favourit",{"_index":3147,"title":{},"name":{},"text":{"43":{}},"component":{}}],["fe2g",{"_index":2327,"title":{},"name":{},"text":{"39":{}},"component":{}}],["featur",{"_index":406,"title":{"39-1":{},"39-9":{},"41-32":{},"44-11":{}},"name":{},"text":{"18":{},"36":{},"38":{},"39":{},"41":{},"42":{},"44":{}},"component":{}}],["features.aircondit",{"_index":403,"title":{},"name":{},"text":{"18":{}},"component":{}}],["features.brak",{"_index":405,"title":{},"name":{},"text":{"18":{}},"component":{}}],["feb",{"_index":2192,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["fed",{"_index":633,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["feed",{"_index":1108,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["feedback",{"_index":2130,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["fetch",{"_index":995,"title":{},"name":{},"text":{"36":{}},"component":{}}],["few",{"_index":1466,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["fewer",{"_index":2775,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["fidel",{"_index":2865,"title":{},"name":{},"text":{"41":{}},"component":{}}],["fido2",{"_index":3233,"title":{},"name":{},"text":{"44":{}},"component":{}}],["field",{"_index":1192,"title":{"38-9":{},"38-10":{},"38-11":{},"41-10":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["field/edg",{"_index":2539,"title":{},"name":{},"text":{"41":{}},"component":{}}],["fifo",{"_index":2262,"title":{},"name":{},"text":{"39":{}},"component":{}}],["figur",{"_index":967,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["file",{"_index":80,"title":{"36-17":{}},"name":{},"text":{"1":{},"6":{},"11":{},"16":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["filenam",{"_index":3124,"title":{},"name":{},"text":{"43":{}},"component":{}}],["filepath",{"_index":3123,"title":{},"name":{},"text":{"43":{}},"component":{}}],["filesystem",{"_index":2836,"title":{},"name":{},"text":{"41":{}},"component":{}}],["filetyp",{"_index":3009,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["fileuploadoper",{"_index":2412,"title":{},"name":{},"text":{"40":{}},"component":{}}],["fill",{"_index":1695,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["filter",{"_index":1201,"title":{"38-25":{},"38-26":{},"38-27":{},"39-164":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["filter\\\":\\\"deviceid",{"_index":2426,"title":{},"name":{},"text":{"40":{}},"component":{}}],["filtermodul",{"_index":2812,"title":{},"name":{},"text":{"41":{}},"component":{}}],["filtertoiothub",{"_index":2817,"title":{},"name":{},"text":{"41":{}},"component":{}}],["final",{"_index":584,"title":{},"name":{},"text":{"21":{},"23":{},"26":{},"39":{},"41":{}},"component":{}}],["financ",{"_index":2952,"title":{},"name":{},"text":{"41":{}},"component":{}}],["financi",{"_index":2237,"title":{},"name":{},"text":{"39":{}},"component":{}}],["find",{"_index":84,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"30":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["fine",{"_index":1825,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["fingerprint",{"_index":3227,"title":{},"name":{},"text":{"44":{}},"component":{}}],["finish",{"_index":289,"title":{},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"41":{}},"component":{}}],["fire",{"_index":1413,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["firmwar",{"_index":1843,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["first",{"_index":225,"title":{},"name":{},"text":{"5":{},"10":{},"21":{},"26":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["first_thi",{"_index":1103,"title":{},"name":{},"text":{"36":{}},"component":{}}],["fit",{"_index":716,"title":{},"name":{},"text":{"25":{},"36":{},"42":{},"43":{}},"component":{}}],["five",{"_index":122,"title":{},"name":{},"text":{"2":{},"7":{},"39":{},"41":{},"43":{},"44":{}},"component":{}}],["fix",{"_index":1114,"title":{},"name":{},"text":{"36":{},"40":{}},"component":{}}],["flag",{"_index":3115,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["flank",{"_index":255,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["flatten",{"_index":770,"title":{},"name":{},"text":{"27":{}},"component":{}}],["fleet",{"_index":2530,"title":{},"name":{},"text":{"41":{}},"component":{}}],["flexibl",{"_index":1250,"title":{"41-13":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["flicker",{"_index":2351,"title":{},"name":{},"text":{"39":{}},"component":{}}],["flight",{"_index":1850,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["floor",{"_index":1248,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["floor;1",{"_index":1464,"title":{},"name":{},"text":{"38":{}},"component":{}}],["flow",{"_index":825,"title":{"41-3":{},"41-4":{}},"name":{},"text":{"30":{},"32":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["fluff",{"_index":1052,"title":{},"name":{},"text":{"36":{}},"component":{}}],["focal",{"_index":2653,"title":{},"name":{},"text":{"41":{}},"component":{}}],["focu",{"_index":897,"title":{},"name":{},"text":{"32":{},"38":{}},"component":{}}],["folder",{"_index":2025,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["follow",{"_index":57,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"28":{},"30":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{}},"component":{}}],["foo",{"_index":988,"title":{},"name":{},"text":{"36":{}},"component":{}}],["for..in..do",{"_index":784,"title":{},"name":{},"text":{"27":{}},"component":{}}],["foreach",{"_index":2455,"title":{},"name":{},"text":{"40":{}},"component":{}}],["forev",{"_index":3108,"title":{},"name":{},"text":{"42":{}},"component":{}}],["forgot",{"_index":1008,"title":{},"name":{},"text":{"36":{},"42":{}},"component":{}}],["fork",{"_index":129,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["form",{"_index":246,"title":{"38-3":{}},"name":{},"text":{"5":{},"10":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["format",{"_index":172,"title":{"3":{},"8":{},"39-108":{},"41-130":{}},"name":{"3":{},"8":{}},"text":{"3":{},"8":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["forward",{"_index":2550,"title":{},"name":{},"text":{"41":{},"42":{},"43":{}},"component":{}}],["found",{"_index":1479,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"43":{}},"component":{}}],["four",{"_index":743,"title":{},"name":{},"text":{"26":{},"36":{},"39":{},"41":{},"44":{}},"component":{}}],["fourth",{"_index":3128,"title":{},"name":{},"text":{"43":{}},"component":{}}],["framework",{"_index":2018,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["free",{"_index":103,"title":{"44-3":{}},"name":{},"text":{"1":{},"39":{},"41":{},"44":{}},"component":{}}],["frequent",{"_index":2352,"title":{},"name":{},"text":{"39":{}},"component":{}}],["fresh",{"_index":2569,"title":{},"name":{},"text":{"41":{}},"component":{}}],["friendli",{"_index":1356,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["frontcamera",{"_index":1303,"title":{},"name":{},"text":{"38":{}},"component":{}}],["fsharp",{"_index":925,"title":{"35":{}},"name":{},"text":{"35":{}},"component":{}}],["fulfil",{"_index":2884,"title":{},"name":{},"text":{"41":{}},"component":{}}],["full",{"_index":1265,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["fulli",{"_index":2270,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["fun",{"_index":597,"title":{},"name":{},"text":{"21":{},"26":{},"27":{},"28":{},"29":{}},"component":{}}],["function",{"_index":649,"title":{"38-48":{}},"name":{},"text":{"22":{},"23":{},"25":{},"27":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["functorun",{"_index":682,"title":{},"name":{},"text":{"23":{}},"component":{}}],["fundament",{"_index":2367,"title":{},"name":{},"text":{"40":{}},"component":{}}],["further",{"_index":1366,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["futur",{"_index":2079,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["g",{"_index":2990,"title":{"43-22":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ga",{"_index":2272,"title":{},"name":{},"text":{"39":{},"43":{}},"component":{}}],["gain",{"_index":2581,"title":{},"name":{},"text":{"41":{}},"component":{}}],["game",{"_index":1046,"title":{},"name":{},"text":{"36":{}},"component":{}}],["garbag",{"_index":936,"title":{"36-4":{}},"name":{},"text":{"36":{}},"component":{}}],["gatekeep",{"_index":2658,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gateway",{"_index":1894,"title":{"41-10":{},"41-20":{},"41-226":{},"41-227":{},"41-230":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["gatewayhostnam",{"_index":2713,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gather",{"_index":2549,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gb",{"_index":2242,"title":{},"name":{},"text":{"39":{}},"component":{}}],["gb/day/unit",{"_index":1798,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["gc",{"_index":1028,"title":{},"name":{},"text":{"36":{}},"component":{}}],["gear",{"_index":2955,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gen2",{"_index":2142,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["gener",{"_index":669,"title":{"39-88":{},"41-110":{}},"name":{},"text":{"23":{},"25":{},"27":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["generationid",{"_index":2137,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["genuin",{"_index":1955,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["geograph",{"_index":2571,"title":{},"name":{},"text":{"41":{}},"component":{}}],["geolocation/geolat",{"_index":2096,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["geospati",{"_index":2568,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gestur",{"_index":3226,"title":{},"name":{},"text":{"44":{}},"component":{}}],["get",{"_index":1587,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"44":{}},"component":{}}],["getcustomerid",{"_index":876,"title":{},"name":{},"text":{"32":{}},"component":{}}],["getlastorderforcustom",{"_index":878,"title":{},"name":{},"text":{"32":{}},"component":{}}],["getlastproductforord",{"_index":881,"title":{},"name":{},"text":{"32":{}},"component":{}}],["gf",{"_index":3143,"title":{},"name":{},"text":{"43":{}},"component":{}}],["gg",{"_index":2992,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ggdg",{"_index":3002,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["gi",{"_index":3148,"title":{},"name":{},"text":{"43":{}},"component":{}}],["giant",{"_index":956,"title":{},"name":{},"text":{"36":{}},"component":{}}],["git",{"_index":419,"title":{"36":{},"20-2":{},"36-2":{},"36-7":{},"36-11":{},"36-12":{},"36-13":{},"36-14":{},"36-15":{}},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["git.net",{"_index":954,"title":{},"name":{},"text":{"36":{}},"component":{}}],["git.net/sections/rebas",{"_index":1075,"title":{},"name":{},"text":{"36":{}},"component":{}}],["git.net/sections/test",{"_index":1053,"title":{},"name":{},"text":{"36":{}},"component":{}}],["git/refs/head",{"_index":985,"title":{},"name":{},"text":{"36":{}},"component":{}}],["git_deployment_url",{"_index":458,"title":{},"name":{},"text":{"20":{}},"component":{}}],["github",{"_index":377,"title":{},"name":{},"text":{"18":{},"20":{},"36":{},"39":{},"41":{}},"component":{}}],["gitx",{"_index":979,"title":{},"name":{},"text":{"36":{}},"component":{}}],["give",{"_index":756,"title":{},"name":{},"text":{"26":{},"29":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["given",{"_index":2692,"title":{},"name":{},"text":{"41":{}},"component":{}}],["glob",{"_index":1489,"title":{},"name":{},"text":{"38":{}},"component":{}}],["global",{"_index":282,"title":{},"name":{},"text":{"6":{},"11":{},"36":{},"41":{},"42":{},"44":{}},"component":{}}],["gn",{"_index":3151,"title":{},"name":{},"text":{"43":{}},"component":{}}],["go",{"_index":58,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"26":{},"29":{},"32":{},"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["goal",{"_index":1184,"title":{"38-1":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["goe",{"_index":2114,"title":{},"name":{},"text":{"39":{},"41":{},"42":{}},"component":{}}],["gone",{"_index":2059,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["good",{"_index":651,"title":{},"name":{},"text":{"22":{},"29":{},"36":{},"41":{}},"component":{}}],["good1",{"_index":817,"title":{},"name":{},"text":{"29":{}},"component":{}}],["good2",{"_index":818,"title":{},"name":{},"text":{"29":{}},"component":{}}],["grade",{"_index":2896,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gradual",{"_index":1512,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["grain",{"_index":1826,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["grant",{"_index":492,"title":{},"name":{},"text":{"20":{},"38":{},"39":{},"41":{}},"component":{}}],["graph",{"_index":957,"title":{"38-17":{},"38-19":{},"38-45":{},"38-46":{}},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["grasp",{"_index":711,"title":{},"name":{},"text":{"25":{}},"component":{}}],["great",{"_index":2894,"title":{},"name":{},"text":{"41":{}},"component":{}}],["greater",{"_index":257,"title":{},"name":{},"text":{"5":{},"10":{},"38":{},"39":{}},"component":{}}],["grid",{"_index":1268,"title":{"39-141":{},"39-145":{},"39-167":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["grid.westu",{"_index":1673,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ground",{"_index":1076,"title":{},"name":{},"text":{"36":{}},"component":{}}],["group",{"_index":430,"title":{"39-54":{},"39-105":{},"39-106":{},"41-77":{},"41-127":{},"41-128":{},"44-13":{}},"name":{},"text":{"20":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["group’",{"_index":2087,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["gt",{"_index":3050,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["gu",{"_index":3155,"title":{},"name":{},"text":{"43":{}},"component":{}}],["guarante",{"_index":1921,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["guard",{"_index":2681,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gub",{"_index":2011,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["guest",{"_index":2368,"title":{},"name":{},"text":{"40":{},"41":{},"44":{}},"component":{}}],["guid",{"_index":1637,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["guidanc",{"_index":1316,"title":{},"name":{},"text":{"38":{}},"component":{}}],["guidelin",{"_index":509,"title":{"21-6":{}},"name":{},"text":{"36":{},"41":{}},"component":{}}],["guiw",{"_index":3156,"title":{},"name":{},"text":{"43":{}},"component":{}}],["gv",{"_index":3150,"title":{},"name":{},"text":{"43":{}},"component":{}}],["gx",{"_index":3146,"title":{},"name":{},"text":{"43":{}},"component":{}}],["gym",{"_index":1368,"title":{},"name":{},"text":{"38":{}},"component":{}}],["h",{"_index":1069,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["half",{"_index":2996,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["hand",{"_index":638,"title":{},"name":{},"text":{"22":{},"24":{},"32":{},"39":{},"41":{}},"component":{}}],["handi",{"_index":3170,"title":{},"name":{},"text":{"43":{}},"component":{}}],["handl",{"_index":893,"title":{},"name":{},"text":{"32":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["handler",{"_index":1753,"title":{"39-151":{}},"name":{},"text":{"39":{}},"component":{}}],["hannover01",{"_index":2640,"title":{},"name":{},"text":{"41":{}},"component":{}}],["happen",{"_index":546,"title":{},"name":{},"text":{"21":{},"23":{},"36":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["hard",{"_index":1083,"title":{},"name":{},"text":{"36":{}},"component":{}}],["hardcod",{"_index":1778,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["harden",{"_index":2654,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hardwar",{"_index":1721,"title":{"39-61":{},"41-6":{},"41-84":{},"41-173":{},"41-174":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hasac",{"_index":402,"title":{},"name":{},"text":{"18":{}},"component":{}}],["hasbrak",{"_index":404,"title":{},"name":{},"text":{"18":{}},"component":{}}],["hash",{"_index":1019,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["have",{"_index":1262,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["haven’t",{"_index":2758,"title":{},"name":{},"text":{"41":{}},"component":{}}],["header",{"_index":277,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["health",{"_index":1218,"title":{"38-67":{},"40-9":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["healthi",{"_index":2476,"title":{},"name":{},"text":{"40":{}},"component":{}}],["heartbeat",{"_index":2363,"title":{"40-11":{}},"name":{},"text":{"40":{}},"component":{}}],["height",{"_index":3040,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["heirarchi",{"_index":1940,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hello",{"_index":12,"title":{},"name":{},"text":{"1":{},"21":{},"34":{},"42":{},"44":{}},"component":{}}],["helm",{"_index":2916,"title":{},"name":{},"text":{"41":{}},"component":{}}],["help",{"_index":111,"title":{"36-14":{}},"name":{},"text":{"2":{},"7":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["helpdesk",{"_index":3224,"title":{},"name":{},"text":{"44":{}},"component":{}}],["helper",{"_index":2565,"title":{},"name":{},"text":{"41":{}},"component":{}}],["here",{"_index":104,"title":{},"name":{},"text":{"1":{},"29":{},"30":{},"32":{},"36":{},"38":{},"41":{}},"component":{}}],["here’",{"_index":1091,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["hexadecim",{"_index":230,"title":{},"name":{},"text":{"5":{},"10":{},"43":{}},"component":{}}],["hey",{"_index":1085,"title":{},"name":{},"text":{"36":{}},"component":{}}],["hidden",{"_index":3010,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["hide",{"_index":798,"title":{},"name":{},"text":{"28":{},"36":{}},"component":{}}],["hierarch",{"_index":1946,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hierarchi",{"_index":2514,"title":{"41-185":{}},"name":{},"text":{"41":{}},"component":{}}],["high",{"_index":1725,"title":{"39-66":{},"41-89":{}},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["higher",{"_index":1938,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["highest",{"_index":2668,"title":{},"name":{},"text":{"41":{}},"component":{}}],["highli",{"_index":2256,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["highlight",{"_index":170,"title":{"3-3":{},"8-3":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["hijack",{"_index":2065,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["histor",{"_index":2578,"title":{},"name":{},"text":{"41":{}},"component":{}}],["histori",{"_index":1042,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["hit",{"_index":1590,"title":{},"name":{},"text":{"38":{},"42":{},"43":{}},"component":{}}],["hmac",{"_index":1980,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hold",{"_index":2155,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["holder",{"_index":1945,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hole",{"_index":3106,"title":{},"name":{},"text":{"42":{}},"component":{}}],["home",{"_index":10,"title":{"1":{},"16-2":{},"16-3":{}},"name":{},"text":{"16":{}},"component":{}}],["homesit",{"_index":105,"title":{},"name":{},"text":{},"component":{"1":{}}}],["horizont",{"_index":3029,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["hospit",{"_index":2953,"title":{},"name":{},"text":{"41":{}},"component":{}}],["host",{"_index":483,"title":{"41-213":{}},"name":{},"text":{"20":{},"41":{}},"component":{}}],["hostconfig",{"_index":2948,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hostconfig\\\":{\\\"portbindings\\\":{\\\"443/tcp\\\":[{\\\"hostport\\\":\\\"443\\\"}],\\\"5671/tcp\\\":[{\\\"hostport\\\":\\\"5671\\\"}],\\\"8883/tcp\\\":[{\\\"hostport\\\":\\\"8883",{"_index":2809,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hostnam",{"_index":1432,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["hot",{"_index":2186,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hot/warm/cold",{"_index":2532,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hour",{"_index":2293,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["hous",{"_index":1835,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hsm",{"_index":1932,"title":{"41-173":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["html",{"_index":226,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["http",{"_index":1603,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["http://$webappnam",{"_index":472,"title":{},"name":{},"text":{"20":{}},"component":{}}],["http://$webappname.azurewebsites.net",{"_index":455,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://docs.docker.com/engine/api/v1.32/#operation/containercr",{"_index":2958,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://github.com//simpl",{"_index":1107,"title":{},"name":{},"text":{"36":{}},"component":{}}],["https://github.com/azure/azur",{"_index":2023,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["https://github.com/azure/iotedgedev/wiki",{"_index":2904,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://github.com/toolboc/azur",{"_index":2914,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://go.microsoft.com/fwlink/?linkid=307137",{"_index":481,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://hub.docker.com/r/microsoft/iotedgedev",{"_index":2912,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://learn.microsoft.com/en",{"_index":2039,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["https://myinstancename.api.scus.digitaltwins.azure.net/digitaltwins/factori",{"_index":1659,"title":{},"name":{},"text":{"38":{}},"component":{}}],["https://pypi.org/project/iotedgehubdev",{"_index":2910,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://think",{"_index":953,"title":{},"name":{},"text":{"36":{}},"component":{}}],["hub",{"_index":1165,"title":{"39":{},"39-1":{},"39-7":{},"39-11":{},"39-14":{},"39-15":{},"39-16":{},"39-19":{},"39-24":{},"39-25":{},"39-30":{},"39-32":{},"39-33":{},"39-34":{},"39-42":{},"39-83":{},"39-107":{},"39-108":{},"39-109":{},"39-110":{},"39-113":{},"39-116":{},"39-123":{},"39-124":{},"39-133":{},"39-142":{},"39-157":{},"39-167":{},"40-5":{},"40-6":{},"40-8":{},"40-9":{},"41-15":{},"41-24":{},"41-34":{},"41-39":{},"41-65":{},"41-131":{},"41-132":{},"41-138":{},"41-155":{},"41-182":{},"41-214":{},"41-233":{},"41-234":{},"41-243":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["hub/tutori",{"_index":2041,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["hub:1.1",{"_index":2808,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hubnam",{"_index":2319,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{}}],["hub’",{"_index":1553,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["human",{"_index":2566,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hvac",{"_index":1311,"title":{},"name":{},"text":{"38":{}},"component":{}}],["hybrid",{"_index":2257,"title":{},"name":{},"text":{"39":{},"44":{}},"component":{}}],["hyper",{"_index":2891,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hyphen",{"_index":1927,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["i.",{"_index":1003,"title":{},"name":{},"text":{"36":{}},"component":{}}],["i/o",{"_index":1949,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["iaa",{"_index":2556,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iam",{"_index":1396,"title":{},"name":{},"text":{"38":{}},"component":{}}],["icon",{"_index":119,"title":{},"name":{},"text":{"2":{},"7":{},"39":{},"41":{}},"component":{}}],["id",{"_index":1020,"title":{"39-48":{},"39-49":{},"39-50":{},"41-71":{},"41-72":{},"41-73":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["idam",{"_index":3192,"title":{},"name":{},"text":{"44":{}},"component":{}}],["idea",{"_index":69,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ideal",{"_index":2231,"title":{},"name":{},"text":{"39":{}},"component":{}}],["ident",{"_index":694,"title":{"25":{},"39-25":{},"39-26":{},"39-27":{},"39-28":{},"39-32":{},"40-13":{},"40-14":{},"41-48":{},"41-49":{},"41-50":{},"41-51":{},"41-55":{},"41-176":{}},"name":{},"text":{"25":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["identifi",{"_index":983,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["identit",{"_index":1852,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["identitybuild",{"_index":721,"title":{},"name":{},"text":{"25":{}},"component":{}}],["identitywrappertyp",{"_index":695,"title":{},"name":{"25":{}},"text":{},"component":{}}],["id}/registrations/{registr",{"_index":1983,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ief",{"_index":3197,"title":{},"name":{},"text":{"44":{}},"component":{}}],["if/els",{"_index":809,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ignor",{"_index":679,"title":{},"name":{},"text":{"23":{}},"component":{}}],["illustr",{"_index":2526,"title":{},"name":{},"text":{"41":{}},"component":{}}],["imag",{"_index":165,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"38":{},"41":{}},"component":{}}],["image::https://learn.microsoft.com/en",{"_index":2371,"title":{},"name":{},"text":{"40":{}},"component":{}}],["imagepullpolici",{"_index":2630,"title":{},"name":{},"text":{"41":{}},"component":{}}],["imagin",{"_index":1005,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["imap",{"_index":3053,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["immedi",{"_index":677,"title":{},"name":{},"text":{"23":{},"38":{},"39":{},"41":{}},"component":{}}],["immut",{"_index":1492,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["impact",{"_index":1205,"title":{"38-34":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["imper",{"_index":1134,"title":{},"name":{},"text":{"36":{}},"component":{}}],["imperson",{"_index":2940,"title":{},"name":{},"text":{"41":{}},"component":{}}],["implement",{"_index":501,"title":{"21-3":{},"21-4":{},"21-5":{},"38-13":{}},"name":{},"text":{"21":{},"22":{},"25":{},"27":{},"33":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["implic",{"_index":1856,"title":{"41-183":{},"41-184":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["implicit",{"_index":2679,"title":{},"name":{},"text":{"41":{}},"component":{}}],["implicitli",{"_index":624,"title":{},"name":{},"text":{"22":{},"32":{},"39":{},"41":{}},"component":{}}],["import",{"_index":29,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"21":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["imposs",{"_index":2479,"title":{},"name":{},"text":{"40":{}},"component":{}}],["improperli",{"_index":2396,"title":{},"name":{},"text":{"40":{}},"component":{}}],["improv",{"_index":1998,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["inact",{"_index":3011,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["includ",{"_index":992,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["incognito",{"_index":305,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["incom",{"_index":1326,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["incomplet",{"_index":703,"title":{},"name":{},"text":{"25":{}},"component":{}}],["increas",{"_index":1097,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["increment",{"_index":1167,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["inde",{"_index":718,"title":{},"name":{},"text":{"25":{}},"component":{}}],["indefinit",{"_index":2646,"title":{},"name":{},"text":{"41":{}},"component":{}}],["independ",{"_index":1308,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["index",{"_index":11,"title":{},"name":{"1":{},"16":{},"37":{}},"text":{},"component":{}}],["index.adoc",{"_index":344,"title":{},"name":{},"text":{"16":{}},"component":{}}],["indic",{"_index":613,"title":{},"name":{},"text":{"21":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["indivicu",{"_index":2016,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["individu",{"_index":1486,"title":{"39-53":{},"39-104":{},"41-76":{},"41-126":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["industri",{"_index":2599,"title":{},"name":{},"text":{"41":{}},"component":{}}],["infix",{"_index":765,"title":{},"name":{},"text":{"26":{}},"component":{}}],["info",{"_index":1146,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["info/iot",{"_index":1902,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["infom",{"_index":3216,"title":{},"name":{},"text":{"44":{}},"component":{}}],["inform",{"_index":1355,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["informatio",{"_index":2639,"title":{},"name":{},"text":{"41":{}},"component":{}}],["infrastructur",{"_index":2228,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ingest",{"_index":1266,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["ingress",{"_index":1186,"title":{"38-4":{},"38-50":{},"38-51":{},"38-52":{},"38-57":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["ingressev",{"_index":1576,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ingresseventsfailurer",{"_index":1577,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ingresseventslat",{"_index":1580,"title":{},"name":{},"text":{"38":{}},"component":{}}],["inherit",{"_index":1196,"title":{"38-16":{}},"name":{},"text":{"38":{}},"component":{}}],["init",{"_index":812,"title":{},"name":{},"text":{"29":{}},"component":{}}],["initi",{"_index":1390,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["inject",{"_index":1953,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["inlin",{"_index":171,"title":{"3":{},"8":{}},"name":{"3":{},"8":{}},"text":{"3":{},"5":{},"8":{},"10":{},"31":{},"38":{},"43":{}},"component":{}}],["inner",{"_index":2908,"title":{},"name":{},"text":{"41":{}},"component":{}}],["inoremap",{"_index":3058,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["input",{"_index":634,"title":{},"name":{},"text":{"22":{},"25":{},"38":{},"41":{}},"component":{}}],["input1",{"_index":2613,"title":{},"name":{},"text":{"41":{}},"component":{}}],["insensit",{"_index":1924,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["insert",{"_index":298,"title":{},"name":{},"text":{"6":{},"11":{},"42":{},"43":{}},"component":{}}],["insert/visual/norm",{"_index":2974,"title":{},"name":{},"text":{"42":{}},"component":{}}],["insid",{"_index":691,"title":{},"name":{},"text":{"24":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["insight",{"_index":1245,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["inspect",{"_index":2618,"title":{},"name":{},"text":{"41":{}},"component":{}}],["instal",{"_index":1885,"title":{"41-171":{},"41-207":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["instanc",{"_index":536,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"28":{},"29":{},"33":{},"34":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["instantan",{"_index":2253,"title":{},"name":{},"text":{"39":{}},"component":{}}],["instanti",{"_index":2616,"title":{},"name":{},"text":{"41":{}},"component":{}}],["instead",{"_index":858,"title":{},"name":{},"text":{"30":{},"36":{},"38":{},"39":{},"41":{},"42":{},"44":{}},"component":{}}],["instruct",{"_index":1491,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["integ",{"_index":1450,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["integr",{"_index":1255,"title":{"39-4":{},"39-134":{},"39-145":{},"41-27":{},"41-163":{},"41-170":{},"41-175":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["intel",{"_index":2690,"title":{},"name":{},"text":{"41":{}},"component":{}}],["intellig",{"_index":2268,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["intellisens",{"_index":1477,"title":{},"name":{},"text":{"38":{}},"component":{}}],["intend",{"_index":75,"title":{},"name":{},"text":{"1":{},"36":{},"39":{},"41":{}},"component":{}}],["intens",{"_index":2600,"title":{},"name":{},"text":{"41":{}},"component":{}}],["intent",{"_index":64,"title":{},"name":{},"text":{"1":{}},"component":{}}],["interact",{"_index":1228,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["intercept",{"_index":2875,"title":{},"name":{},"text":{"41":{}},"component":{}}],["interconnect",{"_index":1225,"title":{},"name":{},"text":{"38":{}},"component":{}}],["interdepend",{"_index":1485,"title":{},"name":{},"text":{"38":{}},"component":{}}],["interest",{"_index":2275,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["interfac",{"_index":269,"title":{"6":{},"11":{},"41-166":{}},"name":{},"text":{"6":{},"11":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["intermedi",{"_index":1719,"title":{"39-57":{},"39-105":{},"41-80":{},"41-127":{},"41-180":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["intermitt",{"_index":2848,"title":{},"name":{},"text":{"41":{}},"component":{}}],["intern",{"_index":805,"title":{},"name":{},"text":{"28":{},"30":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["internet",{"_index":2561,"title":{},"name":{},"text":{"41":{}},"component":{}}],["interoper",{"_index":2099,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["interrel",{"_index":1315,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["interv",{"_index":1325,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["intervent",{"_index":2567,"title":{},"name":{},"text":{"41":{}},"component":{}}],["intial",{"_index":1908,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["intranet",{"_index":3185,"title":{},"name":{},"text":{"44":{}},"component":{}}],["introduc",{"_index":731,"title":{"26":{}},"name":{},"text":{"36":{}},"component":{}}],["introducingbind",{"_index":732,"title":{},"name":{"26":{}},"text":{},"component":{}}],["introduct",{"_index":0,"title":{"1-1":{}},"name":{},"text":{},"component":{}}],["invalid",{"_index":2715,"title":{},"name":{},"text":{"41":{}},"component":{}}],["investig",{"_index":2759,"title":{},"name":{},"text":{"41":{}},"component":{}}],["invoc",{"_index":1822,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["invok",{"_index":1561,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["involv",{"_index":1309,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["io",{"_index":3237,"title":{},"name":{},"text":{"44":{}},"component":{}}],["iot",{"_index":1193,"title":{"39":{},"40":{},"41":{},"38-10":{},"39-1":{},"39-7":{},"39-11":{},"39-14":{},"39-15":{},"39-16":{},"39-19":{},"39-24":{},"39-25":{},"39-30":{},"39-32":{},"39-33":{},"39-34":{},"39-35":{},"39-38":{},"39-42":{},"39-47":{},"39-52":{},"39-55":{},"39-61":{},"39-65":{},"39-70":{},"39-73":{},"39-74":{},"39-75":{},"39-79":{},"39-84":{},"39-87":{},"39-88":{},"39-89":{},"39-94":{},"39-95":{},"39-100":{},"39-102":{},"39-103":{},"39-107":{},"39-108":{},"39-109":{},"39-110":{},"39-113":{},"39-116":{},"39-123":{},"39-124":{},"39-131":{},"39-133":{},"39-134":{},"39-157":{},"39-167":{},"40-5":{},"40-6":{},"40-9":{},"41-1":{},"41-2":{},"41-6":{},"41-7":{},"41-10":{},"41-11":{},"41-14":{},"41-15":{},"41-18":{},"41-19":{},"41-24":{},"41-34":{},"41-39":{},"41-47":{},"41-65":{},"41-131":{},"41-132":{},"41-138":{},"41-155":{},"41-156":{},"41-157":{},"41-158":{},"41-159":{},"41-161":{},"41-162":{},"41-165":{},"41-175":{},"41-176":{},"41-177":{},"41-182":{},"41-185":{},"41-186":{},"41-196":{},"41-214":{},"41-217":{},"41-220":{},"41-226":{},"41-227":{},"41-231":{},"41-232":{},"41-233":{},"41-234":{},"41-238":{},"41-242":{},"41-243":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["iotedg",{"_index":2632,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iotedgegw.loc",{"_index":2734,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iotedgelog",{"_index":2856,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iotgateway",{"_index":2733,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iotgateway.ca",{"_index":2732,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iothub",{"_index":1757,"title":{},"name":{"39":{}},"text":{"39":{},"40":{},"41":{}},"component":{}}],["iothub/twin/patch/properties/desir",{"_index":2880,"title":{},"name":{},"text":{"41":{}},"component":{}}],["iothubnam",{"_index":2200,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["iotmonitor",{"_index":2364,"title":{},"name":{"40":{}},"text":{},"component":{}}],["ip",{"_index":1635,"title":{"41-7":{},"41-8":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["is_defined($connectionmoduleid",{"_index":2795,"title":{},"name":{},"text":{"41":{}},"component":{}}],["isbilledto",{"_index":1312,"title":{},"name":{},"text":{"38":{}},"component":{}}],["isn’t",{"_index":2245,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["iso8601",{"_index":2487,"title":{},"name":{},"text":{"40":{}},"component":{}}],["isol",{"_index":2685,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{}}],["issu",{"_index":1098,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["issuer",{"_index":2140,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ital",{"_index":168,"title":{"3-1":{},"8-1":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["item",{"_index":309,"title":{},"name":{},"text":{"6":{},"11":{},"13":{},"15":{},"36":{},"38":{},"41":{}},"component":{}}],["iter",{"_index":2737,"title":{},"name":{},"text":{"41":{}},"component":{}}],["itself",{"_index":1243,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["it’",{"_index":1025,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"43":{}},"component":{}}],["j",{"_index":777,"title":{},"name":{},"text":{"27":{},"42":{},"43":{}},"component":{}}],["jan",{"_index":1985,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["java",{"_index":2593,"title":{},"name":{},"text":{"41":{}},"component":{}}],["java.git",{"_index":2024,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["java/provisioning/provis",{"_index":2026,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["javascriptseri",{"_index":2474,"title":{},"name":{},"text":{"40":{}},"component":{}}],["javascriptserializer().deserialize(result",{"_index":2475,"title":{},"name":{},"text":{"40":{}},"component":{}}],["job",{"_index":487,"title":{},"name":{},"text":{"20":{},"39":{},"40":{},"41":{}},"component":{}}],["jobcomplet",{"_index":2421,"title":{},"name":{},"text":{"40":{}},"component":{}}],["jobid",{"_index":2423,"title":{},"name":{},"text":{"40":{}},"component":{}}],["jobsoper",{"_index":2422,"title":{},"name":{},"text":{"40":{}},"component":{}}],["john",{"_index":2747,"title":{},"name":{},"text":{"41":{}},"component":{}}],["join",{"_index":70,"title":{},"name":{},"text":{"1":{},"41":{},"44":{}},"component":{}}],["journal",{"_index":2853,"title":{},"name":{},"text":{"41":{}},"component":{}}],["journalctl",{"_index":2855,"title":{},"name":{},"text":{"41":{}},"component":{}}],["json",{"_index":1293,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["jsonpatch",{"_index":1505,"title":{},"name":{},"text":{"38":{}},"component":{}}],["jump",{"_index":3063,"title":{"43-13":{},"43-14":{},"43-16":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["k",{"_index":3032,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["kb",{"_index":2110,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["kb/minut",{"_index":1796,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["kbd",{"_index":273,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["kbd:[ctrl+shift+n",{"_index":304,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["kbd:[ctrl+t",{"_index":300,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["kbd:[esc",{"_index":296,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["keep",{"_index":757,"title":{},"name":{},"text":{"26":{},"29":{},"36":{},"39":{},"40":{},"41":{}},"component":{}}],["kenny'",{"_index":146,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["kenny’",{"_index":151,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["kept",{"_index":1166,"title":{},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["kerbero",{"_index":3206,"title":{},"name":{},"text":{"44":{}},"component":{}}],["key",{"_index":631,"title":{"39-63":{},"39-64":{},"39-70":{},"39-71":{},"41-86":{},"41-87":{},"41-93":{},"41-94":{}},"name":{},"text":{"22":{},"30":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["key/valu",{"_index":2756,"title":{},"name":{},"text":{"41":{}},"component":{}}],["keyboard",{"_index":266,"title":{"6-2":{},"11-2":{}},"name":{},"text":{"6":{},"11":{}},"component":{}}],["keyset",{"_index":3198,"title":{},"name":{},"text":{"44":{}},"component":{}}],["keystrok",{"_index":2973,"title":{"43-12":{},"43-17":{},"43-22":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["keyword",{"_index":664,"title":{},"name":{},"text":{"23":{},"33":{},"36":{},"39":{},"41":{}},"component":{}}],["kind",{"_index":856,"title":{},"name":{},"text":{"30":{},"38":{},"39":{},"41":{}},"component":{}}],["kit",{"_index":932,"title":{},"name":{},"text":{"35":{},"41":{}},"component":{}}],["know",{"_index":1086,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["knowledg",{"_index":21,"title":{},"name":{},"text":{"1":{},"38":{}},"component":{}}],["known",{"_index":109,"title":{},"name":{},"text":{"2":{},"7":{},"25":{},"38":{},"39":{},"41":{}},"component":{}}],["kubernet",{"_index":2915,"title":{},"name":{},"text":{"41":{}},"component":{}}],["l",{"_index":3033,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["l01",{"_index":2375,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["l03",{"_index":2773,"title":{},"name":{},"text":{"41":{}},"component":{}}],["label",{"_index":972,"title":{"41-191":{}},"name":{},"text":{"36":{},"41":{}},"component":{}}],["labl",{"_index":118,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["lake",{"_index":2141,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["languag",{"_index":1194,"title":{"38-12":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["laptop",{"_index":2825,"title":{},"name":{},"text":{"41":{}},"component":{}}],["larg",{"_index":40,"title":{},"name":{},"text":{"1":{},"38":{},"39":{},"41":{}},"component":{}}],["larger",{"_index":1227,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["last",{"_index":549,"title":{},"name":{},"text":{"21":{},"23":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["last_receiv",{"_index":1331,"title":{},"name":{},"text":{"38":{}},"component":{}}],["last_received_tim",{"_index":1332,"title":{},"name":{},"text":{"38":{}},"component":{}}],["lastactivitytim",{"_index":1867,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["lastconnecttim",{"_index":2761,"title":{},"name":{},"text":{"41":{}},"component":{}}],["lastdesiredstatu",{"_index":2760,"title":{},"name":{},"text":{"41":{}},"component":{}}],["lasttimemodifi",{"_index":2271,"title":{},"name":{},"text":{"39":{}},"component":{}}],["lastupd",{"_index":2345,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{}}],["latenc",{"_index":1588,"title":{"39-122":{},"41-144":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["later",{"_index":1039,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["latest",{"_index":331,"title":{"16-5":{},"17-3":{}},"name":{},"text":{"16":{},"17":{},"41":{}},"component":{}}],["launch",{"_index":2883,"title":{},"name":{},"text":{"41":{}},"component":{}}],["layer",{"_index":101,"title":{"41-173":{},"41-194":{}},"name":{},"text":{"1":{},"41":{}},"component":{}}],["lazi",{"_index":1050,"title":{},"name":{},"text":{"36":{}},"component":{}}],["ld",{"_index":1335,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ldap",{"_index":3205,"title":{},"name":{},"text":{"44":{}},"component":{}}],["lead",{"_index":630,"title":{},"name":{},"text":{"22":{},"41":{}},"component":{}}],["leader",{"_index":3067,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["leaf",{"_index":1720,"title":{"39-58":{},"41-81":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["leakag",{"_index":2702,"title":{},"name":{},"text":{"41":{}},"component":{}}],["learn",{"_index":372,"title":{"18-2":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["leav",{"_index":1525,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["left",{"_index":258,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"25":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["legaci",{"_index":1972,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["length",{"_index":1973,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["length($body.weather.location.st",{"_index":2195,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["less",{"_index":2169,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["let",{"_index":884,"title":{},"name":{},"text":{"32":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["let'",{"_index":194,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["letter",{"_index":2247,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["let’",{"_index":198,"title":{},"name":{},"text":{"3":{},"8":{},"26":{},"28":{},"36":{}},"component":{}}],["level",{"_index":314,"title":{"39-66":{},"41-89":{}},"name":{},"text":{"6":{},"11":{},"12":{},"14":{},"27":{},"32":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["librari",{"_index":771,"title":{},"name":{},"text":{"27":{},"38":{},"39":{},"41":{}},"component":{}}],["licens",{"_index":3188,"title":{},"name":{},"text":{"44":{}},"component":{}}],["life",{"_index":1414,"title":{},"name":{},"text":{"38":{}},"component":{}}],["lifecycl",{"_index":1706,"title":{"39-24":{},"40-10":{},"40-12":{},"41-47":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["lifespan",{"_index":1321,"title":{},"name":{},"text":{"38":{}},"component":{}}],["lifetim",{"_index":1847,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["lift",{"_index":3214,"title":{},"name":{},"text":{"44":{}},"component":{}}],["lightweight",{"_index":2230,"title":{},"name":{},"text":{"39":{}},"component":{}}],["likewis",{"_index":2725,"title":{},"name":{},"text":{"41":{}},"component":{}}],["limit",{"_index":160,"title":{"39-165":{},"40-6":{},"41-224":{}},"name":{},"text":{"2":{},"7":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["line",{"_index":114,"title":{"43-20":{}},"name":{},"text":{"2":{},"5":{},"7":{},"10":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["link",{"_index":1400,"title":{"39-42":{},"39-83":{},"41-65":{}},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["linkag",{"_index":1994,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["lint",{"_index":1142,"title":{},"name":{},"text":{"36":{}},"component":{}}],["linter",{"_index":3080,"title":{},"name":{},"text":{"42":{}},"component":{}}],["linux",{"_index":2069,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["linuxprod1",{"_index":2742,"title":{},"name":{},"text":{"41":{}},"component":{}}],["list",{"_index":161,"title":{"12":{},"13":{},"14":{},"15":{},"27":{},"12-1":{},"12-2":{},"13-1":{},"13-2":{},"14-1":{},"14-2":{},"15-1":{},"15-2":{},"27-1":{},"43-11":{},"43-14":{},"43-15":{},"43-24":{},"43-25":{}},"name":{"12":{},"13":{},"14":{},"15":{}},"text":{"2":{},"7":{},"12":{},"13":{},"14":{},"15":{},"21":{},"25":{},"27":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["list.collect",{"_index":553,"title":{},"name":{},"text":{"21":{},"27":{}},"component":{}}],["list.concat",{"_index":558,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuild",{"_index":550,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuilder.combine(listbuilder.yield(a",{"_index":564,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuilder.combine(listbuilder.yield(i",{"_index":563,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuilder.combine(listbuilder.yield(x",{"_index":562,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuilder.delay(fun",{"_index":561,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuilder.yield(b",{"_index":565,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listbuilder4",{"_index":560,"title":{},"name":{},"text":{"21":{}},"component":{}}],["listen",{"_index":1562,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["listworkflow",{"_index":775,"title":{},"name":{},"text":{"27":{}},"component":{}}],["listworkflow.bind([10;11;12",{"_index":782,"title":{},"name":{},"text":{"27":{}},"component":{}}],["listworkflow.bind([1;2;3",{"_index":781,"title":{},"name":{},"text":{"27":{}},"component":{}}],["listworkflow.return",{"_index":783,"title":{},"name":{},"text":{"27":{}},"component":{}}],["listworkflowbuild",{"_index":773,"title":{},"name":{},"text":{"27":{}},"component":{}}],["listwrappertyp",{"_index":767,"title":{},"name":{"27":{}},"text":{},"component":{}}],["littl",{"_index":1044,"title":{},"name":{},"text":{"36":{}},"component":{}}],["live",{"_index":144,"title":{},"name":{},"text":{"2":{},"7":{},"41":{}},"component":{}}],["ll",{"_index":3160,"title":{},"name":{},"text":{"43":{}},"component":{}}],["lli",{"_index":3158,"title":{},"name":{},"text":{"43":{}},"component":{}}],["llist",{"_index":3159,"title":{},"name":{},"text":{"43":{}},"component":{}}],["lmake",{"_index":3164,"title":{},"name":{},"text":{"43":{}},"component":{}}],["lne",{"_index":3162,"title":{},"name":{},"text":{"43":{}},"component":{}}],["lnext",{"_index":3161,"title":{},"name":{},"text":{"43":{}},"component":{}}],["load",{"_index":1688,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"43":{}},"component":{}}],["local",{"_index":418,"title":{"20-2":{},"41-240":{}},"name":{},"text":{"20":{},"36":{},"41":{},"42":{}},"component":{}}],["local/host",{"_index":2957,"title":{},"name":{},"text":{"41":{}},"component":{}}],["locat",{"_index":345,"title":{"43-25":{}},"name":{},"text":{"16":{},"20":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["lock",{"_index":3187,"title":{},"name":{},"text":{"44":{}},"component":{}}],["log",{"_index":696,"title":{"28":{},"40":{},"36-2":{},"38-62":{},"38-63":{},"38-64":{},"38-65":{},"40-7":{},"40-8":{},"41-223":{},"41-224":{}},"name":{},"text":{"25":{},"28":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["logbuild",{"_index":792,"title":{},"name":{"28":{}},"text":{},"component":{}}],["loggedworkflow",{"_index":793,"title":{},"name":{},"text":{"28":{}},"component":{}}],["loggedworkflow1",{"_index":804,"title":{},"name":{},"text":{"28":{}},"component":{}}],["logger",{"_index":802,"title":{},"name":{},"text":{"28":{}},"component":{}}],["logger.bind(42",{"_index":806,"title":{},"name":{},"text":{"28":{}},"component":{}}],["logger.bind(43",{"_index":807,"title":{},"name":{},"text":{"28":{}},"component":{}}],["logger.bind(x",{"_index":808,"title":{},"name":{},"text":{"28":{}},"component":{}}],["logging/3",{"_index":2387,"title":{},"name":{},"text":{"40":{}},"component":{}}],["logging/6",{"_index":2388,"title":{},"name":{},"text":{"40":{}},"component":{}}],["logging/media/m09",{"_index":2374,"title":{},"name":{},"text":{"40":{}},"component":{}}],["loggingbuild",{"_index":799,"title":{},"name":{},"text":{"28":{}},"component":{}}],["loggingopt",{"_index":2800,"title":{},"name":{},"text":{"41":{}},"component":{}}],["logic",{"_index":867,"title":{},"name":{},"text":{"31":{},"32":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["logicapptestdevic",{"_index":2321,"title":{},"name":{},"text":{"39":{}},"component":{}}],["login",{"_index":3239,"title":{},"name":{},"text":{"44":{}},"component":{}}],["long",{"_index":1631,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["longer",{"_index":1507,"title":{},"name":{},"text":{"38":{},"41":{},"44":{}},"component":{}}],["look",{"_index":611,"title":{},"name":{},"text":{"21":{},"36":{},"38":{},"39":{},"41":{},"43":{}},"component":{}}],["lookup",{"_index":833,"title":{},"name":{},"text":{"30":{}},"component":{}}],["loop",{"_index":2714,"title":{},"name":{},"text":{"41":{}},"component":{}}],["loss",{"_index":2947,"title":{},"name":{},"text":{"41":{}},"component":{}}],["lost",{"_index":2077,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"42":{}},"component":{}}],["low",{"_index":2250,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["lower",{"_index":1987,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["lowercas",{"_index":1936,"title":{},"name":{},"text":{"39":{},"41":{},"43":{}},"component":{}}],["lowest",{"_index":1780,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ls",{"_index":3025,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["lst",{"_index":788,"title":{},"name":{},"text":{"27":{}},"component":{}}],["lvimgrep",{"_index":3163,"title":{},"name":{},"text":{"43":{}},"component":{}}],["m",{"_index":552,"title":{},"name":{},"text":{"21":{},"23":{},"26":{},"33":{},"42":{},"43":{}},"component":{}}],["m,f",{"_index":761,"title":{},"name":{},"text":{"26":{}},"component":{}}],["machin",{"_index":1768,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["maco",{"_index":2913,"title":{},"name":{},"text":{"41":{}},"component":{}}],["macro",{"_index":270,"title":{"6":{},"11":{},"43-19":{}},"name":{"6":{},"11":{}},"text":{"6":{},"11":{},"42":{}},"component":{}}],["made",{"_index":1023,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["mailbox",{"_index":3220,"title":{},"name":{},"text":{"44":{}},"component":{}}],["main",{"_index":207,"title":{},"name":{},"text":{"4":{},"9":{},"20":{},"31":{},"36":{},"39":{},"41":{}},"component":{}}],["main(str",{"_index":2446,"title":{},"name":{},"text":{"40":{}},"component":{}}],["mainli",{"_index":908,"title":{},"name":{},"text":{"33":{}},"component":{}}],["maintain",{"_index":1844,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["mainten",{"_index":2224,"title":{"41-170":{},"41-175":{}},"name":{},"text":{"39":{}},"component":{}}],["major",{"_index":623,"title":{},"name":{},"text":{"22":{},"25":{},"32":{},"36":{},"41":{}},"component":{}}],["major.minor[.build[.revis",{"_index":1158,"title":{},"name":{},"text":{"36":{}},"component":{}}],["make",{"_index":65,"title":{"36-5":{}},"name":{},"text":{"1":{},"21":{},"23":{},"24":{},"29":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["maker",{"_index":2693,"title":{},"name":{},"text":{"41":{}},"component":{}}],["malfunct",{"_index":2002,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["malici",{"_index":2062,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["manag",{"_index":22,"title":{"38-28":{},"38-45":{},"38-46":{},"39-5":{},"39-103":{},"41-12":{},"41-28":{},"41-125":{},"41-161":{},"41-167":{},"41-175":{},"41-208":{},"41-215":{},"41-216":{},"41-222":{},"41-243":{},"41-244":{},"44-12":{},"44-13":{}},"name":{},"text":{"1":{},"32":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["mandatori",{"_index":3117,"title":{},"name":{},"text":{"42":{}},"component":{}}],["mani",{"_index":1246,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"42":{}},"component":{}}],["manifest",{"_index":2515,"title":{"41-188":{},"41-196":{},"41-197":{},"41-204":{}},"name":{},"text":{"41":{}},"component":{}}],["manipul",{"_index":917,"title":{},"name":{},"text":{"34":{},"41":{}},"component":{}}],["manual",{"_index":1989,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["manufactur",{"_index":1712,"title":{"39-40":{},"41-63":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["manufacturer/integr",{"_index":2221,"title":{},"name":{},"text":{"39":{}},"component":{}}],["map",{"_index":714,"title":{"41-17":{},"43-12":{}},"name":{},"text":{"25":{},"38":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["map.oflist",{"_index":835,"title":{},"name":{},"text":{"30":{}},"component":{}}],["map1",{"_index":834,"title":{},"name":{},"text":{"30":{}},"component":{}}],["map1.tryfind",{"_index":845,"title":{},"name":{},"text":{"30":{}},"component":{}}],["map2",{"_index":836,"title":{},"name":{},"text":{"30":{}},"component":{}}],["map2.tryfind",{"_index":847,"title":{},"name":{},"text":{"30":{}},"component":{}}],["map3",{"_index":839,"title":{},"name":{},"text":{"30":{}},"component":{}}],["map3.tryfind",{"_index":849,"title":{},"name":{},"text":{"30":{}},"component":{}}],["maplead",{"_index":3068,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["mark",{"_index":934,"title":{},"name":{},"text":{"35":{},"36":{},"38":{},"40":{}},"component":{}}],["marketplac",{"_index":1480,"title":{},"name":{},"text":{"38":{}},"component":{}}],["mask",{"_index":1634,"title":{},"name":{},"text":{"38":{}},"component":{}}],["maskedipaddress",{"_index":2402,"title":{},"name":{},"text":{"40":{}},"component":{}}],["maskedipaddress\\\":\\\"\\\",\\\"deviceid",{"_index":2405,"title":{},"name":{},"text":{"40":{}},"component":{}}],["masquerad",{"_index":153,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["mass",{"_index":1340,"title":{},"name":{},"text":{"38":{}},"component":{}}],["match",{"_index":516,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"26":{},"29":{},"30":{},"32":{},"33":{},"34":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["materi",{"_index":2497,"title":{},"name":{},"text":{"40":{}},"component":{}}],["matter",{"_index":2360,"title":{},"name":{},"text":{"39":{},"43":{}},"component":{}}],["max",{"_index":1574,"title":{},"name":{},"text":{"38":{}},"component":{}}],["maxim",{"_index":2509,"title":{"41-163":{}},"name":{},"text":{"41":{}},"component":{}}],["maximum",{"_index":1816,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"43":{}},"component":{}}],["mayb",{"_index":764,"title":{"29":{}},"name":{},"text":{"26":{},"29":{},"36":{}},"component":{}}],["maybe.bind(dividebi",{"_index":819,"title":{},"name":{},"text":{"29":{}},"component":{}}],["maybebuild",{"_index":763,"title":{},"name":{"29":{}},"text":{"26":{},"29":{}},"component":{}}],["mb",{"_index":2285,"title":{},"name":{},"text":{"39":{}},"component":{}}],["mb/minut",{"_index":1804,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["mcr.microsoft.com",{"_index":2852,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mcr.microsoft.com/azureiotedg",{"_index":2805,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mean",{"_index":490,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"36":{},"38":{},"39":{},"41":{},"43":{}},"component":{}}],["meaning",{"_index":2582,"title":{},"name":{},"text":{"41":{}},"component":{}}],["measur",{"_index":1298,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["mechan",{"_index":1718,"title":{"39-51":{},"41-74":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["medium",{"_index":39,"title":{},"name":{},"text":{"1":{}},"component":{}}],["meet",{"_index":1336,"title":{},"name":{},"text":{"38":{},"41":{},"44":{}},"component":{}}],["member",{"_index":514,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"44":{}},"component":{}}],["membership",{"_index":3210,"title":{},"name":{},"text":{"44":{}},"component":{}}],["member’",{"_index":3223,"title":{},"name":{},"text":{"44":{}},"component":{}}],["memori",{"_index":2520,"title":{"41-214":{}},"name":{},"text":{"41":{},"42":{},"43":{}},"component":{}}],["menu",{"_index":267,"title":{"6-3":{},"11-3":{}},"name":{},"text":{"6":{},"11":{},"16":{},"38":{},"39":{},"41":{}},"component":{}}],["menu:file[sav",{"_index":311,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["menu:view[zoom",{"_index":312,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["merg",{"_index":608,"title":{"36-7":{},"36-10":{}},"name":{},"text":{"21":{},"36":{},"41":{}},"component":{}}],["merges/black",{"_index":1057,"title":{},"name":{},"text":{"36":{}},"component":{}}],["merges/th",{"_index":1055,"title":{},"name":{},"text":{"36":{}},"component":{}}],["merging.html",{"_index":1058,"title":{},"name":{},"text":{"36":{}},"component":{}}],["messag",{"_index":1113,"title":{"39-14":{},"39-108":{},"39-109":{},"39-110":{},"39-111":{},"39-113":{},"39-124":{},"39-125":{},"39-127":{},"39-131":{},"39-132":{},"39-136":{},"39-137":{},"39-139":{},"41-37":{},"41-130":{},"41-131":{},"41-132":{},"41-133":{},"41-135":{},"41-146":{},"41-147":{},"41-149":{},"41-153":{},"41-154":{},"41-235":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["message/ev",{"_index":2163,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["messagedescript",{"_index":2399,"title":{},"name":{},"text":{"40":{}},"component":{}}],["messageexpir",{"_index":2397,"title":{},"name":{},"text":{"40":{}},"component":{}}],["messageid",{"_index":2118,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["messageprocessor",{"_index":2612,"title":{},"name":{},"text":{"41":{}},"component":{}}],["messages",{"_index":2425,"title":{},"name":{},"text":{"40":{}},"component":{}}],["messages/day",{"_index":1802,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["messages/ev",{"_index":2108,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["messages/minut",{"_index":1800,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["messages/modul",{"_index":2791,"title":{},"name":{},"text":{"41":{}},"component":{}}],["messages/modules//output",{"_index":2792,"title":{},"name":{},"text":{"41":{}},"component":{}}],["messages/modules/filtermodule/outputs/output1",{"_index":2818,"title":{},"name":{},"text":{"41":{}},"component":{}}],["messages/modules/simulatedtemperaturesensor/outputs/temperatureoutput",{"_index":2815,"title":{},"name":{},"text":{"41":{}},"component":{}}],["messagesrout",{"_index":1583,"title":{},"name":{},"text":{"38":{}},"component":{}}],["met",{"_index":2384,"title":{},"name":{},"text":{"40":{}},"component":{}}],["metadata",{"_index":1771,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["metadatavers",{"_index":2324,"title":{},"name":{},"text":{"39":{}},"component":{}}],["meter",{"_index":2664,"title":{},"name":{},"text":{"41":{}},"component":{}}],["method",{"_index":380,"title":{"21":{},"23":{},"24":{},"33":{},"34":{},"21-1":{},"41-237":{},"43-16":{},"44-15":{}},"name":{},"text":{"18":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"32":{},"33":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["metric",{"_index":1212,"title":{"38-56":{},"38-57":{},"38-58":{},"38-59":{},"40-5":{},"41-192":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["mfa",{"_index":3194,"title":{},"name":{},"text":{"44":{}},"component":{}}],["micorsoft",{"_index":2533,"title":{},"name":{},"text":{"41":{}},"component":{}}],["microcontrol",{"_index":2562,"title":{},"name":{},"text":{"41":{}},"component":{}}],["microsoft",{"_index":59,"title":{"18-2":{},"44-4":{}},"name":{},"text":{"1":{},"20":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["microsoft.azure.digitaltwins.pars",{"_index":1475,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.devic",{"_index":2304,"title":{},"name":{},"text":{"39":{}},"component":{}}],["microsoft.devices.deviceconnect",{"_index":2300,"title":{},"name":{},"text":{"39":{}},"component":{}}],["microsoft.devices.devicecr",{"_index":2298,"title":{},"name":{},"text":{"39":{}},"component":{}}],["microsoft.devices.devicedelet",{"_index":2299,"title":{},"name":{},"text":{"39":{}},"component":{}}],["microsoft.devices.devicedisconnect",{"_index":2301,"title":{},"name":{},"text":{"39":{}},"component":{}}],["microsoft.devices.devicetelemetri",{"_index":2302,"title":{},"name":{},"text":{"39":{}},"component":{}}],["microsoft.digitaltwins.relationship.cr",{"_index":1428,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins.relationship.delet",{"_index":1430,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins.relationship.upd",{"_index":1429,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins.twin.cr",{"_index":1425,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins.twin.delet",{"_index":1426,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins.twin.upd",{"_index":1427,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/digitaltwins/act",{"_index":1616,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/digitaltwins/delet",{"_index":1592,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/digitaltwins/read",{"_index":1594,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/digitaltwins/writ",{"_index":1593,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/eventroutes/act",{"_index":1615,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/eventroutes/delet",{"_index":1597,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/eventroutes/read",{"_index":1595,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/eventroutes/writ",{"_index":1596,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/models/act",{"_index":1614,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/models/delet",{"_index":1600,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/models/read",{"_index":1598,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/models/writ",{"_index":1599,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.digitaltwins/query/act",{"_index":1601,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft.iot.telemetri",{"_index":1431,"title":{},"name":{},"text":{"38":{}},"component":{}}],["microsoft’",{"_index":3181,"title":{},"name":{},"text":{"44":{}},"component":{}}],["migrat",{"_index":1999,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["million",{"_index":1807,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["millisecond",{"_index":1632,"title":{},"name":{},"text":{"38":{}},"component":{}}],["mindockervers",{"_index":2798,"title":{},"name":{},"text":{"41":{}},"component":{}}],["minim",{"_index":1412,"title":{"41-164":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["minimum",{"_index":2893,"title":{},"name":{},"text":{"41":{}},"component":{}}],["minor",{"_index":1170,"title":{},"name":{},"text":{"36":{}},"component":{}}],["minut",{"_index":1467,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["mirror",{"_index":2766,"title":{},"name":{},"text":{"41":{}},"component":{}}],["misbehav",{"_index":2602,"title":{},"name":{},"text":{"41":{}},"component":{}}],["misc",{"_index":1137,"title":{},"name":{},"text":{"36":{}},"component":{}}],["misconfigur",{"_index":2776,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mix",{"_index":510,"title":{"21-6":{}},"name":{},"text":{"36":{}},"component":{}}],["ml",{"_index":2531,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mnemon",{"_index":947,"title":{"36-14":{}},"name":{},"text":{},"component":{}}],["mobi",{"_index":2519,"title":{"41-209":{}},"name":{},"text":{"41":{}},"component":{}}],["mobil",{"_index":2572,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mode",{"_index":299,"title":{"43-1":{}},"name":{},"text":{"6":{},"11":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["model",{"_index":1188,"title":{"38-7":{},"38-8":{},"38-14":{},"38-16":{},"38-28":{},"38-29":{},"38-30":{},"38-31":{},"38-32":{},"38-33":{},"38-35":{},"38-40":{},"38-41":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["modelcount",{"_index":1575,"title":{},"name":{},"text":{"38":{}},"component":{}}],["modeldata",{"_index":1517,"title":{},"name":{},"text":{"38":{}},"component":{}}],["models—moon",{"_index":1345,"title":{},"name":{},"text":{"38":{}},"component":{}}],["model’",{"_index":1515,"title":{},"name":{},"text":{"38":{}},"component":{}}],["modifi",{"_index":2103,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["modul",{"_index":349,"title":{"17":{},"39-27":{},"39-32":{},"39-61":{},"39-62":{},"39-65":{},"39-87":{},"40-12":{},"40-14":{},"41-50":{},"41-55":{},"41-84":{},"41-85":{},"41-88":{},"41-109":{},"41-159":{},"41-160":{},"41-173":{},"41-176":{},"41-198":{},"41-213":{},"41-231":{},"41-233":{},"41-239":{}},"name":{},"text":{"16":{},"17":{},"21":{},"23":{},"26":{},"27":{},"34":{},"39":{},"40":{},"41":{}},"component":{}}],["module'",{"_index":2643,"title":{},"name":{},"text":{"41":{}},"component":{}}],["module1",{"_index":2780,"title":{},"name":{},"text":{"41":{}},"component":{}}],["module2",{"_index":2781,"title":{},"name":{},"text":{"41":{}},"component":{}}],["modulecli",{"_index":2607,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleclient.createfromenvironmentasync(set",{"_index":2644,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleclient.createfromenvironmentasync(transportset",{"_index":2608,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleclient.gettwin",{"_index":2877,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleclient.methodcallback",{"_index":2881,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleclient.moduletwincallback",{"_index":2879,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleclient.sendmessageasync",{"_index":2876,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moduleid",{"_index":2122,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["modulelifecycleev",{"_index":2482,"title":{},"name":{},"text":{"40":{}},"component":{}}],["modulescont",{"_index":2778,"title":{},"name":{},"text":{"41":{}},"component":{}}],["module’",{"_index":2621,"title":{},"name":{},"text":{"41":{}},"component":{}}],["moment",{"_index":962,"title":{},"name":{},"text":{"36":{},"40":{}},"component":{}}],["monitor",{"_index":1322,"title":{"40":{},"39-33":{},"39-123":{},"40-1":{},"40-3":{},"40-9":{},"41-56":{},"41-145":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["monitoringendpointnam",{"_index":2442,"title":{},"name":{},"text":{"40":{}},"component":{}}],["monospac",{"_index":169,"title":{"3-2":{},"8-2":{}},"name":{},"text":{"3":{},"8":{}},"component":{}}],["monster",{"_index":143,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["month",{"_index":2289,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["mood",{"_index":1135,"title":{},"name":{},"text":{"36":{}},"component":{}}],["moon",{"_index":1341,"title":{},"name":{},"text":{"38":{}},"component":{}}],["mora",{"_index":15,"title":{},"name":{},"text":{"1":{}},"component":{}}],["more",{"_index":20,"title":{},"name":{},"text":{"1":{},"21":{},"23":{},"26":{},"29":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["more—even",{"_index":1236,"title":{},"name":{},"text":{"38":{}},"component":{}}],["motion",{"_index":3066,"title":{"43-13":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["mount",{"_index":2622,"title":{},"name":{},"text":{"41":{}},"component":{}}],["move",{"_index":996,"title":{"43-1":{}},"name":{},"text":{"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["movement",{"_index":3118,"title":{"43-5":{}},"name":{},"text":{"43":{}},"component":{}}],["mqtt",{"_index":1832,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["mqtt/amqp",{"_index":2017,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["mqttw",{"_index":2830,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ms",{"_index":2382,"title":{},"name":{},"text":{"40":{}},"component":{}}],["msdn",{"_index":906,"title":{},"name":{},"text":{"33":{}},"component":{}}],["much",{"_index":900,"title":{},"name":{},"text":{"32":{},"39":{},"41":{},"44":{}},"component":{}}],["mult",{"_index":2586,"title":{},"name":{},"text":{"41":{}},"component":{}}],["multi",{"_index":1776,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["multilookup",{"_index":844,"title":{},"name":{},"text":{"30":{}},"component":{}}],["multilookupexpand",{"_index":860,"title":{},"name":{},"text":{"30":{}},"component":{}}],["multilookupm",{"_index":859,"title":{},"name":{},"text":{"30":{}},"component":{}}],["multipl",{"_index":162,"title":{"39-118":{},"41-140":{}},"name":{},"text":{"2":{},"7":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["multiplex",{"_index":1896,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["multipli",{"_index":791,"title":{},"name":{},"text":{"27":{}},"component":{}}],["multistep",{"_index":2960,"title":{},"name":{},"text":{"41":{}},"component":{}}],["multiten",{"_index":1741,"title":{"39-107":{},"41-129":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["mutabl",{"_index":2840,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mutual",{"_index":2905,"title":{},"name":{},"text":{"41":{}},"component":{}}],["myacr",{"_index":2803,"title":{},"name":{},"text":{"41":{}},"component":{}}],["myacr.azurecr.io",{"_index":2804,"title":{},"name":{},"text":{"41":{}},"component":{}}],["myacr.azurecr.io/filtermodule:latest",{"_index":2813,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mydps}.azur",{"_index":2051,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["myworkflow",{"_index":640,"title":{},"name":{},"text":{"22":{}},"component":{}}],["n",{"_index":385,"title":{},"name":{},"text":{"18":{},"42":{},"43":{}},"component":{}}],["nail",{"_index":1037,"title":{},"name":{},"text":{"36":{}},"component":{}}],["name",{"_index":13,"title":{},"name":{},"text":{"1":{},"5":{},"10":{},"16":{},"20":{},"32":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["namespac",{"_index":1402,"title":{},"name":{},"text":{"38":{},"43":{}},"component":{}}],["nativ",{"_index":2254,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["navig",{"_index":292,"title":{},"name":{},"text":{"6":{},"11":{},"39":{},"41":{}},"component":{}}],["near",{"_index":2682,"title":{},"name":{},"text":{"41":{}},"component":{}}],["necessari",{"_index":485,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["need",{"_index":134,"title":{"21-1":{},"41-5":{}},"name":{},"text":{"2":{},"7":{},"20":{},"21":{},"27":{},"30":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["neg",{"_index":2134,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["nest",{"_index":317,"title":{"12-2":{},"13-2":{},"14-2":{},"15-2":{}},"name":{},"text":{"12":{},"14":{},"38":{}},"component":{}}],["nestedproperti",{"_index":2969,"title":{},"name":{},"text":{"41":{}},"component":{}}],["net",{"_index":705,"title":{},"name":{},"text":{"25":{},"38":{},"39":{},"41":{}},"component":{}}],["netrw",{"_index":3145,"title":{},"name":{},"text":{"43":{}},"component":{}}],["network",{"_index":1233,"title":{"41-218":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["never",{"_index":142,"title":{},"name":{},"text":{"2":{},"7":{},"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["new",{"_index":50,"title":{},"name":{},"text":{"1":{},"6":{},"11":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["newbar",{"_index":1081,"title":{},"name":{},"text":{"36":{}},"component":{}}],["newer",{"_index":1495,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["newli",{"_index":1111,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["newproperti",{"_index":2964,"title":{},"name":{},"text":{"41":{}},"component":{}}],["newvalu",{"_index":2965,"title":{},"name":{},"text":{"41":{}},"component":{}}],["next",{"_index":591,"title":{},"name":{},"text":{"21":{},"26":{},"28":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["nice",{"_index":740,"title":{},"name":{},"text":{"26":{},"32":{},"43":{}},"component":{}}],["nine",{"_index":1699,"title":{},"name":{},"text":{"38":{}},"component":{}}],["nix",{"_index":3105,"title":{},"name":{},"text":{"42":{}},"component":{}}],["nmap",{"_index":3052,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["nnoremap",{"_index":3057,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["node",{"_index":964,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["node.j",{"_index":2032,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["non",{"_index":1747,"title":{"39-121":{},"41-8":{},"41-143":{}},"name":{},"text":{"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["nonc",{"_index":1726,"title":{"39-68":{},"39-69":{},"41-91":{},"41-92":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["none",{"_index":517,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"26":{},"29":{},"30":{},"33":{},"34":{},"42":{}},"component":{}}],["none(default",{"_index":2132,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["normal",{"_index":96,"title":{},"name":{},"text":{"1":{},"21":{},"24":{},"27":{},"34":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["notari",{"_index":2659,"title":{},"name":{},"text":{"41":{}},"component":{}}],["notat",{"_index":3062,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["note",{"_index":7,"title":{"19":{},"35":{},"36":{},"37":{},"1-4":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"10":{},"19":{},"20":{},"35":{},"36":{},"37":{},"38":{},"39":{},"41":{}},"component":{}}],["notic",{"_index":110,"title":{},"name":{},"text":{"2":{},"7":{},"36":{},"38":{}},"component":{}}],["notif",{"_index":1253,"title":{"40-10":{},"40-12":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["notifi",{"_index":1691,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["now",{"_index":95,"title":{},"name":{},"text":{"1":{},"27":{},"32":{},"36":{},"38":{},"39":{},"41":{},"43":{}},"component":{}}],["npm",{"_index":1163,"title":{},"name":{},"text":{"36":{}},"component":{}}],["ntlm",{"_index":3207,"title":{},"name":{},"text":{"44":{}},"component":{}}],["nuget",{"_index":1162,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["null",{"_index":1457,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["number",{"_index":382,"title":{"36-19":{}},"name":{},"text":{"18":{},"26":{},"29":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["numer",{"_index":237,"title":{},"name":{},"text":{"5":{},"10":{},"38":{}},"component":{}}],["nvim",{"_index":3043,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ny",{"_index":842,"title":{},"name":{},"text":{"30":{}},"component":{}}],["o",{"_index":2936,"title":{},"name":{},"text":{"41":{}},"component":{}}],["o365",{"_index":3191,"title":{},"name":{},"text":{"44":{}},"component":{}}],["oauth",{"_index":1591,"title":{},"name":{},"text":{"38":{}},"component":{}}],["object",{"_index":1295,"title":{"43-6":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["obsidian",{"_index":97,"title":{},"name":{},"text":{"1":{}},"component":{}}],["obsolet",{"_index":2736,"title":{},"name":{},"text":{"41":{}},"component":{}}],["obtain",{"_index":1563,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["obviou",{"_index":1117,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["occur",{"_index":218,"title":{},"name":{},"text":{"5":{},"10":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["occurr",{"_index":3168,"title":{},"name":{},"text":{"43":{}},"component":{}}],["octal",{"_index":3154,"title":{},"name":{},"text":{"43":{}},"component":{}}],["oem",{"_index":2655,"title":{},"name":{},"text":{"41":{}},"component":{}}],["offer",{"_index":1223,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["offici",{"_index":2882,"title":{},"name":{},"text":{"41":{}},"component":{}}],["offlin",{"_index":1471,"title":{"41-240":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["offload",{"_index":2560,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ok",{"_index":924,"title":{},"name":{},"text":{"34":{},"39":{},"41":{}},"component":{}}],["old",{"_index":1500,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["older",{"_index":1501,"title":{},"name":{},"text":{"38":{}},"component":{}}],["omit",{"_index":1118,"title":{},"name":{},"text":{"36":{},"42":{}},"component":{}}],["on",{"_index":335,"title":{"17":{}},"name":{},"text":{"16":{},"17":{},"21":{},"22":{},"24":{},"25":{},"27":{},"30":{},"32":{},"33":{},"34":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["onc",{"_index":710,"title":{},"name":{},"text":{"25":{},"26":{},"29":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["oncreat",{"_index":2631,"title":{},"name":{},"text":{"41":{}},"component":{}}],["one/pages/overview.adoc",{"_index":363,"title":{},"name":{},"text":{"17":{}},"component":{}}],["one:overview.adoc",{"_index":366,"title":{},"name":{},"text":{"17":{}},"component":{}}],["onelin",{"_index":969,"title":{},"name":{},"text":{"36":{}},"component":{}}],["ongo",{"_index":1845,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["onlin",{"_index":2921,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["onto",{"_index":1786,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["onward",{"_index":3137,"title":{},"name":{},"text":{"43":{}},"component":{}}],["opaqu",{"_index":2104,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["opc",{"_index":2545,"title":{},"name":{},"text":{"41":{}},"component":{}}],["open",{"_index":301,"title":{},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["openssl",{"_index":1837,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["oper",{"_index":375,"title":{"18":{},"18-3":{},"39-28":{},"39-46":{},"39-74":{},"41-51":{},"41-69":{},"41-97":{},"41-163":{},"41-249":{},"41-250":{},"43-6":{}},"name":{},"text":{"18":{},"24":{},"26":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["operand",{"_index":411,"title":{},"name":{},"text":{"18":{}},"component":{}}],["operationnam",{"_index":1623,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["operationtimestamp",{"_index":2486,"title":{},"name":{},"text":{"40":{}},"component":{}}],["operationvers",{"_index":1624,"title":{},"name":{},"text":{"38":{}},"component":{}}],["operator’",{"_index":2752,"title":{},"name":{},"text":{"41":{}},"component":{}}],["opportun",{"_index":2919,"title":{},"name":{},"text":{"41":{}},"component":{}}],["opportunit",{"_index":3219,"title":{},"name":{},"text":{"44":{}},"component":{}}],["optim",{"_index":2111,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["option",{"_index":154,"title":{"39-131":{},"41-2":{},"41-18":{},"41-21":{},"41-153":{},"43-7":{}},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"21":{},"23":{},"24":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["option.bind",{"_index":522,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"26":{},"33":{},"34":{}},"component":{}}],["option’",{"_index":3007,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["optyp",{"_index":2483,"title":{},"name":{},"text":{"40":{}},"component":{}}],["or/els",{"_index":824,"title":{},"name":{},"text":{"30":{}},"component":{}}],["orang",{"_index":147,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["orchestr",{"_index":1278,"title":{},"name":{},"text":{"38":{}},"component":{}}],["order",{"_index":316,"title":{"12":{},"14":{},"12-1":{},"12-2":{},"14-1":{},"14-2":{}},"name":{"12":{},"14":{}},"text":{"12":{},"14":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["order123",{"_index":880,"title":{},"name":{},"text":{"32":{}},"component":{}}],["orderid",{"_index":882,"title":{},"name":{},"text":{"32":{}},"component":{}}],["orels",{"_index":822,"title":{"30":{}},"name":{},"text":{"30":{}},"component":{}}],["orelse.combine(orelse.returnfrom(map1.tryfind",{"_index":862,"title":{},"name":{},"text":{"30":{}},"component":{}}],["orelse.combine(orelse.returnfrom(map2.tryfind",{"_index":863,"title":{},"name":{},"text":{"30":{}},"component":{}}],["orelse.delay(fun",{"_index":861,"title":{},"name":{},"text":{"30":{}},"component":{}}],["orelse.returnfrom(map3.tryfind",{"_index":864,"title":{},"name":{},"text":{"30":{}},"component":{}}],["orelsebuild",{"_index":823,"title":{},"name":{"30":{}},"text":{"30":{}},"component":{}}],["organ",{"_index":480,"title":{},"name":{},"text":{"20":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["organize/differenti",{"_index":2961,"title":{},"name":{},"text":{"41":{}},"component":{}}],["orient",{"_index":1296,"title":{},"name":{},"text":{"38":{}},"component":{}}],["origin",{"_index":748,"title":{"36-15":{}},"name":{},"text":{"26":{},"28":{},"31":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["orphan",{"_index":1533,"title":{},"name":{},"text":{"38":{}},"component":{}}],["os",{"_index":2369,"title":{},"name":{},"text":{"40":{},"41":{},"42":{},"43":{}},"component":{}}],["ot",{"_index":2867,"title":{},"name":{},"text":{"41":{}},"component":{}}],["othernewvalu",{"_index":2967,"title":{},"name":{},"text":{"41":{}},"component":{}}],["otheroldproperti",{"_index":2968,"title":{},"name":{},"text":{"41":{}},"component":{}}],["otherwis",{"_index":572,"title":{},"name":{},"text":{"21":{},"30":{},"39":{},"41":{}},"component":{}}],["ourselv",{"_index":741,"title":{},"name":{},"text":{"26":{}},"component":{}}],["out",{"_index":1054,"title":{},"name":{},"text":{"36":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["outag",{"_index":1698,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["outbound",{"_index":2846,"title":{},"name":{},"text":{"41":{}},"component":{}}],["outbound/inbound",{"_index":2521,"title":{"41-219":{}},"name":{},"text":{},"component":{}}],["outcom",{"_index":1627,"title":{},"name":{},"text":{"38":{}},"component":{}}],["outer",{"_index":2909,"title":{},"name":{},"text":{"41":{}},"component":{}}],["outgo",{"_index":1530,"title":{},"name":{},"text":{"38":{}},"component":{}}],["output",{"_index":390,"title":{},"name":{},"text":{"18":{},"20":{},"22":{},"23":{},"25":{},"41":{},"42":{}},"component":{}}],["output1",{"_index":2606,"title":{},"name":{},"text":{"41":{}},"component":{}}],["outsid",{"_index":1954,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["over",{"_index":1088,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"42":{},"44":{}},"component":{}}],["overal",{"_index":579,"title":{},"name":{},"text":{"21":{},"39":{},"41":{}},"component":{}}],["overrid",{"_index":2833,"title":{},"name":{},"text":{"41":{}},"component":{}}],["overview",{"_index":361,"title":{"17":{},"40-2":{}},"name":{"17":{},"19":{},"35":{},"36":{},"41":{},"44":{}},"text":{"38":{},"40":{}},"component":{}}],["overwrit",{"_index":1498,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["overwritten",{"_index":2771,"title":{},"name":{},"text":{"41":{}},"component":{}}],["owner",{"_index":1392,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["ownership",{"_index":1957,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["p",{"_index":800,"title":{},"name":{},"text":{"28":{},"36":{},"42":{},"43":{}},"component":{}}],["p1",{"_index":3177,"title":{"44-5":{}},"name":{},"text":{"44":{}},"component":{}}],["p2",{"_index":3178,"title":{"44-6":{}},"name":{},"text":{"44":{}},"component":{}}],["paa",{"_index":1222,"title":{"41-13":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["pack",{"_index":3,"title":{"16":{},"1-2":{},"1-3":{},"16-2":{}},"name":{},"text":{"16":{},"17":{}},"component":{}}],["packag",{"_index":1000,"title":{},"name":{},"text":{"36":{},"41":{}},"component":{}}],["page",{"_index":326,"title":{"16-1":{},"16-2":{},"16-3":{},"16-4":{},"16-5":{},"16-6":{},"17-1":{},"17-2":{},"17-3":{},"17-4":{},"44-7":{}},"name":{},"text":{"16":{},"17":{},"38":{},"39":{},"41":{},"43":{}},"component":{}}],["pair",{"_index":2757,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pal",{"_index":2512,"title":{"41-173":{}},"name":{},"text":{"41":{}},"component":{}}],["pane",{"_index":1689,"title":{},"name":{},"text":{"38":{}},"component":{}}],["paragraph",{"_index":163,"title":{},"name":{},"text":{"2":{},"7":{},"42":{},"43":{}},"component":{}}],["parallel",{"_index":486,"title":{},"name":{},"text":{"20":{},"34":{}},"component":{}}],["paramet",{"_index":545,"title":{},"name":{},"text":{"21":{},"25":{},"39":{},"41":{}},"component":{}}],["parametr",{"_index":706,"title":{},"name":{},"text":{"25":{}},"component":{}}],["parent",{"_index":963,"title":{"41-241":{}},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["parent/child",{"_index":2939,"title":{},"name":{},"text":{"41":{}},"component":{}}],["parka",{"_index":148,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["parser",{"_index":1474,"title":{},"name":{},"text":{"38":{}},"component":{}}],["part",{"_index":195,"title":{},"name":{},"text":{"3":{},"8":{},"23":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["part1",{"_index":683,"title":{},"name":{},"text":{"23":{}},"component":{}}],["part2",{"_index":685,"title":{},"name":{},"text":{"23":{}},"component":{}}],["parti",{"_index":2071,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["partial",{"_index":2963,"title":{},"name":{},"text":{"41":{}},"component":{}}],["particular",{"_index":86,"title":{},"name":{},"text":{"1":{},"36":{},"39":{},"40":{},"41":{}},"component":{}}],["partion",{"_index":1812,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["partit",{"_index":1566,"title":{"39-15":{},"41-38":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["partner",{"_index":2886,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pass",{"_index":590,"title":{},"name":{},"text":{"21":{},"24":{},"27":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["passcod",{"_index":3240,"title":{},"name":{},"text":{"44":{}},"component":{}}],["passthrough",{"_index":222,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["password",{"_index":449,"title":{},"name":{},"text":{"20":{},"39":{},"41":{},"44":{}},"component":{}}],["passwordless",{"_index":3180,"title":{"44-15":{}},"name":{},"text":{"44":{}},"component":{}}],["past",{"_index":3000,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["patch",{"_index":1502,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["path",{"_index":1030,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["pattern",{"_index":885,"title":{"36-8":{},"36-9":{},"41-227":{},"41-244":{},"41-245":{},"43-29":{}},"name":{},"text":{"32":{},"36":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["pattern.html",{"_index":1056,"title":{},"name":{},"text":{"36":{}},"component":{}}],["pay",{"_index":2287,"title":{},"name":{},"text":{"39":{}},"component":{}}],["payload",{"_index":2135,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["pc",{"_index":3231,"title":{},"name":{},"text":{"44":{}},"component":{}}],["pem",{"_index":2067,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["peopl",{"_index":926,"title":{},"name":{},"text":{"35":{},"44":{}},"component":{}}],["per",{"_index":1359,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["perceiv",{"_index":2407,"title":{},"name":{},"text":{"40":{}},"component":{}}],["percentag",{"_index":1570,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["percol",{"_index":1527,"title":{},"name":{},"text":{"38":{}},"component":{}}],["perform",{"_index":676,"title":{},"name":{},"text":{"23":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["period",{"_index":1133,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["perman",{"_index":2091,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["permiss",{"_index":1391,"title":{"39-20":{},"41-43":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["permit",{"_index":2086,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["persist",{"_index":2240,"title":{},"name":{},"text":{"39":{},"41":{},"43":{}},"component":{}}],["person",{"_index":17,"title":{},"name":{},"text":{"1":{},"19":{},"35":{},"36":{},"44":{}},"component":{}}],["perspect",{"_index":1532,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["pertain",{"_index":1609,"title":{},"name":{},"text":{"38":{}},"component":{}}],["pertin",{"_index":1619,"title":{},"name":{},"text":{"38":{}},"component":{}}],["phase",{"_index":1713,"title":{"39-40":{},"39-41":{},"41-63":{},"41-64":{},"41-193":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["phone",{"_index":1305,"title":{},"name":{},"text":{"38":{},"44":{}},"component":{}}],["phrase",{"_index":175,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["phrase*_",{"_index":191,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["phrase_",{"_index":180,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["physic",{"_index":1260,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["pi",{"_index":2598,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pi3",{"_index":2895,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pick",{"_index":945,"title":{"36-12":{},"36-13":{}},"name":{},"text":{"36":{}},"component":{}}],["pictur",{"_index":899,"title":{},"name":{},"text":{"32":{}},"component":{}}],["pid",{"_index":2675,"title":{},"name":{},"text":{"41":{}},"component":{}}],["piec",{"_index":2638,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pin",{"_index":3228,"title":{},"name":{},"text":{"44":{}},"component":{}}],["pinboard",{"_index":98,"title":{},"name":{},"text":{"1":{}},"component":{}}],["ping",{"_index":2501,"title":{},"name":{},"text":{"40":{}},"component":{}}],["pipeinto",{"_index":759,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pipelin",{"_index":423,"title":{"20-4":{},"41-225":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["place",{"_index":722,"title":{"41-224":{}},"name":{},"text":{"25":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["plan",{"_index":434,"title":{"41-208":{}},"name":{},"text":{"20":{},"39":{},"41":{}},"component":{}}],["plane",{"_index":1388,"title":{},"name":{},"text":{"38":{}},"component":{}}],["planet",{"_index":1339,"title":{},"name":{},"text":{"38":{}},"component":{}}],["plant",{"_index":1942,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["platform",{"_index":1221,"title":{"39-62":{},"39-65":{},"39-87":{},"41-85":{},"41-88":{},"41-109":{},"41-173":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["platorm",{"_index":45,"title":{},"name":{},"text":{"1":{}},"component":{}}],["play",{"_index":1067,"title":{},"name":{},"text":{"36":{},"41":{}},"component":{}}],["playbook",{"_index":61,"title":{},"name":{},"text":{"1":{},"6":{},"11":{},"16":{}},"component":{}}],["playbook.yml",{"_index":284,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["pleas",{"_index":2956,"title":{},"name":{},"text":{"41":{}},"component":{}}],["plu",{"_index":2494,"title":{},"name":{},"text":{"40":{},"44":{}},"component":{}}],["plug",{"_index":2559,"title":{},"name":{},"text":{"41":{}},"component":{}}],["plugin",{"_index":3144,"title":{},"name":{},"text":{"43":{}},"component":{}}],["point",{"_index":23,"title":{},"name":{},"text":{"1":{},"5":{},"10":{},"21":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["pointer",{"_index":960,"title":{},"name":{},"text":{"36":{}},"component":{}}],["polici",{"_index":1715,"title":{"39-43":{},"39-78":{},"39-81":{},"41-66":{},"41-101":{},"41-104":{}},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["policynam",{"_index":1988,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["poll",{"_index":2261,"title":{},"name":{},"text":{"39":{}},"component":{}}],["polymorph",{"_index":707,"title":{},"name":{},"text":{"25":{}},"component":{}}],["popul",{"_index":1993,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["popular",{"_index":3190,"title":{},"name":{},"text":{"44":{}},"component":{}}],["port",{"_index":1711,"title":{"39-37":{},"41-60":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["portal",{"_index":1271,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["portion",{"_index":1906,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["posit",{"_index":2133,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["possess",{"_index":1734,"title":{"39-96":{},"41-118":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["possibl",{"_index":720,"title":{"38-15":{}},"name":{},"text":{"25":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["post",{"_index":89,"title":{},"name":{},"text":{"1":{},"25":{},"38":{}},"component":{}}],["postman",{"_index":1537,"title":{},"name":{},"text":{"38":{}},"component":{}}],["postman_collection.json",{"_index":1538,"title":{},"name":{},"text":{"38":{}},"component":{}}],["potenti",{"_index":2370,"title":{},"name":{},"text":{"40":{}},"component":{}}],["power",{"_index":1947,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["powershel",{"_index":2033,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["pr",{"_index":1145,"title":{},"name":{},"text":{"36":{}},"component":{}}],["practic",{"_index":950,"title":{"36-16":{}},"name":{},"text":{"39":{},"42":{},"43":{},"44":{}},"component":{}}],["pre",{"_index":1406,"title":{"41-205":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["prebuilt",{"_index":1687,"title":{},"name":{},"text":{"38":{}},"component":{}}],["predetermin",{"_index":2101,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["predict",{"_index":2553,"title":{},"name":{},"text":{"41":{}},"component":{}}],["prefer",{"_index":2276,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["prefix",{"_index":2190,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"43":{}},"component":{}}],["preliminari",{"_index":2885,"title":{},"name":{},"text":{"41":{}},"component":{}}],["premis",{"_index":2258,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["premium",{"_index":3176,"title":{"44-5":{},"44-6":{}},"name":{},"text":{"44":{}},"component":{}}],["prepar",{"_index":1901,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["prerequisit",{"_index":2741,"title":{},"name":{},"text":{"41":{}},"component":{}}],["present",{"_index":1834,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"44":{}},"component":{}}],["press",{"_index":287,"title":{},"name":{},"text":{"6":{},"11":{},"40":{}},"component":{}}],["pretend",{"_index":1090,"title":{},"name":{},"text":{"36":{}},"component":{}}],["pretti",{"_index":3149,"title":{},"name":{},"text":{"43":{}},"component":{}}],["prev",{"_index":3133,"title":{},"name":{},"text":{"43":{}},"component":{}}],["prevent",{"_index":1535,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["preview",{"_index":2286,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["previou",{"_index":580,"title":{},"name":{},"text":{"21":{},"25":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["previous",{"_index":994,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["price",{"_index":2213,"title":{"44-7":{}},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["primari",{"_index":1347,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["primarili",{"_index":915,"title":{},"name":{},"text":{"34":{},"41":{}},"component":{}}],["primarythumbprint",{"_index":1874,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["primit",{"_index":1360,"title":{"41-234":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["principl",{"_index":2660,"title":{},"name":{},"text":{"41":{}},"component":{}}],["print",{"_index":3153,"title":{},"name":{},"text":{"43":{}},"component":{}}],["printfn",{"_index":518,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"27":{},"28":{},"30":{},"32":{},"33":{},"34":{}},"component":{}}],["prior",{"_index":2029,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["priorit",{"_index":2823,"title":{},"name":{},"text":{"41":{}},"component":{}}],["prioriti",{"_index":1915,"title":{"41-190":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["privat",{"_index":1836,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["privileg",{"_index":2637,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["proactiv",{"_index":1690,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["probabl",{"_index":1783,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["problem",{"_index":499,"title":{"21-2":{}},"name":{},"text":{"23":{},"36":{},"40":{}},"component":{}}],["proce",{"_index":52,"title":{},"name":{},"text":{"1":{}},"component":{}}],["procedur",{"_index":2093,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["process",{"_index":55,"title":{"38-21":{},"38-39":{},"38-50":{},"39-8":{},"39-39":{},"39-40":{},"39-55":{},"39-60":{},"39-65":{},"39-66":{},"39-67":{},"39-73":{},"39-75":{},"39-96":{},"39-102":{},"39-131":{},"41-3":{},"41-31":{},"41-62":{},"41-63":{},"41-78":{},"41-83":{},"41-88":{},"41-89":{},"41-90":{},"41-96":{},"41-98":{},"41-118":{},"41-124":{},"41-153":{}},"name":{},"text":{"1":{},"5":{},"10":{},"23":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["processingpath",{"_index":2184,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["processor",{"_index":2525,"title":{},"name":{},"text":{"41":{}},"component":{}}],["prod",{"_index":457,"title":{},"name":{},"text":{"20":{},"41":{}},"component":{}}],["produc",{"_index":233,"title":{},"name":{},"text":{"5":{},"10":{},"18":{},"27":{},"31":{},"39":{},"41":{}},"component":{}}],["product",{"_index":8,"title":{"1-5":{},"41-183":{},"41-207":{}},"name":{},"text":{"1":{},"20":{},"32":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["product456",{"_index":883,"title":{},"name":{},"text":{"32":{}},"component":{}}],["productid",{"_index":889,"title":{},"name":{},"text":{"32":{}},"component":{}}],["program",{"_index":1297,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["programmat",{"_index":2020,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["progress",{"_index":27,"title":{},"name":{},"text":{"1":{},"39":{},"41":{}},"component":{}}],["project",{"_index":1,"title":{"1-2":{}},"name":{},"text":{"1":{},"16":{},"17":{},"18":{},"20":{},"36":{},"41":{}},"component":{}}],["projectstarterpack",{"_index":166,"title":{},"name":{},"text":{"16":{}},"component":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}}}],["project’",{"_index":984,"title":{},"name":{},"text":{"36":{}},"component":{}}],["prompt",{"_index":1693,"title":{},"name":{},"text":{"38":{}},"component":{}}],["proof",{"_index":1733,"title":{"39-96":{},"41-118":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["propag",{"_index":2874,"title":{},"name":{},"text":{"41":{}},"component":{}}],["proper",{"_index":1775,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["properli",{"_index":2004,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["properti",{"_index":1190,"title":{"38-9":{},"38-10":{},"38-11":{},"39-109":{},"39-110":{},"39-112":{},"39-125":{},"40-13":{},"40-14":{},"41-131":{},"41-132":{},"41-134":{},"41-147":{},"41-160":{},"41-203":{},"41-248":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["properties.desir",{"_index":2779,"title":{},"name":{},"text":{"41":{}},"component":{}}],["properties.reported.devicemodel",{"_index":2748,"title":{},"name":{},"text":{"41":{}},"component":{}}],["properties/desir",{"_index":2970,"title":{},"name":{},"text":{"41":{}},"component":{}}],["protect",{"_index":1956,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["protocol",{"_index":1602,"title":{"39-35":{},"39-36":{},"41-58":{},"41-59":{},"41-210":{},"41-212":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["prototyp",{"_index":2897,"title":{},"name":{},"text":{"41":{}},"component":{}}],["prove",{"_index":1992,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provid",{"_index":1284,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["provis",{"_index":1702,"title":{"39-7":{},"39-8":{},"39-38":{},"39-39":{},"39-59":{},"39-73":{},"39-79":{},"39-84":{},"39-85":{},"39-86":{},"39-94":{},"39-107":{},"41-30":{},"41-31":{},"41-61":{},"41-62":{},"41-82":{},"41-96":{},"41-106":{},"41-107":{},"41-108":{},"41-116":{},"41-129":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["provisioning.net",{"_index":2052,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provisioning.net&sig=jdyscqtpxdejs49eliuccohw2dlfdr3zfh5kqgjo4r4%3d&se=1456973447&skn=enrollmentread",{"_index":2054,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provisioning.net/enrol",{"_index":2047,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provisioning.net/enrollmentgroup",{"_index":2048,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provisioning.net/registrations/{id",{"_index":2049,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provisioning/deploy",{"_index":1900,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["provisioningserviceown",{"_index":2045,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["proxi",{"_index":2522,"title":{"41-221":{}},"name":{},"text":{"41":{},"44":{}},"component":{}}],["pseudocod",{"_index":2605,"title":{},"name":{},"text":{"41":{}},"component":{}}],["public",{"_index":1905,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["publish",{"_index":1110,"title":{},"name":{},"text":{"36":{},"38":{},"39":{}},"component":{}}],["pull",{"_index":1064,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["puppet",{"_index":1157,"title":{},"name":{},"text":{"36":{}},"component":{}}],["purchas",{"_index":1789,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["purpos",{"_index":1264,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["push",{"_index":459,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["put",{"_index":636,"title":{},"name":{},"text":{"22":{},"26":{},"36":{},"38":{},"41":{},"42":{},"43":{}},"component":{}}],["python",{"_index":2594,"title":{},"name":{},"text":{"41":{}},"component":{}}],["q",{"_index":2934,"title":{},"name":{},"text":{"41":{},"42":{},"43":{}},"component":{}}],["qa",{"_index":3111,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["qaq",{"_index":3113,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["qnx",{"_index":2575,"title":{},"name":{},"text":{"41":{}},"component":{}}],["quarantin",{"_index":2001,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["queri",{"_index":453,"title":{"38-47":{},"38-65":{},"39-115":{},"39-124":{},"39-126":{},"39-128":{},"39-130":{},"41-137":{},"41-146":{},"41-148":{},"41-150":{},"41-152":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["query\\\":\\\"\\\",\\\"sdkversion\\\":\\\"\\\",\\\"messagesize\\\":\\\"\\\",\\\"pages",{"_index":2419,"title":{},"name":{},"text":{"40":{}},"component":{}}],["question",{"_index":48,"title":{"42":{}},"name":{"42":{}},"text":{"1":{},"39":{},"41":{}},"component":{}}],["queue",{"_index":1752,"title":{"39-144":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["quickfix",{"_index":3075,"title":{"43-24":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["quickli",{"_index":1765,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["quit",{"_index":2983,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["quot",{"_index":2750,"title":{},"name":{},"text":{"41":{}},"component":{}}],["quota",{"_index":1750,"title":{"39-133":{},"41-155":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["r",{"_index":3035,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["r1",{"_index":886,"title":{},"name":{},"text":{"32":{}},"component":{}}],["r2",{"_index":887,"title":{},"name":{},"text":{"32":{}},"component":{}}],["r3",{"_index":888,"title":{},"name":{},"text":{"32":{}},"component":{}}],["rail",{"_index":1156,"title":{},"name":{},"text":{"36":{}},"component":{}}],["railway",{"_index":1234,"title":{},"name":{},"text":{"38":{}},"component":{}}],["randomli",{"_index":90,"title":{},"name":{},"text":{"1":{}},"component":{}}],["rang",{"_index":2216,"title":{"43-23":{}},"name":{},"text":{"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["rank",{"_index":2770,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rapid",{"_index":2252,"title":{},"name":{},"text":{"39":{}},"component":{}}],["rare",{"_index":2700,"title":{},"name":{},"text":{"41":{}},"component":{}}],["raspberri",{"_index":2597,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rate",{"_index":1589,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["raw",{"_index":2234,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["rbac",{"_index":1827,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["re",{"_index":1919,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["reach",{"_index":593,"title":{},"name":{},"text":{"21":{},"36":{},"38":{},"41":{}},"component":{}}],["reachabl",{"_index":938,"title":{"36-5":{}},"name":{},"text":{"36":{}},"component":{}}],["react",{"_index":1766,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["reactiv",{"_index":2236,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["read",{"_index":1093,"title":{"39-117":{},"40-8":{},"41-139":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["read/writ",{"_index":1910,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["reader",{"_index":308,"title":{},"name":{},"text":{"6":{},"11":{},"36":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["readi",{"_index":1481,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["readm",{"_index":2070,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["real",{"_index":702,"title":{},"name":{},"text":{"25":{},"39":{},"41":{}},"component":{}}],["realiz",{"_index":1007,"title":{},"name":{},"text":{"36":{},"42":{}},"component":{}}],["realli",{"_index":713,"title":{},"name":{},"text":{"25":{},"32":{}},"component":{}}],["rearrang",{"_index":1307,"title":{},"name":{},"text":{"38":{}},"component":{}}],["reason",{"_index":688,"title":{},"name":{},"text":{"23":{},"36":{},"39":{},"40":{},"41":{}},"component":{}}],["reassign",{"_index":1510,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["rebas",{"_index":943,"title":{"36-11":{},"36-13":{},"36-14":{}},"name":{},"text":{"36":{}},"component":{}}],["rebase.html",{"_index":1078,"title":{},"name":{},"text":{"36":{}},"component":{}}],["reboot",{"_index":2959,"title":{},"name":{},"text":{"41":{}},"component":{}}],["receiv",{"_index":1251,"title":{"39-69":{},"41-92":{},"41-237":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["receivemessagesfromdeviceasync(str",{"_index":2462,"title":{},"name":{},"text":{"40":{}},"component":{}}],["recent",{"_index":1333,"title":{},"name":{},"text":{"38":{},"41":{},"42":{}},"component":{}}],["recip",{"_index":1140,"title":{},"name":{},"text":{"36":{}},"component":{}}],["recogn",{"_index":232,"title":{},"name":{},"text":{"5":{},"10":{},"39":{},"41":{}},"component":{}}],["recommend",{"_index":1470,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["reconcil",{"_index":2925,"title":{},"name":{},"text":{"41":{}},"component":{}}],["reconfigur",{"_index":2927,"title":{},"name":{},"text":{"41":{}},"component":{}}],["reconnect",{"_index":2920,"title":{},"name":{},"text":{"41":{}},"component":{}}],["record",{"_index":1518,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["recoveri",{"_index":2543,"title":{},"name":{},"text":{"41":{}},"component":{}}],["recreat",{"_index":2711,"title":{},"name":{},"text":{"41":{}},"component":{}}],["recurs",{"_index":3056,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["redefin",{"_index":1377,"title":{},"name":{},"text":{"38":{}},"component":{}}],["redeliv",{"_index":2282,"title":{},"name":{},"text":{"39":{}},"component":{}}],["redistribut",{"_index":2828,"title":{},"name":{},"text":{"41":{}},"component":{}}],["redo",{"_index":2987,"title":{"43-4":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["reduc",{"_index":1813,"title":{"41-214":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ree",{"_index":2666,"title":{},"name":{},"text":{"41":{}},"component":{}}],["reestablish",{"_index":1970,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["refer",{"_index":231,"title":{"16-4":{},"17-2":{},"36-3":{},"36-5":{}},"name":{},"text":{"5":{},"10":{},"16":{},"17":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["referenc",{"_index":1344,"title":{},"name":{},"text":{"38":{}},"component":{}}],["reflect",{"_index":1468,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["refrain",{"_index":2196,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["refresh",{"_index":2072,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["reg",{"_index":3101,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["regardless",{"_index":235,"title":{},"name":{},"text":{"5":{},"10":{},"39":{},"40":{},"41":{}},"component":{}}],["region",{"_index":1638,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["regist",{"_index":1735,"title":{"39-97":{},"41-119":{},"43-26":{},"43-27":{}},"name":{},"text":{"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["registering/provis",{"_index":1918,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["registr",{"_index":1707,"title":{"39-25":{},"39-45":{},"39-49":{},"41-48":{},"41-68":{},"41-72":{}},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["registrationstatusread",{"_index":2057,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["registrationstatuswrit",{"_index":2058,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["registri",{"_index":1708,"title":{"39-26":{},"39-28":{},"41-49":{},"41-51":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["registrycredenti",{"_index":2784,"title":{},"name":{},"text":{"41":{}},"component":{}}],["reimagin",{"_index":1369,"title":{},"name":{},"text":{"38":{}},"component":{}}],["rel",{"_index":2754,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rel_has_thermostat",{"_index":1558,"title":{},"name":{},"text":{"38":{}},"component":{}}],["relat",{"_index":1016,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["relationship",{"_index":1198,"title":{"38-19":{},"38-46":{}},"name":{},"text":{"38":{},"41":{}},"component":{}}],["releas",{"_index":495,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["relev",{"_index":1963,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["reli",{"_index":1547,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["reliabl",{"_index":2239,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["remain",{"_index":1358,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["remap",{"_index":3069,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rememb",{"_index":1040,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["remot",{"_index":456,"title":{"36-15":{}},"name":{},"text":{"20":{},"36":{},"39":{},"41":{},"44":{}},"component":{}}],["remote’",{"_index":470,"title":{},"name":{},"text":{"20":{}},"component":{}}],["remov",{"_index":1206,"title":{"38-35":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["renam",{"_index":1105,"title":{},"name":{},"text":{"36":{}},"component":{}}],["render",{"_index":238,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["renew",{"_index":2563,"title":{},"name":{},"text":{"41":{}},"component":{}}],["repeat",{"_index":1180,"title":{"43-17":{},"43-18":{}},"name":{},"text":{"36":{},"39":{},"42":{},"43":{}},"component":{}}],["replac",{"_index":211,"title":{},"name":{},"text":{"5":{},"10":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["replace_with_password",{"_index":450,"title":{},"name":{},"text":{"20":{}},"component":{}}],["replace_with_user_nam",{"_index":448,"title":{},"name":{},"text":{"20":{}},"component":{}}],["replay",{"_index":1073,"title":{},"name":{},"text":{"36":{},"39":{}},"component":{}}],["repli",{"_index":2116,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["replic",{"_index":3208,"title":{},"name":{},"text":{"44":{}},"component":{}}],["report",{"_index":1334,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["repositori",{"_index":420,"title":{"20-2":{}},"name":{},"text":{"20":{},"36":{},"39":{},"41":{}},"component":{}}],["repres",{"_index":1226,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["represent",{"_index":1244,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["reprovis",{"_index":1731,"title":{"39-75":{},"39-76":{},"39-78":{},"41-98":{},"41-99":{},"41-101":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["request",{"_index":1127,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["requests",{"_index":2436,"title":{},"name":{},"text":{"40":{}},"component":{}}],["requesturi",{"_index":1639,"title":{},"name":{},"text":{"38":{}},"component":{}}],["requir",{"_index":652,"title":{"38-38":{}},"name":{},"text":{"22":{},"27":{},"34":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["rerout",{"_index":2358,"title":{},"name":{},"text":{"39":{}},"component":{}}],["rescu",{"_index":894,"title":{},"name":{},"text":{"32":{}},"component":{}}],["reset",{"_index":135,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"11":{},"36":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["resili",{"_index":2869,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["resiz",{"_index":3037,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["resolut",{"_index":2942,"title":{},"name":{},"text":{"41":{}},"component":{}}],["resouc",{"_index":1401,"title":{},"name":{},"text":{"38":{}},"component":{}}],["resourc",{"_index":436,"title":{"38-51":{},"38-67":{},"40-7":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["resourceid",{"_index":1621,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["resourceuri",{"_index":1979,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["respect",{"_index":1521,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["respond",{"_index":1773,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["respons",{"_index":1579,"title":{"39-135":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["responses",{"_index":2437,"title":{},"name":{},"text":{"40":{}},"component":{}}],["rest",{"_index":1483,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["restart",{"_index":2626,"title":{},"name":{},"text":{"41":{}},"component":{}}],["restartpolici",{"_index":2625,"title":{},"name":{},"text":{"41":{}},"component":{}}],["restor",{"_index":2924,"title":{},"name":{},"text":{"41":{}},"component":{}}],["restrict",{"_index":1416,"title":{},"name":{},"text":{"38":{},"41":{},"44":{}},"component":{}}],["result",{"_index":185,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"11":{},"21":{},"23":{},"24":{},"25":{},"27":{},"30":{},"31":{},"32":{},"33":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["result1",{"_index":846,"title":{},"name":{},"text":{"30":{}},"component":{}}],["result2",{"_index":848,"title":{},"name":{},"text":{"30":{}},"component":{}}],["result3",{"_index":850,"title":{},"name":{},"text":{"30":{}},"component":{}}],["resultdescript",{"_index":1629,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["results",{"_index":2420,"title":{},"name":{},"text":{"40":{}},"component":{}}],["resultsignatur",{"_index":1628,"title":{},"name":{},"text":{"38":{}},"component":{}}],["resulttyp",{"_index":1626,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["resum",{"_index":9,"title":{"1-6":{}},"name":{},"text":{"1":{}},"component":{}}],["resync",{"_index":2923,"title":{},"name":{},"text":{"41":{}},"component":{}}],["retain",{"_index":2107,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["retent",{"_index":2146,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["retir",{"_index":1710,"title":{"39-34":{},"41-57":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["retreiv",{"_index":1853,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["retri",{"_index":2279,"title":{},"name":{},"text":{"39":{}},"component":{}}],["retriev",{"_index":1319,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["return",{"_index":525,"title":{},"name":{},"text":{"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["returnfrom",{"_index":659,"title":{},"name":{},"text":{"22":{}},"component":{}}],["reupload",{"_index":1208,"title":{"38-41":{}},"name":{},"text":{"38":{}},"component":{}}],["reus",{"_index":1534,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["revers",{"_index":412,"title":{},"name":{},"text":{"18":{}},"component":{}}],["review",{"_index":1126,"title":{"41-11":{},"41-219":{}},"name":{},"text":{"36":{},"41":{},"44":{}},"component":{}}],["revis",{"_index":1175,"title":{},"name":{},"text":{"36":{}},"component":{}}],["revoc",{"_index":1962,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["revok",{"_index":1892,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["rewrap",{"_index":625,"title":{},"name":{},"text":{"22":{},"25":{},"32":{}},"component":{}}],["rewrit",{"_index":803,"title":{},"name":{},"text":{"28":{},"36":{}},"component":{}}],["rfc7232",{"_index":2496,"title":{},"name":{},"text":{"40":{}},"component":{}}],["rg",{"_index":2933,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rich",{"_index":2665,"title":{},"name":{},"text":{"41":{}},"component":{}}],["right",{"_index":261,"title":{},"name":{},"text":{"5":{},"10":{},"22":{},"24":{},"36":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["rile",{"_index":3202,"title":{},"name":{},"text":{"44":{}},"component":{}}],["riot",{"_index":2574,"title":{},"name":{},"text":{"41":{}},"component":{}}],["risk",{"_index":2701,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["robust",{"_index":2941,"title":{},"name":{},"text":{"41":{}},"component":{}}],["role",{"_index":1393,"title":{"39-135":{},"44-8":{},"44-9":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["roll",{"_index":1737,"title":{"39-100":{},"39-101":{},"41-122":{},"41-123":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["rollback",{"_index":2517,"title":{"41-195":{}},"name":{},"text":{"41":{}},"component":{}}],["rollout",{"_index":2516,"title":{"41-193":{}},"name":{},"text":{"41":{}},"component":{}}],["room",{"_index":1249,"title":{},"name":{},"text":{"38":{}},"component":{}}],["room_01",{"_index":1555,"title":{},"name":{},"text":{"38":{}},"component":{}}],["room_02",{"_index":1556,"title":{},"name":{},"text":{"38":{}},"component":{}}],["root",{"_index":348,"title":{"39-56":{},"39-64":{},"39-105":{},"41-79":{},"41-87":{},"41-127":{},"41-174":{},"41-179":{}},"name":{},"text":{"16":{},"17":{},"38":{},"39":{},"41":{}},"component":{}}],["rotat",{"_index":3034,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["rout",{"_index":1200,"title":{"38-23":{},"38-24":{},"38-58":{},"39-3":{},"39-113":{},"39-114":{},"39-115":{},"39-118":{},"39-120":{},"39-124":{},"39-125":{},"39-127":{},"39-129":{},"39-167":{},"41-26":{},"41-135":{},"41-136":{},"41-137":{},"41-140":{},"41-142":{},"41-146":{},"41-147":{},"41-149":{},"41-151":{},"41-199":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["route1",{"_index":2787,"title":{},"name":{},"text":{"41":{}},"component":{}}],["route2",{"_index":2788,"title":{},"name":{},"text":{"41":{}},"component":{}}],["routingfailurer",{"_index":1584,"title":{},"name":{},"text":{"38":{}},"component":{}}],["routinglat",{"_index":1585,"title":{},"name":{},"text":{"38":{}},"component":{}}],["rsa",{"_index":2724,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rule",{"_index":616,"title":{"31":{}},"name":{},"text":{"21":{},"25":{},"31":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["run",{"_index":491,"title":{"23":{}},"name":{},"text":{"20":{},"23":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["runresult",{"_index":681,"title":{},"name":{},"text":{"23":{}},"component":{}}],["runtim",{"_index":2507,"title":{"41-157":{},"41-217":{},"41-232":{},"41-238":{}},"name":{},"text":{"41":{}},"component":{}}],["runtime.platform.vers",{"_index":2684,"title":{},"name":{},"text":{"41":{}},"component":{}}],["s",{"_index":890,"title":{},"name":{},"text":{"32":{},"34":{},"42":{},"43":{}},"component":{}}],["s#pattern#replac",{"_index":3169,"title":{},"name":{},"text":{"43":{}},"component":{}}],["s/pattern",{"_index":3171,"title":{},"name":{},"text":{"43":{}},"component":{}}],["s/pattern/replac",{"_index":3167,"title":{},"name":{},"text":{"43":{}},"component":{}}],["s/pattern/replacement/flag",{"_index":3114,"title":{},"name":{},"text":{"42":{}},"component":{}}],["s/pattern/replacement/g",{"_index":3172,"title":{},"name":{},"text":{"43":{}},"component":{}}],["s1",{"_index":438,"title":{},"name":{},"text":{"20":{},"39":{},"41":{}},"component":{}}],["s2",{"_index":1790,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["s3",{"_index":1792,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sa",{"_index":1729,"title":{"39-72":{},"41-95":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["saa",{"_index":3184,"title":{},"name":{},"text":{"44":{}},"component":{}}],["safe",{"_index":744,"title":{},"name":{},"text":{"26":{},"39":{},"41":{}},"component":{}}],["sam'",{"_index":242,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["same",{"_index":619,"title":{},"name":{},"text":{"21":{},"25":{},"27":{},"31":{},"33":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["sampl",{"_index":53,"title":{"36-17":{}},"name":{},"text":{"1":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["sample1",{"_index":772,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sample2",{"_index":786,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sample3_introducingzero",{"_index":918,"title":{},"name":{},"text":{"34":{}},"component":{}}],["sam’",{"_index":244,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["sam␁",{"_index":243,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["sandbox",{"_index":1961,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["satellit",{"_index":1342,"title":{},"name":{},"text":{"38":{}},"component":{}}],["satisfi",{"_index":2162,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["save",{"_index":310,"title":{},"name":{},"text":{"6":{},"11":{},"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["savepoint",{"_index":939,"title":{"36-6":{},"36-9":{}},"name":{},"text":{"36":{}},"component":{}}],["say",{"_index":1084,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["scalabl",{"_index":2249,"title":{},"name":{},"text":{"39":{}},"component":{}}],["scale",{"_index":2233,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["scari",{"_index":140,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["scatter",{"_index":2601,"title":{},"name":{},"text":{"41":{}},"component":{}}],["scenario",{"_index":67,"title":{"38-2":{},"38-52":{},"38-54":{},"38-55":{},"39-76":{},"41-4":{},"41-99":{},"41-230":{}},"name":{},"text":{"1":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["scene",{"_index":699,"title":{},"name":{},"text":{"25":{},"27":{},"32":{},"34":{},"38":{}},"component":{}}],["schema",{"_index":1195,"title":{"38-15":{},"38-62":{},"38-63":{},"38-64":{},"39-157":{},"39-159":{},"39-160":{},"39-161":{},"39-162":{},"39-163":{}},"name":{},"text":{"38":{},"39":{},"40":{}},"component":{}}],["schemavers",{"_index":2782,"title":{},"name":{},"text":{"41":{}},"component":{}}],["scheme",{"_index":1839,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["scienc",{"_index":708,"title":{},"name":{},"text":{"25":{}},"component":{}}],["scope",{"_index":1694,"title":{"39-48":{},"41-71":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["scope\\\":\\\"device\\\",\\\"type\\\":\\\"sas\\\",\\\"issuer\\\":\\\"iothub\\\",\\\"acceptingipfilterrule\\\":nul",{"_index":2336,"title":{},"name":{},"text":{"39":{}},"component":{}}],["scott",{"_index":930,"title":{},"name":{},"text":{"35":{}},"component":{}}],["scout",{"_index":940,"title":{"36-8":{}},"name":{},"text":{"36":{}},"component":{}}],["scratch",{"_index":2223,"title":{},"name":{},"text":{"39":{}},"component":{}}],["screen",{"_index":2537,"title":{},"name":{},"text":{"41":{},"42":{},"43":{},"44":{}},"component":{}}],["screenshot",{"_index":2728,"title":{},"name":{},"text":{"41":{}},"component":{}}],["script",{"_index":2031,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["scroll",{"_index":2090,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["sdk",{"_index":1210,"title":{"38-44":{},"39-84":{},"39-85":{},"39-86":{},"41-106":{},"41-107":{},"41-108":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["sdkversion",{"_index":2424,"title":{},"name":{},"text":{"40":{}},"component":{}}],["seamleass",{"_index":2098,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["search",{"_index":2095,"title":{"43-3":{}},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["searchabl",{"_index":94,"title":{},"name":{},"text":{"1":{}},"component":{}}],["second",{"_index":573,"title":{},"name":{},"text":{"21":{},"23":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["secondari",{"_index":2499,"title":{},"name":{},"text":{"40":{}},"component":{}}],["secondarythumbprint",{"_index":1875,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["secret",{"_index":1034,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"44":{}},"component":{}}],["section",{"_index":30,"title":{},"name":{},"text":{"1":{},"5":{},"10":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["secur",{"_index":1701,"title":{"44":{},"39-2":{},"39-19":{},"39-22":{},"39-61":{},"39-91":{},"39-92":{},"39-93":{},"39-152":{},"41-25":{},"41-42":{},"41-45":{},"41-84":{},"41-113":{},"41-114":{},"41-115":{},"41-161":{},"41-162":{},"41-165":{},"41-173":{},"41-174":{},"41-175":{}},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["see",{"_index":145,"title":{},"name":{},"text":{"2":{},"7":{},"20":{},"25":{},"32":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["seemann",{"_index":935,"title":{},"name":{},"text":{"35":{}},"component":{}}],["seen",{"_index":2651,"title":{},"name":{},"text":{"41":{}},"component":{}}],["select",{"_index":291,"title":{},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["selector",{"_index":338,"title":{},"name":{},"text":{"16":{}},"component":{}}],["self",{"_index":482,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{},"44":{}},"component":{}}],["selfsignedcertif",{"_index":1838,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["semant",{"_index":952,"title":{"36-20":{}},"name":{},"text":{"36":{},"38":{}},"component":{}}],["semvar",{"_index":1182,"title":{},"name":{},"text":{"36":{}},"component":{}}],["semver",{"_index":1179,"title":{},"name":{},"text":{"36":{}},"component":{}}],["send",{"_index":1267,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["sender",{"_index":2393,"title":{},"name":{},"text":{"40":{}},"component":{}}],["sendeventasync",{"_index":2604,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sendfrequ",{"_index":1878,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sens",{"_index":922,"title":{},"name":{},"text":{"34":{},"41":{}},"component":{}}],["sensibl",{"_index":730,"title":{},"name":{},"text":{"25":{}},"component":{}}],["sensit",{"_index":1849,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["sensor",{"_index":1299,"title":{"41-9":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["sensor:1.0",{"_index":2811,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sensortofilt",{"_index":2814,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sent",{"_index":1324,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["sentenc",{"_index":3122,"title":{},"name":{},"text":{"43":{}},"component":{}}],["separ",{"_index":202,"title":{},"name":{},"text":{"4":{},"9":{},"36":{},"38":{},"40":{},"41":{}},"component":{}}],["seper",{"_index":208,"title":{},"name":{},"text":{"4":{},"9":{},"39":{},"41":{},"43":{}},"component":{}}],["septemb",{"_index":2432,"title":{},"name":{},"text":{"40":{}},"component":{}}],["seq",{"_index":910,"title":{},"name":{},"text":{"33":{},"34":{}},"component":{}}],["sequenc",{"_index":785,"title":{},"name":{},"text":{"27":{},"36":{},"39":{},"41":{}},"component":{}}],["sequencenumb",{"_index":2317,"title":{},"name":{},"text":{"39":{}},"component":{}}],["sequenti",{"_index":506,"title":{"21-4":{}},"name":{},"text":{"21":{},"34":{}},"component":{}}],["seri",{"_index":576,"title":{},"name":{},"text":{"21":{},"30":{},"38":{},"39":{},"41":{},"43":{}},"component":{}}],["serial",{"_index":2138,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["server",{"_index":1001,"title":{"41-182":{}},"name":{},"text":{"36":{},"38":{},"40":{},"41":{},"44":{}},"component":{}}],["serverless",{"_index":2232,"title":{},"name":{},"text":{"39":{}},"component":{}}],["servic",{"_index":416,"title":{"20-1":{},"38-1":{},"38-3":{},"38-22":{},"38-54":{},"38-55":{},"39-7":{},"39-59":{},"39-79":{},"39-80":{},"39-86":{},"39-93":{},"39-94":{},"39-137":{},"39-140":{},"39-143":{},"40-6":{},"40-9":{},"41-19":{},"41-30":{},"41-82":{},"41-103":{},"41-108":{},"41-115":{},"41-116":{},"44-10":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["serviceconfig",{"_index":2055,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["serviceconnect",{"_index":2148,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["service}.azur",{"_index":2046,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["service—iot",{"_index":1258,"title":{},"name":{},"text":{"38":{}},"component":{}}],["session",{"_index":2143,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["set",{"_index":276,"title":{"38-61":{},"41-213":{},"41-223":{},"41-241":{}},"name":{},"text":{"6":{},"11":{},"20":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["set/embed",{"_index":1991,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["settabl",{"_index":2115,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["settings.createopt",{"_index":2620,"title":{},"name":{},"text":{"41":{}},"component":{}}],["settings.imag",{"_index":2619,"title":{},"name":{},"text":{"41":{}},"component":{}}],["setup",{"_index":975,"title":{"39-41":{},"41-64":{}},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["sev",{"_index":2385,"title":{},"name":{},"text":{"40":{}},"component":{}}],["seven",{"_index":1380,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["sever",{"_index":1100,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["sgx",{"_index":2691,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sha",{"_index":1018,"title":{},"name":{},"text":{"36":{}},"component":{}}],["sha256",{"_index":1981,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["shamelessli",{"_index":927,"title":{},"name":{},"text":{"35":{}},"component":{}}],["shape",{"_index":2218,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["share",{"_index":1059,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"44":{}},"component":{}}],["sharedaccesssignatur",{"_index":1977,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sharepoint",{"_index":3222,"title":{},"name":{},"text":{"44":{}},"component":{}}],["shawn",{"_index":369,"title":{"18-1":{}},"name":{},"text":{},"component":{}}],["shell",{"_index":1099,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["shield",{"_index":2866,"title":{},"name":{},"text":{"41":{}},"component":{}}],["shift",{"_index":3215,"title":{},"name":{},"text":{"44":{}},"component":{}}],["shift+v",{"_index":2979,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["short",{"_index":203,"title":{},"name":{},"text":{"4":{},"9":{},"18":{},"25":{},"36":{},"38":{},"41":{}},"component":{}}],["shortcut",{"_index":295,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["show",{"_index":307,"title":{},"name":{},"text":{"6":{},"11":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["shown",{"_index":1095,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["shut",{"_index":2628,"title":{},"name":{},"text":{"41":{}},"component":{}}],["side",{"_index":342,"title":{},"name":{},"text":{"16":{},"21":{},"22":{},"23":{},"24":{},"26":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["sidebar",{"_index":199,"title":{"4":{},"9":{},"4-1":{},"9-1":{}},"name":{"4":{},"9":{}},"text":{"4":{},"9":{}},"component":{}}],["sig={signature}&se={expiry}&skn={policyname}&sr={url",{"_index":1978,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sign",{"_index":1736,"title":{"39-98":{},"39-99":{},"41-120":{},"41-121":{}},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["signal",{"_index":2378,"title":{},"name":{},"text":{"40":{}},"component":{}}],["signatur",{"_index":769,"title":{},"name":{},"text":{"27":{},"33":{},"39":{},"41":{},"44":{}},"component":{}}],["signific",{"_index":2361,"title":{},"name":{},"text":{"39":{}},"component":{}}],["silicon",{"_index":1907,"title":{"41-174":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["similar",{"_index":693,"title":{},"name":{},"text":{"24":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["similarli",{"_index":2154,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["simpl",{"_index":919,"title":{"38-2":{}},"name":{},"text":{"34":{},"38":{},"39":{},"41":{}},"component":{}}],["simplest",{"_index":719,"title":{},"name":{},"text":{"25":{}},"component":{}}],["simpli",{"_index":2859,"title":{},"name":{},"text":{"41":{}},"component":{}}],["simplic",{"_index":2291,"title":{},"name":{},"text":{"39":{}},"component":{}}],["simplifi",{"_index":855,"title":{},"name":{},"text":{"30":{},"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["simul",{"_index":946,"title":{"36-13":{},"39-87":{},"41-109":{}},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["simulatedtemperaturesensor",{"_index":2810,"title":{},"name":{},"text":{"41":{}},"component":{}}],["simulator.ex",{"_index":2028,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["singl",{"_index":262,"title":{"43-18":{}},"name":{},"text":{"5":{},"10":{},"23":{},"27":{},"30":{},"36":{},"38":{},"39":{},"41":{},"43":{},"44":{}},"component":{}}],["sink",{"_index":1824,"title":{"41-202":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sit",{"_index":2595,"title":{},"name":{},"text":{"41":{}},"component":{}}],["site",{"_index":328,"title":{"16-3":{}},"name":{},"text":{"16":{},"44":{}},"component":{}}],["site.yml",{"_index":353,"title":{},"name":{},"text":{"16":{}},"component":{}}],["site’",{"_index":352,"title":{},"name":{},"text":{"16":{}},"component":{}}],["size",{"_index":1229,"title":{"39-111":{},"41-133":{},"41-224":{}},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["sku",{"_index":437,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sla",{"_index":2274,"title":{},"name":{},"text":{"39":{}},"component":{}}],["sleep",{"_index":2478,"title":{},"name":{},"text":{"40":{}},"component":{}}],["slight",{"_index":2168,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["slightli",{"_index":2878,"title":{},"name":{},"text":{"41":{}},"component":{}}],["slot",{"_index":421,"title":{"20-3":{}},"name":{},"text":{"20":{}},"component":{}}],["slot’",{"_index":476,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sm",{"_index":2480,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["small",{"_index":38,"title":{},"name":{},"text":{"1":{},"36":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["smaller",{"_index":2596,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["smallest",{"_index":2269,"title":{},"name":{},"text":{"39":{}},"component":{}}],["smart",{"_index":2548,"title":{},"name":{},"text":{"41":{}},"component":{}}],["smartcard",{"_index":3238,"title":{},"name":{},"text":{"44":{}},"component":{}}],["smooth",{"_index":2868,"title":{},"name":{},"text":{"41":{}},"component":{}}],["snapshot",{"_index":2354,"title":{},"name":{},"text":{"39":{}},"component":{}}],["snif",{"_index":2064,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["socket",{"_index":131,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["softwar",{"_index":999,"title":{"41-18":{}},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["solar",{"_index":1338,"title":{},"name":{},"text":{"38":{}},"component":{}}],["sold",{"_index":1960,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["solut",{"_index":653,"title":{"38-3":{},"38-6":{},"38-21":{},"39-134":{},"41-12":{},"41-13":{},"41-19":{},"41-222":{}},"name":{},"text":{"22":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["solv",{"_index":1522,"title":{},"name":{},"text":{"38":{}},"component":{}}],["some(%a",{"_index":520,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"33":{},"34":{}},"component":{}}],["some(top/bottom",{"_index":753,"title":{},"name":{},"text":{"26":{}},"component":{}}],["someon",{"_index":132,"title":{},"name":{},"text":{"2":{},"7":{},"39":{},"41":{}},"component":{}}],["someonw",{"_index":1909,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["someth",{"_index":674,"title":{},"name":{},"text":{"23":{},"26":{},"29":{},"30":{},"36":{},"38":{},"39":{},"42":{},"43":{},"44":{}},"component":{}}],["sometim",{"_index":648,"title":{},"name":{},"text":{"22":{},"30":{},"38":{},"39":{},"41":{}},"component":{}}],["somewher",{"_index":1066,"title":{},"name":{},"text":{"36":{}},"component":{}}],["soon",{"_index":1697,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["sophist",{"_index":1552,"title":{},"name":{},"text":{"38":{}},"component":{}}],["sort",{"_index":626,"title":{},"name":{},"text":{"22":{},"25":{},"32":{}},"component":{}}],["sound",{"_index":1239,"title":{},"name":{},"text":{"38":{}},"component":{}}],["sourc",{"_index":164,"title":{"16-1":{},"17-1":{},"39-148":{},"41-200":{}},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"16":{},"17":{},"20":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["southcentralu",{"_index":1658,"title":{},"name":{},"text":{"38":{}},"component":{}}],["space",{"_index":256,"title":{"41-214":{}},"name":{},"text":{"5":{},"10":{},"41":{},"42":{},"43":{}},"component":{}}],["spark",{"_index":2152,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["spec",{"_index":1444,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["special",{"_index":117,"title":{"5":{},"10":{},"5-1":{},"10-1":{}},"name":{"5":{},"10":{}},"text":{"2":{},"5":{},"7":{},"10":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["specialist",{"_index":2226,"title":{},"name":{},"text":{"39":{},"44":{}},"component":{}}],["specif",{"_index":332,"title":{"16-6":{},"17-4":{},"38-13":{},"39-106":{},"41-128":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["specifi",{"_index":1150,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["specvers",{"_index":1445,"title":{},"name":{},"text":{"38":{}},"component":{}}],["sphere",{"_index":2506,"title":{"41-14":{}},"name":{},"text":{"41":{}},"component":{}}],["spike",{"_index":2870,"title":{},"name":{},"text":{"41":{}},"component":{}}],["spit",{"_index":3078,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["split",{"_index":1125,"title":{},"name":{},"text":{"36":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["spoof",{"_index":1745,"title":{"39-112":{},"41-134":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["spot",{"_index":1010,"title":{},"name":{},"text":{"36":{}},"component":{}}],["spout",{"_index":2151,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["spring",{"_index":1035,"title":{},"name":{},"text":{"36":{}},"component":{}}],["sql",{"_index":2954,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sr=mydps.azur",{"_index":2053,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["srk",{"_index":1959,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["srk_pub",{"_index":1967,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ssh",{"_index":2826,"title":{},"name":{},"text":{"41":{}},"component":{}}],["stabl",{"_index":3129,"title":{},"name":{},"text":{"43":{}},"component":{}}],["stadium",{"_index":1235,"title":{},"name":{},"text":{"38":{}},"component":{}}],["stage",{"_index":471,"title":{},"name":{},"text":{"20":{},"39":{},"41":{}},"component":{}}],["staging.azurewebsites.net",{"_index":473,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stamp",{"_index":2113,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["standar",{"_index":2207,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["standard",{"_index":568,"title":{"39-13":{},"41-36":{}},"name":{},"text":{"21":{},"38":{},"39":{},"41":{},"43":{},"44":{}},"component":{}}],["standard/rich",{"_index":2671,"title":{},"name":{},"text":{"41":{}},"component":{}}],["start",{"_index":49,"title":{},"name":{},"text":{"1":{},"16":{},"21":{},"29":{},"31":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["start_pag",{"_index":351,"title":{},"name":{},"text":{"16":{}},"component":{}}],["starter",{"_index":2,"title":{"16":{},"1-2":{},"1-3":{},"16-2":{}},"name":{},"text":{"16":{},"17":{},"41":{}},"component":{}}],["starts_with($body.$metadata.$model",{"_index":1447,"title":{},"name":{},"text":{"38":{}},"component":{}}],["starts_with(x,i",{"_index":1461,"title":{},"name":{},"text":{"38":{}},"component":{}}],["startup",{"_index":2617,"title":{},"name":{},"text":{"41":{}},"component":{}}],["state",{"_index":961,"title":{"39-77":{},"40-10":{},"41-100":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["statement",{"_index":797,"title":{},"name":{},"text":{"28":{},"29":{},"30":{}},"component":{}}],["state—although",{"_index":1529,"title":{},"name":{},"text":{"38":{}},"component":{}}],["static",{"_index":1914,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["statu",{"_index":1516,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["status",{"_index":2623,"title":{},"name":{},"text":{"41":{}},"component":{}}],["statuscod",{"_index":2403,"title":{},"name":{},"text":{"40":{}},"component":{}}],["statuscode\\\":\\\"4xx",{"_index":2406,"title":{},"name":{},"text":{"40":{}},"component":{}}],["statusreason",{"_index":1861,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["statusupdatetim",{"_index":1862,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["stay",{"_index":2005,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"43":{}},"component":{}}],["step",{"_index":318,"title":{"21-4":{}},"name":{},"text":{"12":{},"14":{},"21":{},"23":{},"28":{},"32":{},"34":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["stick",{"_index":128,"title":{},"name":{},"text":{"2":{},"7":{},"44":{}},"component":{}}],["still",{"_index":25,"title":{},"name":{},"text":{"1":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{}},"component":{}}],["stitch",{"_index":2603,"title":{},"name":{},"text":{"41":{}},"component":{}}],["stolen",{"_index":2078,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["stop",{"_index":666,"title":{},"name":{},"text":{"23":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["storag",{"_index":1254,"title":{"39-64":{},"39-144":{},"41-21":{},"41-87":{},"41-213":{},"41-240":{},"41-242":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["store",{"_index":347,"title":{},"name":{},"text":{"16":{},"20":{},"22":{},"25":{},"32":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["storeandforwardconfigur",{"_index":2819,"title":{},"name":{},"text":{"41":{}},"component":{}}],["storeandforwardconfiguration.timetolivesec",{"_index":2797,"title":{},"name":{},"text":{"41":{}},"component":{}}],["store’",{"_index":1531,"title":{},"name":{},"text":{"38":{}},"component":{}}],["stori",{"_index":2585,"title":{},"name":{},"text":{"41":{}},"component":{}}],["storm",{"_index":2150,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["straightforward",{"_index":1550,"title":{},"name":{},"text":{"38":{}},"component":{}}],["strategi",{"_index":1065,"title":{},"name":{},"text":{"36":{},"44":{}},"component":{}}],["stream",{"_index":1286,"title":{"41-17":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["streamlin",{"_index":2837,"title":{},"name":{},"text":{"41":{}},"component":{}}],["strict",{"_index":1971,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["string",{"_index":875,"title":{},"name":{},"text":{"32":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["strong",{"_index":2712,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["structur",{"_index":508,"title":{"21-5":{},"39-92":{},"41-114":{}},"name":{},"text":{"21":{},"34":{},"36":{},"39":{},"41":{}},"component":{}}],["studi",{"_index":6,"title":{"37":{},"1-4":{}},"name":{},"text":{"1":{},"19":{},"20":{},"35":{},"37":{}},"component":{}}],["studio",{"_index":1476,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["studynot",{"_index":413,"title":{},"name":{},"text":{},"component":{"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}}}],["style",{"_index":77,"title":{"2-1":{},"7-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"38":{}},"component":{}}],["sub",{"_index":321,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{},"41":{}},"component":{}}],["subcommand",{"_index":2633,"title":{},"name":{},"text":{"41":{}},"component":{}}],["subject",{"_index":1129,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["submerg",{"_index":892,"title":{},"name":{},"text":{"32":{}},"component":{}}],["submint",{"_index":2009,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["submit",{"_index":2010,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["subscrib",{"_index":1567,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["subscriber’",{"_index":2281,"title":{},"name":{},"text":{"39":{}},"component":{}}],["subscript",{"_index":465,"title":{"39-150":{}},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["subscriptions//resourcegroups//providers/microsoft.devices/iothub",{"_index":2310,"title":{},"name":{},"text":{"39":{}},"component":{}}],["subscriptions/bbed119",{"_index":1643,"title":{},"name":{},"text":{"38":{}},"component":{}}],["subset",{"_index":2768,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{}}],["substitut",{"_index":234,"title":{"43-28":{}},"name":{},"text":{"5":{},"10":{},"41":{},"42":{},"43":{}},"component":{}}],["subsystem",{"_index":2503,"title":{"41-1":{},"41-2":{}},"name":{},"text":{"41":{}},"component":{}}],["subtl",{"_index":547,"title":{},"name":{},"text":{"21":{}},"component":{}}],["subtract",{"_index":3008,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["subtyp",{"_index":1370,"title":{},"name":{},"text":{"38":{}},"component":{}}],["subworkflow0",{"_index":639,"title":{},"name":{},"text":{"22":{}},"component":{}}],["subworkflow1",{"_index":642,"title":{},"name":{},"text":{"22":{}},"component":{}}],["subworkflow2",{"_index":647,"title":{},"name":{},"text":{"22":{}},"component":{}}],["succe",{"_index":571,"title":{},"name":{},"text":{"21":{},"30":{},"39":{},"41":{}},"component":{}}],["succeed",{"_index":2769,"title":{},"name":{},"text":{"41":{}},"component":{}}],["success",{"_index":503,"title":{"21-3":{}},"name":{},"text":{"21":{},"30":{},"32":{},"34":{},"38":{},"39":{},"41":{}},"component":{}}],["success/error",{"_index":871,"title":{},"name":{},"text":{"32":{}},"component":{}}],["success/fail",{"_index":1582,"title":{},"name":{},"text":{"38":{}},"component":{}}],["success/failur",{"_index":612,"title":{},"name":{},"text":{"21":{}},"component":{}}],["successfulli",{"_index":1917,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["such",{"_index":159,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"25":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["sudo",{"_index":2634,"title":{},"name":{},"text":{"41":{}},"component":{}}],["suffix",{"_index":2290,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sugar",{"_index":734,"title":{"27-2":{}},"name":{},"text":{"26":{}},"component":{}}],["suggest",{"_index":2355,"title":{},"name":{},"text":{"39":{},"41":{},"42":{}},"component":{}}],["suit",{"_index":3195,"title":{},"name":{},"text":{"44":{}},"component":{}}],["suitabl",{"_index":2720,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sum",{"_index":2136,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["summar",{"_index":1079,"title":{},"name":{},"text":{"36":{}},"component":{}}],["summari",{"_index":1890,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["supplement",{"_index":206,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["suppli",{"_index":1903,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["supplier",{"_index":2222,"title":{},"name":{},"text":{"39":{}},"component":{}}],["support",{"_index":1219,"title":{"38-67":{},"39-23":{},"41-46":{},"41-238":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["sure",{"_index":715,"title":{},"name":{},"text":{"25":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{}}],["surfac",{"_index":958,"title":{},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["survey",{"_index":290,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["sustain",{"_index":1793,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["swagger",{"_index":1539,"title":{},"name":{},"text":{"38":{}},"component":{}}],["swap",{"_index":474,"title":{},"name":{},"text":{"20":{}},"component":{}}],["switch",{"_index":1421,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["symbol",{"_index":209,"title":{"5":{},"10":{},"5-1":{},"10-1":{}},"name":{},"text":{"5":{},"10":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["symkey",{"_index":2139,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["symmetr",{"_index":1728,"title":{"39-70":{},"39-71":{},"41-93":{},"41-94":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["sync",{"_index":2647,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["synchron",{"_index":1770,"title":{},"name":{},"text":{"39":{},"41":{},"42":{},"44":{}},"component":{}}],["syntact",{"_index":733,"title":{"27-2":{}},"name":{},"text":{"26":{}},"component":{}}],["syntax",{"_index":210,"title":{"5-1":{},"10-1":{},"16-4":{},"17-2":{},"39-124":{},"41-146":{}},"name":{},"text":{"5":{},"10":{},"16":{},"17":{},"26":{},"33":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["system",{"_index":102,"title":{"39-109":{},"39-110":{},"41-131":{},"41-132":{},"41-213":{},"41-238":{}},"name":{},"text":{"1":{},"17":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["system(\"l",{"_index":3095,"title":{},"name":{},"text":{"42":{}},"component":{}}],["systemmodul",{"_index":2786,"title":{},"name":{},"text":{"41":{}},"component":{}}],["systemproperti",{"_index":2175,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["system’",{"_index":2683,"title":{},"name":{},"text":{"41":{}},"component":{}}],["t",{"_index":907,"title":{},"name":{},"text":{"33":{},"42":{},"43":{}},"component":{}}],["tab",{"_index":302,"title":{"43-10":{}},"name":{},"text":{"6":{},"11":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["tabc",{"_index":3047,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["tabclos",{"_index":3046,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["tabe",{"_index":3045,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["tabl",{"_index":214,"title":{},"name":{},"text":{"5":{},"10":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["tabnew",{"_index":3044,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["tabo",{"_index":3049,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["tabonli",{"_index":3048,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["tack",{"_index":1014,"title":{},"name":{},"text":{"36":{}},"component":{}}],["tag",{"_index":971,"title":{"41-216":{},"41-217":{}},"name":{},"text":{"36":{},"39":{},"40":{},"41":{}},"component":{}}],["tag.environment='test",{"_index":2765,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tags.environ",{"_index":2743,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tags.loc",{"_index":2744,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tags.oper",{"_index":2746,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tailor",{"_index":2554,"title":{},"name":{},"text":{"41":{}},"component":{}}],["take",{"_index":85,"title":{},"name":{},"text":{"1":{},"22":{},"25":{},"27":{},"33":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["taken",{"_index":2353,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["tamper",{"_index":2680,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tandem",{"_index":2907,"title":{},"name":{},"text":{"41":{}},"component":{}}],["target",{"_index":330,"title":{"16-4":{},"16-5":{},"16-6":{},"17-2":{},"17-3":{},"17-4":{},"41-189":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["task",{"_index":1128,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["task.waitall(tasks.toarray",{"_index":2461,"title":{},"name":{},"text":{"40":{}},"component":{}}],["tasks.add(receivemessagesfromdeviceasync(partit",{"_index":2456,"title":{},"name":{},"text":{"40":{}},"component":{}}],["team",{"_index":56,"title":{},"name":{},"text":{"1":{},"20":{},"36":{},"39":{},"41":{}},"component":{}}],["technic",{"_index":2709,"title":{},"name":{},"text":{"41":{}},"component":{}}],["techniqu",{"_index":1482,"title":{},"name":{},"text":{"38":{}},"component":{}}],["technolog",{"_index":2225,"title":{"41-11":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["tee",{"_index":2667,"title":{},"name":{},"text":{"41":{}},"component":{}}],["telemetri",{"_index":1191,"title":{"38-9":{},"38-10":{},"38-11":{},"39-121":{},"39-162":{},"41-143":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["telemetry/ev",{"_index":1291,"title":{},"name":{},"text":{"38":{}},"component":{}}],["telemetryconfig",{"_index":1877,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["tell",{"_index":903,"title":{},"name":{},"text":{"32":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["temp",{"_index":2536,"title":{},"name":{},"text":{"41":{}},"component":{}}],["temp01",{"_index":1330,"title":{},"name":{},"text":{"38":{}},"component":{}}],["temperatur",{"_index":1329,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["temperaturesensor",{"_index":1290,"title":{},"name":{},"text":{"38":{}},"component":{}}],["templat",{"_index":2901,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tempor",{"_index":2264,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{}}],["temporari",{"_index":1043,"title":{},"name":{},"text":{"36":{},"41":{},"44":{}},"component":{}}],["temporarili",{"_index":2089,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ten",{"_index":3174,"title":{},"name":{},"text":{"43":{}},"component":{}}],["tenanc",{"_index":2000,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["tenant",{"_index":1916,"title":{},"name":{},"text":{"39":{},"40":{},"41":{},"44":{}},"component":{}}],["terabyt",{"_index":2591,"title":{},"name":{},"text":{"41":{}},"component":{}}],["term",{"_index":1323,"title":{"39-24":{},"41-47":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["termin",{"_index":1939,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["terminolog",{"_index":709,"title":{},"name":{},"text":{"25":{}},"component":{}}],["terminu",{"_index":1943,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["terraform",{"_index":79,"title":{},"name":{},"text":{"1":{}},"component":{}}],["test",{"_index":543,"title":{"41-225":{},"41-239":{}},"name":{},"text":{"21":{},"30":{},"33":{},"34":{},"36":{},"39":{},"40":{},"41":{}},"component":{}}],["testdevic",{"_index":2188,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["text",{"_index":116,"title":{"3":{},"8":{},"43-6":{}},"name":{"3":{},"8":{}},"text":{"2":{},"4":{},"7":{},"9":{},"38":{},"41":{},"42":{},"43":{}},"component":{}}],["th##i",{"_index":196,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["thank",{"_index":3134,"title":{},"name":{},"text":{"43":{}},"component":{}}],["that’",{"_index":993,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["theat",{"_index":2088,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["theedg",{"_index":2946,"title":{},"name":{},"text":{"41":{}},"component":{}}],["themselv",{"_index":1787,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["then_thi",{"_index":1104,"title":{},"name":{},"text":{"36":{}},"component":{}}],["theoret",{"_index":2858,"title":{},"name":{},"text":{"41":{}},"component":{}}],["therefor",{"_index":72,"title":{},"name":{},"text":{"1":{},"41":{},"44":{}},"component":{}}],["there’",{"_index":1493,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["thermo_0001",{"_index":1557,"title":{},"name":{},"text":{"38":{}},"component":{}}],["thermostat",{"_index":1549,"title":{},"name":{},"text":{"38":{}},"component":{}}],["they’ll",{"_index":1101,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["they’r",{"_index":1508,"title":{},"name":{},"text":{"38":{}},"component":{}}],["thing",{"_index":697,"title":{},"name":{},"text":{"25":{},"30":{},"33":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["think",{"_index":704,"title":{},"name":{},"text":{"25":{},"36":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["third",{"_index":831,"title":{},"name":{},"text":{"30":{},"39":{},"41":{}},"component":{}}],["this.bind(a",{"_index":596,"title":{},"name":{},"text":{"21":{}},"component":{}}],["this.bind(list,f",{"_index":774,"title":{},"name":{},"text":{"27":{}},"component":{}}],["this.bind(lst",{"_index":790,"title":{},"name":{},"text":{"27":{}},"component":{}}],["this.bind(lst,f",{"_index":787,"title":{},"name":{},"text":{"27":{}},"component":{}}],["this.bind(m",{"_index":551,"title":{},"name":{},"text":{"21":{},"23":{},"26":{}},"component":{}}],["this.bind(m,f",{"_index":556,"title":{},"name":{},"text":{"21":{}},"component":{}}],["this.bind(x",{"_index":801,"title":{},"name":{},"text":{"28":{}},"component":{}}],["this.bind(x,f",{"_index":515,"title":{},"name":{},"text":{"21":{},"24":{},"25":{},"29":{},"32":{},"33":{},"34":{}},"component":{}}],["this.combin",{"_index":557,"title":{},"name":{},"text":{"21":{},"23":{},"30":{}},"component":{}}],["this.combine(a,b",{"_index":532,"title":{},"name":{},"text":{"21":{}},"component":{}}],["this.delay(f",{"_index":534,"title":{},"name":{},"text":{"21":{},"23":{},"30":{}},"component":{}}],["this.for(lst",{"_index":789,"title":{},"name":{},"text":{"27":{}},"component":{}}],["this.for(m,f",{"_index":555,"title":{},"name":{},"text":{"21":{}},"component":{}}],["this.return",{"_index":595,"title":{},"name":{},"text":{"21":{}},"component":{}}],["this.return(x",{"_index":524,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"32":{},"33":{},"34":{}},"component":{}}],["this.returnfrom(x",{"_index":527,"title":{},"name":{},"text":{"21":{},"24":{},"25":{},"30":{},"33":{},"34":{}},"component":{}}],["this.run(functorun",{"_index":680,"title":{},"name":{},"text":{"23":{}},"component":{}}],["this.yield(x",{"_index":530,"title":{},"name":{},"text":{"21":{},"24":{},"33":{}},"component":{}}],["this.yieldfrom(m",{"_index":554,"title":{},"name":{},"text":{"21":{}},"component":{}}],["this.yieldfrom(x",{"_index":531,"title":{},"name":{},"text":{"21":{},"24":{},"33":{}},"component":{}}],["this.zero",{"_index":529,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"33":{},"34":{}},"component":{}}],["those",{"_index":1087,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["though",{"_index":1306,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["thought",{"_index":1013,"title":{},"name":{},"text":{"36":{}},"component":{}}],["thousand",{"_index":3183,"title":{},"name":{},"text":{"44":{}},"component":{}}],["threat",{"_index":2661,"title":{},"name":{},"text":{"41":{}},"component":{}}],["three",{"_index":223,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"25":{},"29":{},"30":{},"36":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["threshold",{"_index":1569,"title":{},"name":{},"text":{"38":{}},"component":{}}],["throttl",{"_index":1751,"title":{"39-133":{},"41-155":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["through",{"_index":76,"title":{"41-221":{}},"name":{},"text":{"1":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["throughout",{"_index":1410,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["throughput",{"_index":1794,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["throughtput",{"_index":1703,"title":{"39-14":{},"41-37":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["thu",{"_index":2060,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["thumbprint",{"_index":1833,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["ti",{"_index":3230,"title":{},"name":{},"text":{"44":{}},"component":{}}],["ticket",{"_index":2296,"title":{},"name":{},"text":{"39":{},"44":{}},"component":{}}],["tier",{"_index":444,"title":{"39-11":{},"39-12":{},"39-13":{},"41-34":{},"41-35":{},"41-36":{}},"name":{},"text":{"20":{},"39":{},"41":{}},"component":{}}],["tightli",{"_index":2669,"title":{},"name":{},"text":{"41":{}},"component":{}}],["till",{"_index":3073,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["time",{"_index":24,"title":{},"name":{},"text":{"1":{},"28":{},"29":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["timelin",{"_index":1089,"title":{},"name":{},"text":{"36":{}},"component":{}}],["timespan(0,0,10",{"_index":2471,"title":{},"name":{},"text":{"40":{}},"component":{}}],["timestamp",{"_index":2391,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["timetolivesec",{"_index":2820,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tip",{"_index":124,"title":{"39-166":{}},"name":{},"text":{"2":{},"7":{}},"component":{}}],["titl",{"_index":155,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["tl",{"_index":2038,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["tm",{"_index":264,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["tn",{"_index":3135,"title":{},"name":{},"text":{"43":{}},"component":{}}],["today",{"_index":51,"title":{},"name":{},"text":{"1":{},"39":{},"41":{}},"component":{}}],["togeth",{"_index":575,"title":{},"name":{},"text":{"21":{},"26":{},"32":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["toggl",{"_index":1420,"title":{},"name":{},"text":{"38":{},"42":{},"43":{}},"component":{}}],["token",{"_index":1541,"title":{"39-22":{},"39-72":{},"39-91":{},"39-92":{},"39-93":{},"41-45":{},"41-95":{},"41-113":{},"41-114":{},"41-115":{}},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["took",{"_index":1622,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["tool",{"_index":1004,"title":{"38-21":{},"38-30":{}},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["tool/tpm",{"_index":2027,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["top",{"_index":752,"title":{},"name":{},"text":{"26":{},"29":{},"32":{},"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["top/bottom",{"_index":810,"title":{},"name":{},"text":{"29":{}},"component":{}}],["topic",{"_index":87,"title":{"39-149":{}},"name":{},"text":{"1":{},"37":{},"38":{},"39":{},"41":{}},"component":{}}],["topolog",{"_index":1280,"title":{},"name":{},"text":{"38":{}},"component":{}}],["total",{"_index":1572,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["touch",{"_index":1777,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["toward",{"_index":2552,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tpm",{"_index":1724,"title":{"39-65":{},"39-87":{},"41-88":{},"41-109":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["trace",{"_index":537,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"33":{},"34":{},"38":{}},"component":{}}],["trace.combine(expr1",{"_index":604,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace.combine(expr2",{"_index":605,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace.combine(trace.yield(x",{"_index":541,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace.delay(fun",{"_index":540,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace.return(1",{"_index":606,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace.yield(i",{"_index":542,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace.zero",{"_index":602,"title":{},"name":{},"text":{"21":{}},"component":{}}],["trace2",{"_index":538,"title":{},"name":{},"text":{"21":{}},"component":{}}],["tracebuild",{"_index":513,"title":{},"name":{},"text":{"21":{},"23":{},"24":{},"33":{},"34":{}},"component":{}}],["tracebuilder1",{"_index":594,"title":{},"name":{},"text":{"21":{}},"component":{}}],["track",{"_index":1568,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["trademark",{"_index":263,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["tradit",{"_index":1494,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["tradition",{"_index":1990,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["traffic",{"_index":1788,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["tran",{"_index":2686,"title":{},"name":{},"text":{"41":{}},"component":{}}],["transact",{"_index":2238,"title":{},"name":{},"text":{"39":{}},"component":{}}],["transfer",{"_index":2083,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["transform",{"_index":2160,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["transit",{"_index":2255,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["translat",{"_index":2529,"title":{},"name":{},"text":{"41":{}},"component":{}}],["transmit",{"_index":3229,"title":{},"name":{},"text":{"44":{}},"component":{}}],["transpar",{"_index":2524,"title":{"41-230":{}},"name":{},"text":{"41":{}},"component":{}}],["trap",{"_index":902,"title":{},"name":{},"text":{"32":{}},"component":{}}],["treat",{"_index":588,"title":{},"name":{},"text":{"21":{},"25":{},"38":{},"39":{},"41":{}},"component":{}}],["tree",{"_index":3119,"title":{"43-21":{}},"name":{},"text":{"43":{}},"component":{}}],["trelston",{"_index":14,"title":{},"name":{},"text":{"1":{}},"component":{}}],["tri",{"_index":828,"title":{},"name":{},"text":{"30":{},"36":{},"37":{},"40":{}},"component":{}}],["trigger",{"_index":1026,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["troubleshoot",{"_index":1686,"title":{"39-123":{},"41-145":{}},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["true",{"_index":598,"title":{},"name":{},"text":{"21":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["trust",{"_index":1722,"title":{"39-62":{},"39-65":{},"39-87":{},"41-85":{},"41-88":{},"41-109":{},"41-174":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["trustworthi",{"_index":2362,"title":{},"name":{},"text":{"39":{}},"component":{}}],["trustzon",{"_index":2689,"title":{},"name":{},"text":{"41":{}},"component":{}}],["tsi",{"_index":1565,"title":{},"name":{},"text":{"38":{}},"component":{}}],["tsuccess",{"_index":896,"title":{},"name":{},"text":{"32":{}},"component":{}}],["tsv",{"_index":454,"title":{},"name":{},"text":{"20":{},"41":{}},"component":{}}],["ttl",{"_index":2928,"title":{},"name":{},"text":{"41":{}},"component":{}}],["turn",{"_index":2164,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["twin",{"_index":1185,"title":{"38":{},"38-2":{},"38-3":{},"38-6":{},"38-7":{},"38-12":{},"38-17":{},"38-18":{},"38-19":{},"38-21":{},"38-22":{},"38-31":{},"38-34":{},"38-40":{},"38-42":{},"38-43":{},"38-44":{},"38-45":{},"38-46":{},"38-47":{},"38-48":{},"38-49":{},"38-56":{},"38-61":{},"38-66":{},"39-30":{},"39-31":{},"39-32":{},"39-129":{},"41-16":{},"41-53":{},"41-55":{},"41-151":{},"41-160":{},"41-236":{},"41-247":{},"41-248":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["twin.properties.desir",{"_index":2204,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.properties.desired.telemetryconfig.sendfrequ",{"_index":2198,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.properties.report",{"_index":2205,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.tag",{"_index":2203,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.tags.deploymentlocation.floor",{"_index":2199,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.tags.field",{"_index":2201,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.tags.latitud",{"_index":2202,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twin.tags.loc",{"_index":2208,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["twinchangeev",{"_index":2971,"title":{},"name":{},"text":{"41":{}},"component":{}}],["twinchangenotif",{"_index":2790,"title":{},"name":{},"text":{"41":{}},"component":{}}],["twincount",{"_index":1571,"title":{},"name":{},"text":{"38":{}},"component":{}}],["twinqueri",{"_index":2418,"title":{},"name":{},"text":{"40":{}},"component":{}}],["twin’",{"_index":1551,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["two",{"_index":253,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"21":{},"30":{},"33":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["type",{"_index":200,"title":{"25":{},"27":{},"31":{},"32":{},"39-52":{},"39-157":{},"39-158":{},"41-75":{}},"name":{},"text":{"4":{},"9":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["type(maybebuild",{"_index":815,"title":{},"name":{},"text":{"29":{}},"component":{}}],["types—integ",{"_index":1361,"title":{},"name":{},"text":{"38":{}},"component":{}}],["typic",{"_index":660,"title":{},"name":{},"text":{"22":{},"38":{},"39":{},"41":{}},"component":{}}],["typo",{"_index":1011,"title":{},"name":{},"text":{"36":{}},"component":{}}],["u",{"_index":1109,"title":{},"name":{},"text":{"36":{},"42":{},"43":{}},"component":{}}],["ubuntu",{"_index":2573,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ugli",{"_index":891,"title":{},"name":{},"text":{"32":{}},"component":{}}],["ui",{"_index":271,"title":{},"name":{"6":{},"11":{}},"text":{"6":{},"11":{}},"component":{}}],["ultim",{"_index":1272,"title":{},"name":{},"text":{"38":{}},"component":{}}],["unabl",{"_index":1671,"title":{},"name":{},"text":{"38":{}},"component":{}}],["unauthor",{"_index":2390,"title":{},"name":{},"text":{"40":{}},"component":{}}],["unawar",{"_index":2860,"title":{},"name":{},"text":{"41":{}},"component":{}}],["unchang",{"_index":700,"title":{},"name":{},"text":{"25":{}},"component":{}}],["unclear",{"_index":1049,"title":{},"name":{},"text":{"36":{}},"component":{}}],["uncov",{"_index":1009,"title":{},"name":{},"text":{"36":{}},"component":{}}],["undefin",{"_index":2173,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["under",{"_index":489,"title":{},"name":{},"text":{"20":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["undergo",{"_index":2706,"title":{},"name":{},"text":{"41":{}},"component":{}}],["underli",{"_index":2555,"title":{},"name":{},"text":{"41":{}},"component":{}}],["underscor",{"_index":1926,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["understand",{"_index":73,"title":{},"name":{},"text":{"1":{},"36":{},"39":{},"41":{}},"component":{}}],["undo",{"_index":689,"title":{"43-4":{},"43-21":{}},"name":{},"text":{"23":{},"42":{},"43":{}},"component":{}}],["undodir=~/.vim/undo",{"_index":3140,"title":{},"name":{},"text":{"43":{}},"component":{}}],["undofil",{"_index":3139,"title":{},"name":{},"text":{"43":{}},"component":{}}],["undolevels=10000",{"_index":3141,"title":{},"name":{},"text":{"43":{}},"component":{}}],["unhealthi",{"_index":2624,"title":{},"name":{},"text":{"41":{}},"component":{}}],["uni",{"_index":1782,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["unicod",{"_index":216,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["unintend",{"_index":1523,"title":{},"name":{},"text":{"38":{}},"component":{}}],["union",{"_index":872,"title":{},"name":{},"text":{"32":{}},"component":{}}],["uniqu",{"_index":1181,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["uniquess",{"_index":1922,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["unit",{"_index":585,"title":{"44-14":{}},"name":{},"text":{"21":{},"24":{},"34":{},"38":{},"39":{},"41":{},"44":{}},"component":{}}],["unless",{"_index":1818,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["unlik",{"_index":1300,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{}}],["unlist",{"_index":3024,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["unnam",{"_index":3103,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["unnamedplu",{"_index":3166,"title":{},"name":{},"text":{"43":{}},"component":{}}],["unnecessari",{"_index":663,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unord",{"_index":322,"title":{"13":{},"15":{},"13-1":{},"13-2":{},"15-1":{},"15-2":{}},"name":{"13":{},"15":{}},"text":{"13":{},"15":{}},"component":{}}],["unphish",{"_index":3235,"title":{},"name":{},"text":{"44":{}},"component":{}}],["unreach",{"_index":2161,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["unreli",{"_index":2243,"title":{},"name":{},"text":{"39":{}},"component":{}}],["unsav",{"_index":3041,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["unset",{"_index":3006,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["unstructur",{"_index":2580,"title":{},"name":{},"text":{"41":{}},"component":{}}],["unsur",{"_index":1045,"title":{},"name":{},"text":{"36":{}},"component":{}}],["until",{"_index":592,"title":{},"name":{},"text":{"21":{},"38":{},"39":{},"41":{}},"component":{}}],["untouch",{"_index":2006,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["unus",{"_index":2838,"title":{},"name":{},"text":{"41":{}},"component":{}}],["unwant",{"_index":672,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unwrap",{"_index":526,"title":{},"name":{},"text":{"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"31":{},"32":{},"33":{},"34":{}},"component":{}}],["unwrappedvalue1",{"_index":645,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unwrappedvalue2",{"_index":646,"title":{},"name":{},"text":{"22":{}},"component":{}}],["up",{"_index":479,"title":{"41-213":{},"41-223":{},"41-241":{}},"name":{},"text":{"20":{},"26":{},"29":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["up/us",{"_index":1077,"title":{},"name":{},"text":{"36":{}},"component":{}}],["updat",{"_index":1169,"title":{"38-32":{},"38-54":{},"41-171":{},"41-203":{}},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{}}],["upgrad",{"_index":1846,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["upload",{"_index":1204,"title":{"38-29":{},"38-31":{},"39-99":{},"41-121":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["uploadmodel",{"_index":1484,"title":{},"name":{},"text":{"38":{}},"component":{}}],["upon",{"_index":1159,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["uppercas",{"_index":3104,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["upstream",{"_index":1106,"title":{"38-51":{},"41-210":{},"41-212":{}},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["upstreamprotocol",{"_index":2829,"title":{},"name":{},"text":{"41":{}},"component":{}}],["uptim",{"_index":3212,"title":{},"name":{},"text":{"44":{}},"component":{}}],["upward",{"_index":2995,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["uri",{"_index":1434,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{}}],["url",{"_index":452,"title":{},"name":{},"text":{"20":{},"36":{},"39":{},"41":{},"43":{}},"component":{}}],["us",{"_index":43,"title":{"31":{},"20-3":{},"36-13":{},"39-10":{},"39-93":{},"39-104":{},"39-105":{},"41-33":{},"41-115":{},"41-126":{},"41-127":{},"41-209":{},"41-214":{},"41-216":{},"41-228":{},"41-243":{},"41-247":{},"43-22":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"16":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["us/azure/iot",{"_index":2040,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["us/training/modules/examin",{"_index":2386,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["us/training/wwl",{"_index":2372,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{}}],["usa",{"_index":2334,"title":{},"name":{},"text":{"39":{}},"component":{}}],["usag",{"_index":1709,"title":{"39-31":{},"41-54":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["usb",{"_index":3234,"title":{},"name":{},"text":{"44":{}},"component":{}}],["user",{"_index":268,"title":{"6":{},"11":{},"44-12":{},"44-13":{}},"name":{},"text":{"6":{},"11":{},"20":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["usercontext",{"_index":2615,"title":{},"name":{},"text":{"41":{}},"component":{}}],["userid",{"_index":2120,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["usernam",{"_index":2802,"title":{},"name":{},"text":{"41":{}},"component":{}}],["user’",{"_index":3217,"title":{},"name":{},"text":{"44":{}},"component":{}}],["usual",{"_index":2007,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["utc",{"_index":1620,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["utf",{"_index":2178,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["util",{"_index":1625,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["v",{"_index":394,"title":{},"name":{},"text":{"18":{},"41":{},"42":{},"43":{}},"component":{}}],["v0.7.0",{"_index":2929,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v1.25",{"_index":2799,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v3",{"_index":2716,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v_",{"_index":3157,"title":{},"name":{},"text":{"43":{}},"component":{}}],["valid",{"_index":1203,"title":{"38-29":{},"38-30":{},"39-69":{},"41-92":{}},"name":{},"text":{"38":{},"39":{},"41":{},"42":{},"43":{}},"component":{}}],["valu",{"_index":488,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["value1",{"_index":544,"title":{},"name":{},"text":{"21":{}},"component":{}}],["value2",{"_index":566,"title":{},"name":{},"text":{"21":{}},"component":{}}],["var",{"_index":393,"title":{},"name":{},"text":{"18":{},"40":{}},"component":{}}],["variabl",{"_index":442,"title":{},"name":{},"text":{"20":{},"39":{},"41":{},"42":{}},"component":{}}],["variant",{"_index":654,"title":{},"name":{},"text":{"22":{},"38":{}},"component":{}}],["varieti",{"_index":2251,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["variou",{"_index":955,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"41":{}},"component":{}}],["vend",{"_index":1882,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["vendor",{"_index":1964,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["verbos",{"_index":2187,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["veri",{"_index":692,"title":{},"name":{},"text":{"24":{},"36":{},"39":{},"43":{}},"component":{}}],["verif",{"_index":1143,"title":{"39-97":{},"39-98":{},"39-99":{},"41-119":{},"41-120":{},"41-121":{}},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["verifi",{"_index":1144,"title":{"39-95":{},"41-117":{}},"name":{},"text":{"36":{},"39":{},"41":{}},"component":{}}],["verified/warm",{"_index":478,"title":{},"name":{},"text":{"20":{}},"component":{}}],["verisign",{"_index":2697,"title":{},"name":{},"text":{"41":{}},"component":{}}],["version",{"_index":279,"title":{"16-5":{},"16-6":{},"17-3":{},"17-4":{},"36-18":{},"36-19":{},"36-20":{},"38-32":{},"38-33":{},"41-172":{},"41-216":{}},"name":{},"text":{"6":{},"11":{},"16":{},"17":{},"24":{},"26":{},"27":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["version=2020",{"_index":1665,"title":{},"name":{},"text":{"38":{}},"component":{}}],["vertic",{"_index":245,"title":{},"name":{},"text":{"5":{},"10":{},"42":{},"43":{}},"component":{}}],["vi",{"_index":2635,"title":{},"name":{},"text":{"41":{}},"component":{}}],["via",{"_index":1285,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"44":{}},"component":{}}],["video",{"_index":371,"title":{"18-1":{}},"name":{},"text":{"41":{}},"component":{}}],["view",{"_index":968,"title":{"38-65":{}},"name":{},"text":{"36":{},"38":{},"40":{},"41":{}},"component":{}}],["vim",{"_index":2972,"title":{"42":{},"43":{},"43-29":{}},"name":{},"text":{"42":{},"43":{}},"component":{}}],["vimcommand",{"_index":3120,"title":{},"name":{"43":{}},"text":{},"component":{}}],["vimgrep",{"_index":3076,"title":{},"name":{},"text":{"42":{}},"component":{}}],["vimrc",{"_index":3110,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["vimscript",{"_index":3092,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["vim’",{"_index":2982,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["virtual",{"_index":1933,"title":{},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{}}],["visibl",{"_index":1857,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["visit",{"_index":1033,"title":{},"name":{},"text":{"36":{}},"component":{}}],["visual",{"_index":201,"title":{"38-20":{},"41-23":{}},"name":{},"text":{"4":{},"9":{},"38":{},"41":{},"42":{},"43":{}},"component":{}}],["vm",{"_index":2890,"title":{},"name":{},"text":{"41":{}},"component":{}}],["vnoremap",{"_index":3059,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["void",{"_index":2445,"title":{},"name":{},"text":{"40":{}},"component":{}}],["volum",{"_index":2100,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{}}],["volumin",{"_index":2579,"title":{},"name":{},"text":{"41":{}},"component":{}}],["vs",{"_index":1136,"title":{"39-137":{}},"name":{},"text":{"36":{}},"component":{}}],["vsphere",{"_index":2892,"title":{},"name":{},"text":{"41":{}},"component":{}}],["w",{"_index":755,"title":{},"name":{},"text":{"26":{},"42":{},"43":{}},"component":{}}],["wait",{"_index":1153,"title":{},"name":{},"text":{"36":{},"38":{},"41":{}},"component":{}}],["walk",{"_index":1029,"title":{},"name":{},"text":{"36":{}},"component":{}}],["walkthrough",{"_index":68,"title":{},"name":{},"text":{"1":{}},"component":{}}],["want",{"_index":92,"title":{},"name":{},"text":{"1":{},"22":{},"23":{},"28":{},"30":{},"32":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["warm",{"_index":2185,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["warn",{"_index":126,"title":{},"name":{},"text":{"2":{},"7":{},"40":{}},"component":{}}],["washington",{"_index":2738,"title":{},"name":{},"text":{"41":{}},"component":{}}],["wast",{"_index":2477,"title":{},"name":{},"text":{"40":{}},"component":{}}],["way",{"_index":610,"title":{},"name":{},"text":{"21":{},"23":{},"25":{},"26":{},"28":{},"32":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["weak",{"_index":2495,"title":{},"name":{},"text":{"40":{}},"component":{}}],["weather",{"_index":2332,"title":{},"name":{},"text":{"39":{}},"component":{}}],["weather\\\":{\\\"temperature\\\":50",{"_index":2189,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["web",{"_index":415,"title":{"20-1":{},"20-2":{}},"name":{},"text":{"20":{},"38":{},"40":{},"41":{},"44":{}},"component":{}}],["webapp",{"_index":439,"title":{},"name":{},"text":{"20":{}},"component":{}}],["webappnam",{"_index":435,"title":{},"name":{},"text":{"20":{}},"component":{}}],["webappname=mywebapp$random",{"_index":428,"title":{},"name":{},"text":{"20":{}},"component":{}}],["webhook",{"_index":2278,"title":{},"name":{},"text":{"39":{}},"component":{}}],["websit",{"_index":19,"title":{},"name":{},"text":{"1":{},"37":{},"43":{}},"component":{}}],["websocket",{"_index":1893,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["week",{"_index":2577,"title":{},"name":{},"text":{"41":{}},"component":{}}],["weight",{"_index":1912,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["welcom",{"_index":16,"title":{"16":{}},"name":{},"text":{"1":{}},"component":{}}],["well",{"_index":228,"title":{},"name":{},"text":{"5":{},"10":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{}}],["weren’t",{"_index":1012,"title":{},"name":{},"text":{"36":{}},"component":{}}],["westu",{"_index":2745,"title":{},"name":{},"text":{"41":{}},"component":{}}],["we’v",{"_index":742,"title":{},"name":{},"text":{"26":{}},"component":{}}],["whatev",{"_index":609,"title":{},"name":{},"text":{"21":{},"36":{},"41":{},"42":{}},"component":{}}],["whenev",{"_index":1560,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["wherebi",{"_index":2762,"title":{},"name":{},"text":{"41":{}},"component":{}}],["wherev",{"_index":1068,"title":{},"name":{},"text":{"36":{}},"component":{}}],["whether",{"_index":236,"title":{},"name":{},"text":{"5":{},"10":{},"23":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{}}],["whichev",{"_index":2911,"title":{},"name":{},"text":{"41":{}},"component":{}}],["whitespac",{"_index":1112,"title":{},"name":{},"text":{"36":{}},"component":{}}],["whole",{"_index":921,"title":{},"name":{},"text":{"34":{},"38":{},"43":{}},"component":{}}],["wide",{"_index":2764,"title":{},"name":{},"text":{"41":{}},"component":{}}],["width",{"_index":3127,"title":{},"name":{},"text":{"43":{}},"component":{}}],["wifi",{"_index":1884,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["wildcard",{"_index":1488,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["wildermuth’",{"_index":370,"title":{"18-1":{}},"name":{},"text":{},"component":{}}],["win",{"_index":577,"title":{},"name":{},"text":{"21":{}},"component":{}}],["window",{"_index":306,"title":{"43-2":{},"43-9":{},"43-20":{}},"name":{},"text":{"6":{},"11":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["windows’",{"_index":3126,"title":{},"name":{},"text":{"43":{}},"component":{}}],["window’",{"_index":3039,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["wip",{"_index":4,"title":{"1-2":{},"1-3":{},"1-4":{}},"name":{},"text":{},"component":{}}],["wipe",{"_index":2710,"title":{},"name":{},"text":{"41":{}},"component":{}}],["wire",{"_index":1409,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{}}],["wise",{"_index":2978,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["wish",{"_index":2777,"title":{},"name":{},"text":{"41":{}},"component":{}}],["within",{"_index":1289,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{},"42":{},"44":{}},"component":{}}],["without",{"_index":684,"title":{"38-40":{}},"name":{},"text":{"23":{},"24":{},"34":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["wizard",{"_index":3209,"title":{},"name":{},"text":{"44":{}},"component":{}}],["wlaschin",{"_index":931,"title":{},"name":{},"text":{"35":{}},"component":{}}],["won",{"_index":614,"title":{},"name":{},"text":{"21":{}},"component":{}}],["won’t",{"_index":1509,"title":{},"name":{},"text":{"38":{},"41":{},"43":{}},"component":{}}],["word",{"_index":176,"title":{},"name":{},"text":{"3":{},"5":{},"8":{},"10":{},"22":{},"26":{},"27":{},"36":{},"42":{},"43":{}},"component":{}}],["worflow",{"_index":505,"title":{"21-4":{}},"name":{},"text":{},"component":{}}],["work",{"_index":26,"title":{"39":{},"43-2":{}},"name":{},"text":{"1":{},"18":{},"36":{},"38":{},"39":{},"41":{},"42":{}},"component":{}}],["workflow",{"_index":502,"title":{"31":{},"21-3":{},"21-5":{},"27-1":{},"38-3":{}},"name":{},"text":{"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"31":{},"32":{},"34":{},"38":{},"39":{},"41":{}},"component":{}}],["workflowrulesforwrappertyp",{"_index":865,"title":{},"name":{"31":{}},"text":{},"component":{}}],["workload",{"_index":1785,"title":{"41-169":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["workspac",{"_index":2379,"title":{},"name":{},"text":{"40":{}},"component":{}}],["world",{"_index":379,"title":{},"name":{},"text":{"18":{},"21":{},"34":{},"39":{},"41":{}},"component":{}}],["worri",{"_index":2277,"title":{},"name":{},"text":{"39":{}},"component":{}}],["worth",{"_index":1247,"title":{},"name":{},"text":{"38":{}},"component":{}}],["wouldn’t",{"_index":2857,"title":{},"name":{},"text":{"41":{}},"component":{}}],["wq",{"_index":2984,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["wrap",{"_index":589,"title":{},"name":{},"text":{"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"31":{},"33":{},"34":{},"36":{}},"component":{}}],["wrapper",{"_index":627,"title":{"25":{},"27":{},"31":{},"32":{}},"name":{},"text":{"22":{},"25":{},"32":{}},"component":{}}],["wrappertyp",{"_index":868,"title":{},"name":{"32":{}},"text":{},"component":{}}],["write",{"_index":796,"title":{},"name":{},"text":{"28":{},"32":{},"36":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{}},"component":{}}],["writeabl",{"_index":1320,"title":{},"name":{},"text":{"38":{}},"component":{}}],["written",{"_index":583,"title":{},"name":{},"text":{"21":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{}},"component":{}}],["ws",{"_index":2014,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["x",{"_index":396,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"38":{},"42":{},"43":{}},"component":{}}],["x.509",{"_index":1704,"title":{"39-23":{},"39-55":{},"39-59":{},"39-88":{},"39-105":{},"41-46":{},"41-78":{},"41-82":{},"41-110":{},"41-127":{}},"name":{},"text":{"39":{},"41":{}},"component":{}}],["x509",{"_index":2042,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["x509?pivots=program",{"_index":2081,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["x509thumbprint",{"_index":1873,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["xmap",{"_index":3054,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["xml",{"_index":227,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["xor",{"_index":400,"title":{},"name":{},"text":{"18":{}},"component":{}}],["xref",{"_index":355,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{}}],["xref:1.0@azurearchitecturepack:modul",{"_index":368,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:1.0@azurearchitecturestarterpack::index.adoc",{"_index":360,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xref:azurearchitecturepack:modul",{"_index":367,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:azurearchitecturestarterpack::index.adoc",{"_index":358,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xref:index.adoc",{"_index":356,"title":{},"name":{},"text":{"16":{}},"component":{}}],["xref:modul",{"_index":365,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:overview.adoc",{"_index":364,"title":{},"name":{},"text":{"17":{}},"component":{}}],["xref:root:index.adoc",{"_index":357,"title":{},"name":{},"text":{"16":{}},"component":{}}],["y",{"_index":539,"title":{},"name":{},"text":{"21":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"32":{},"38":{},"42":{},"43":{}},"component":{}}],["yank",{"_index":2999,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{}}],["ye",{"_index":2092,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{}}],["year",{"_index":34,"title":{},"name":{},"text":{"1":{}},"component":{}}],["yield",{"_index":500,"title":{"33":{},"21-2":{}},"name":{},"text":{"21":{},"23":{},"24":{},"33":{}},"component":{}}],["yieldmethod",{"_index":905,"title":{},"name":{"33":{}},"text":{},"component":{}}],["york",{"_index":843,"title":{},"name":{},"text":{"30":{}},"component":{}}],["you'll",{"_index":133,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["you'v",{"_index":2903,"title":{},"name":{},"text":{"41":{}},"component":{}}],["yourself",{"_index":1027,"title":{},"name":{},"text":{"36":{},"44":{}},"component":{}}],["you’d",{"_index":1419,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["you’ll",{"_index":150,"title":{},"name":{},"text":{"2":{},"7":{},"38":{}},"component":{}}],["you’r",{"_index":829,"title":{},"name":{},"text":{"30":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["you’v",{"_index":997,"title":{},"name":{},"text":{"36":{},"42":{}},"component":{}}],["z",{"_index":735,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"42":{}},"component":{}}],["zero",{"_index":511,"title":{"34":{},"21-6":{}},"name":{},"text":{"21":{},"23":{},"24":{},"33":{},"34":{},"36":{},"38":{},"39":{},"41":{}},"component":{}}],["zeromethod",{"_index":913,"title":{},"name":{"34":{}},"text":{},"component":{}}],["zigbe",{"_index":2547,"title":{},"name":{},"text":{"41":{}},"component":{}}],["zone",{"_index":3213,"title":{},"name":{},"text":{"44":{}},"component":{}}],["zoom",{"_index":313,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"Hello my name is Trelston Moraes and welcome to my personal documentation website. It is more like a personal knowledge management website. At this point of time, it is still a work in progress with 5 important sections that I have detailed below: I have 15 years of experience in developing and deploying small, medium and large enterprise applications using the dotnet platorm. The aim of this section is for me to answer the question - \"If I were to start a new project today. How will I proceed?\". I would like to answer this question not only with a sample project but also a sample end to end process - from development to deployment - that the team will follow. For this, I am going to use the Microsoft Engineering Playbook. While this playbook, is abstract and conceptual, my intention is to make it more concrete with scenarios and walkthroughs. My idea is that a new developer joining the team will execute these walkthroughs and will therefore understand the process, the architecture and the code of my project. In this section, I intend to go through all the architecture styles documented in Azure Architecture Styles and have a terraform file created for each architecture style for easy deployment to Azure. In this section, you will find all the notes I take while studying a particular topic or blog posts. I randomly study different topics at different times and I want to document what I study and also make it easily searchable. Now, I normally use Obsidian as a personal note taking application and pinboard to bookmark all the blog posts, this is just another layer in that system. This is the product section. These are the free products, I am working on. Here you will find my resume.","title":"Home","component":"homesite","version":"1.0.0","name":"index","url":"/homesite/current/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Project Starter Pack (WIP)","hash":"_project_starter_pack_wip","id":2},{"text":"Architecture Starter Pack (WIP)","hash":"_architecture_starter_pack_wip","id":3},{"text":"Study Notes (WIP)","hash":"_study_notes_wip","id":4},{"text":"Products","hash":"_products","id":5},{"text":"Resume","hash":"_resume","id":6}]},"2":{"id":2,"text":"An admonition, also known as a notice, helps draw attention to a line or block of text with a special lable or icon. Asciidoctor comes in with five built-in styles. NOTE TIP IMPORTANT CAUTION WARNING Basic admonitions CAUTION: Don't stick forks in electric sockets. TIP: After someone sticks a fork in a socket, you'll need to reset the circuit in the breaker box in the dark and scary basement. WARNING: Never go into the basement. IMPORTANT: A monster lives in the basement. NOTE: If you go into the basement, see if you can find Kenny's orange parka. Don’t stick forks in electric sockets. After someone sticks a fork in a socket, you’ll need to reset the circuit in the breaker box in the dark and scary basement. Never go into the basement. A monster lives in the basement. If you go into the basement, see if you can find Kenny’s orange parka. Example block masquerading as an admonition [IMPORTANT] .Optional title ==== Use an example block to create an admonition that contains complex content, such as (but not limited to): * Lists * Multiple paragraphs * Source code * Images ==== Optional title Use an example block to create an admonition that contains complex content, such as (but not limited to): Lists Multiple paragraphs Source code Images","title":"Admonition","component":"projectstarterpack","version":"1.0.0","name":"admonition","url":"/projectstarterpack/current/admonition.html","titles":[{"text":"Admonition Styles","hash":"_admonition_styles","id":1},{"text":"Basic Admonition","hash":"_basic_admonition","id":2},{"text":"Complex admonition","hash":"_complex_admonition","id":3}]},"3":{"id":3,"text":"You can add the following inline styles to your content: Bold Italic Monospace Highlight You can bold and italic entire phrases, a word, and characters in a word. Bold and italic inline formatting *bold phrase* & **char**acter**s** _italic phrase_ & __char__acter__s__ *_bold italic phrase_* & **__char__**acter**__s__** Example 1. Result bold phrase & characters italic phrase & characters bold italic phrase & characters You can monospace entire phrases, a word, and characters in a word. Monospace inline formatting `monospace phrase` * ``char``acter``s`` `*monospace bold phrase*` & ``**char**``acter``**s**`` `_monospace italic phrase_` & ``__char__``acter``__s__`` `_*monospace bold italic phrase*_` & ``**__char__**``acter``**__s__**`` Example 2. Result monospace phrase * characters monospace bold phrase & characters monospace italic phrase & characters *monospace bold italic phrase* & characters You can highlight entire phrases, a word, and characters in a word. Highlight inline formatting Let's #highlight this phrase# and part of th##is##. Example 3. Result Let’s highlight this phrase and part of this.","title":"Inline Text Formatting","component":"projectstarterpack","version":"1.0.0","name":"inline-text-formatting","url":"/projectstarterpack/current/inline-text-formatting.html","titles":[{"text":"Bold and italic","hash":"_bold_and_italic","id":1},{"text":"Monospace","hash":"_monospace","id":2},{"text":"Highlight","hash":"_highlight","id":3}]},"4":{"id":4,"text":"A sidebar can be titled and contain any type of content such as source code and images. Sidebar .Optional title of sidebar **** Sidebars are used to visually separate short, auxiliary bits of content that supplement the main text. **** Optional title of sidebar Sidebars are used to visually seperate short, auxiliary bits of content that supplement the main text.","title":"Sidebar","component":"projectstarterpack","version":"1.0.0","name":"sidebar","url":"/projectstarterpack/current/sidebar.html","titles":[{"text":"Sidebar block","hash":"_sidebar_block","id":1}]},"5":{"id":5,"text":"Special character and symbol replacement is built into Asciidoctor. During conversion, the characters in the table below are replaced with the appropriate character or Unicode entity. Replacement of special characters and symbols occur in all inline and block elements except for comments and passthroughs. The three special characters, , and &, are always replaced first. HTML and XML character entities as well as decimal and hexadecimal Unicode code point references are also recognized and replaced. For example, to produce the § symbol you can use §, §, or § (HTML only). When the document is processed, the replacements substitution will replace the section symbol reference ,regardless of whether it is a character entity reference or a numeric character reference, with §. Name Syntax Replacement Rendered Notes Ampersand & & & Apostrophe, curved Sam's Sam␁s Sam’s The vertical form apostrophe is replace with the curved form apostrophe Copyright (C) © © Ellipses ... … …​ Em dash -- — — Only replaced if between two word characters, between a word character and a line boundary, or flanked by spaces. Greater than > > > Left double arrow ⇒ ⇒ Right single arrow -> → → Trademark (TM) ™ ™","title":"Special Characters and Symbols","component":"projectstarterpack","version":"1.0.0","name":"special-characters","url":"/projectstarterpack/current/special-characters.html","titles":[{"text":"Special character and symbol syntax","hash":"_special_character_and_symbol_syntax","id":1}]},"6":{"id":6,"text":"Asciidoctor has three user interface (UI) macros: Button btn:[] Keyboard kbd:[] Menu menu:[] The :experimental: attribute must be set in the document header, component version descriptor (antora.yml), or globally in your Antora playbook (antora-playbook.yml) to enable UI macros. Communicate that a user should press a button with the button macro. Button UI macro Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Result Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Create keyboard shortcuts with the keyboard macro. Keyboard UI macro Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Result Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Show readers how to select a menu item with the menu macro. Menu UI macro To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting. Result To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting.","title":"User Interface Macros","component":"projectstarterpack","version":"1.0.0","name":"ui-macros","url":"/projectstarterpack/current/ui-macros.html","titles":[{"text":"Button","hash":"_button","id":1},{"text":"Keyboard","hash":"_keyboard","id":2},{"text":"Menu","hash":"_menu","id":3}]},"7":{"id":7,"text":"An admonition, also known as a notice, helps draw attention to a line or block of text with a special lable or icon. Asciidoctor comes in with five built-in styles. NOTE TIP IMPORTANT CAUTION WARNING Basic admonitions CAUTION: Don't stick forks in electric sockets. TIP: After someone sticks a fork in a socket, you'll need to reset the circuit in the breaker box in the dark and scary basement. WARNING: Never go into the basement. IMPORTANT: A monster lives in the basement. NOTE: If you go into the basement, see if you can find Kenny's orange parka. Don’t stick forks in electric sockets. After someone sticks a fork in a socket, you’ll need to reset the circuit in the breaker box in the dark and scary basement. Never go into the basement. A monster lives in the basement. If you go into the basement, see if you can find Kenny’s orange parka. Example block masquerading as an admonition [IMPORTANT] .Optional title ==== Use an example block to create an admonition that contains complex content, such as (but not limited to): * Lists * Multiple paragraphs * Source code * Images ==== Optional title Use an example block to create an admonition that contains complex content, such as (but not limited to): Lists Multiple paragraphs Source code Images","title":"Admonition","component":"projectstarterpack","version":"1.0.0","name":"admonition","url":"/projectstarterpack/current/root/admonition.html","titles":[{"text":"Admonition Styles","hash":"_admonition_styles","id":1},{"text":"Basic Admonition","hash":"_basic_admonition","id":2},{"text":"Complex admonition","hash":"_complex_admonition","id":3}]},"8":{"id":8,"text":"You can add the following inline styles to your content: Bold Italic Monospace Highlight You can bold and italic entire phrases, a word, and characters in a word. Bold and italic inline formatting *bold phrase* & **char**acter**s** _italic phrase_ & __char__acter__s__ *_bold italic phrase_* & **__char__**acter**__s__** Example 1. Result bold phrase & characters italic phrase & characters bold italic phrase & characters You can monospace entire phrases, a word, and characters in a word. Monospace inline formatting `monospace phrase` * ``char``acter``s`` `*monospace bold phrase*` & ``**char**``acter``**s**`` `_monospace italic phrase_` & ``__char__``acter``__s__`` `_*monospace bold italic phrase*_` & ``**__char__**``acter``**__s__**`` Example 2. Result monospace phrase * characters monospace bold phrase & characters monospace italic phrase & characters *monospace bold italic phrase* & characters You can highlight entire phrases, a word, and characters in a word. Highlight inline formatting Let's #highlight this phrase# and part of th##is##. Example 3. Result Let’s highlight this phrase and part of this.","title":"Inline Text Formatting","component":"projectstarterpack","version":"1.0.0","name":"inline-text-formatting","url":"/projectstarterpack/current/root/inline-text-formatting.html","titles":[{"text":"Bold and italic","hash":"_bold_and_italic","id":1},{"text":"Monospace","hash":"_monospace","id":2},{"text":"Highlight","hash":"_highlight","id":3}]},"9":{"id":9,"text":"A sidebar can be titled and contain any type of content such as source code and images. Sidebar .Optional title of sidebar **** Sidebars are used to visually separate short, auxiliary bits of content that supplement the main text. **** Optional title of sidebar Sidebars are used to visually seperate short, auxiliary bits of content that supplement the main text.","title":"Sidebar","component":"projectstarterpack","version":"1.0.0","name":"sidebar","url":"/projectstarterpack/current/root/sidebar.html","titles":[{"text":"Sidebar block","hash":"_sidebar_block","id":1}]},"10":{"id":10,"text":"Special character and symbol replacement is built into Asciidoctor. During conversion, the characters in the table below are replaced with the appropriate character or Unicode entity. Replacement of special characters and symbols occur in all inline and block elements except for comments and passthroughs. The three special characters, , and &, are always replaced first. HTML and XML character entities as well as decimal and hexadecimal Unicode code point references are also recognized and replaced. For example, to produce the § symbol you can use §, §, or § (HTML only). When the document is processed, the replacements substitution will replace the section symbol reference ,regardless of whether it is a character entity reference or a numeric character reference, with §. Name Syntax Replacement Rendered Notes Ampersand & & & Apostrophe, curved Sam's Sam␁s Sam’s The vertical form apostrophe is replace with the curved form apostrophe Copyright (C) © © Ellipses ... … …​ Em dash -- — — Only replaced if between two word characters, between a word character and a line boundary, or flanked by spaces. Greater than > > > Left double arrow ⇒ ⇒ Right single arrow -> → → Trademark (TM) ™ ™","title":"Special Characters and Symbols","component":"projectstarterpack","version":"1.0.0","name":"special-characters","url":"/projectstarterpack/current/root/special-characters.html","titles":[{"text":"Special character and symbol syntax","hash":"_special_character_and_symbol_syntax","id":1}]},"11":{"id":11,"text":"Asciidoctor has three user interface (UI) macros: Button btn:[] Keyboard kbd:[] Menu menu:[] The :experimental: attribute must be set in the document header, component version descriptor (antora.yml), or globally in your Antora playbook (antora-playbook.yml) to enable UI macros. Communicate that a user should press a button with the button macro. Button UI macro Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Result Press the btn:[Submit] button when you are finished with the survey. Select a file in the file navigator and click btn:[Open]. Create keyboard shortcuts with the keyboard macro. Keyboard UI macro Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Result Press kbd:[esc] to exit insert mode. Use the shortcut kbd:[Ctrl+T] to open a new tab in your browser. kbd:[Ctrl+Shift+N] will open a new incognito window. Show readers how to select a menu item with the menu macro. Menu UI macro To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting. Result To save the file, select menu:File[Save]. Select menu:View[Zoom > Reset] to reset the zoom level to the default setting.","title":"User Interface Macros","component":"projectstarterpack","version":"1.0.0","name":"ui-macros","url":"/projectstarterpack/current/root/ui-macros.html","titles":[{"text":"Button","hash":"_button","id":1},{"text":"Keyboard","hash":"_keyboard","id":2},{"text":"Menu","hash":"_menu","id":3}]},"12":{"id":12,"text":"Ordered list with title .Optional title of list . Step 1 . Step 2 . Step 3 Optional title of list Step 1 Step 2 Step 3 Ordered list with nested levels . Step 1 . Step 2 .. Step 2a .. Step 2b ... Sub-step 2b . Step 3 Step 1 Step 2 Step 2a Step 2b Sub-step 2b Step 3","title":"Ordered Lists","component":"projectstarterpack","version":"1.0.0","name":"ordered-list","url":"/projectstarterpack/current/lists/ordered-list.html","titles":[{"text":"Ordered list","hash":"_ordered_list","id":1},{"text":"Nested Ordered list","hash":"_nested_ordered_list","id":2}]},"13":{"id":13,"text":"Unordered list with title .Optional title of list * Item A * Item B * Item C Optional title of list Item A Item B Item C * Item A * Item B ** Item B1 ** Item B2 *** Sub-item of B2 * Item C Item A Item B Item B1 Item B2 Sub-item of B2 Item C","title":"Unordered Lists","component":"projectstarterpack","version":"1.0.0","name":"unordered-list","url":"/projectstarterpack/current/lists/unordered-list.html","titles":[{"text":"Unordered list","hash":"_unordered_list","id":1},{"text":"Nested unordered list","hash":"_nested_unordered_list","id":2}]},"14":{"id":14,"text":"Ordered list with title .Optional title of list . Step 1 . Step 2 . Step 3 Optional title of list Step 1 Step 2 Step 3 Ordered list with nested levels . Step 1 . Step 2 .. Step 2a .. Step 2b ... Sub-step 2b . Step 3 Step 1 Step 2 Step 2a Step 2b Sub-step 2b Step 3","title":"Ordered Lists","component":"projectstarterpack","version":"1.0.0","name":"ordered-list","url":"/projectstarterpack/current/root/lists/ordered-list.html","titles":[{"text":"Ordered list","hash":"_ordered_list","id":1},{"text":"Nested Ordered list","hash":"_nested_ordered_list","id":2}]},"15":{"id":15,"text":"Unordered list with title .Optional title of list * Item A * Item B * Item C Optional title of list Item A Item B Item C * Item A * Item B ** Item B1 ** Item B2 *** Sub-item of B2 * Item C Item A Item B Item B1 Item B2 Sub-item of B2 Item C","title":"Unordered Lists","component":"projectstarterpack","version":"1.0.0","name":"unordered-list","url":"/projectstarterpack/current/root/lists/unordered-list.html","titles":[{"text":"Unordered list","hash":"_unordered_list","id":1},{"text":"Nested unordered list","hash":"_nested_unordered_list","id":2}]},"16":{"id":16,"text":"This is the automatic start page for version *1-beta.1 of Azure Architecture Starter Pack. Azure Architecture Starter Pack is one of two documentation components in the Antora Demo. The other docs component, Project Starter Pack, can be accessed using the component selector menu (aka component drawer) at the bottom of the menu on the left side of the page. This page is sourced from the AsciiDoc file name index.adoc that is located at azurearchitecturestarterpack/docs/modules/ROOT/pages. This page is automatically used as the start page of Azure Architecture Starter Pack because it is stored in the ROOT module and named index.adoc. This page is used as the home page for the Antora Demo because it is assigned as the site start_page in the Demo site’s playbook file site.yml. To create a cross reference to this page from another page in the ROOT module of AzureArchitectureStarterPack, the xref syntax would be xref:index.adoc[]. To create a cross reference to this page from a page in Module One of AzureArchitectureStarterPack, the xref syntax would be xref:ROOT:index.adoc[]. To create a cross reference to the latest version of this page from a page in ProjectStarterPack, the xref syntax would be \\xref:azurearchitecturestarterpack::index.adoc. To create a cross reference to version 1.0 of this page from a page in ProjectStarterPack, the xref syntax would be xref:1.0@azurearchitecturestarterpack::index.adoc[]","title":"Welcome to Azure Architecture Starter Pack","component":"azurearchitecturestarterpack","version":"1","name":"index","url":"/azurearchitecturestarterpack/current/index.html","titles":[{"text":"Page source","hash":"_page_source","id":1},{"text":"Why is this the home page of Azure Architecture Starter Pack?","hash":"_why_is_this_the_home_page_of_azure_architecture_starter_pack","id":2},{"text":"Why is this the home page of the Antora Demo site?","hash":"_why_is_this_the_home_page_of_the_antora_demo_site","id":3},{"text":"Cross reference syntax to target this page","hash":"_cross_reference_syntax_to_target_this_page","id":4},{"text":"Always target the latest version of this page","hash":"_always_target_the_latest_version_of_this_page","id":5},{"text":"Target a specific version of this page","hash":"_target_a_specific_version_of_this_page","id":6}]},"17":{"id":17,"text":"This is version 1-beta.1 of Module One in Component B. This page is sourced from azurearchitecturestarterpack/docs/modules/module-one/pages/overview.adoc. To create a cross reference to this page from another page in Module One, the xref system would be xref:overview.adoc[]. To create a cross reference to this page from a page in the ROOT module of Azure Architecture Pack, the xref system would be xref:module-one:overview.adoc[]. To create a cross reference to the latest version of this page from a page in Project Starter Pack, the xref syntax would be xref:azurearchitecturepack:module-one:overview.adoc[]. To create a cross reference to version 1.0 of this page from a page in Project Starter Pack, the xref syntax would be xref:1.0@azurearchitecturepack:module-one:overview.adoc[]","title":"Module One Overview","component":"azurearchitecturestarterpack","version":"1","name":"overview","url":"/azurearchitecturestarterpack/current/module-one/overview.html","titles":[{"text":"Page source","hash":"_page_source","id":1},{"text":"Cross reference syntax to target this page","hash":"_cross_reference_syntax_to_target_this_page","id":2},{"text":"Always target the latest version of this page","hash":"_always_target_the_latest_version_of_this_page","id":3},{"text":"Target a specific version of this page","hash":"_target_a_specific_version_of_this_page","id":4}]},"18":{"id":18,"text":"Coding Shorts - Bitwise operators Github Projects Console.WriteLine(\"Hello, World!\"); // a method that converts a number to binary Action b = n => Console.WriteLine(Convert.ToString(n, 2).PadLeft(8, '0')); b(1); //output - 00000001 b(1 + 1); //output - 00000010 var v = 0b1010; var x = 0b0110; b(v & x); // 'and' output - 00000010 b(v | x); // 'or' output - 00001110 b(v ^ x); // 'xor' output - 00001100 var hasAC = Features.AirConditioning; var hasBrakes = Features.Brakes; if (hasAC == Features.AirConditioning && hasBrakes == Features.Brakes) { // Do some work } var features = Features.AirConditioning | Features.Brakes; Console.WriteLine(features); b((int)features); if ((features & Features.Brakes) == Features.Brakes) { Console.WriteLine(\"Has Brakes\"); } The ~ operator produces a bitwise complement of its operand by reversing each bit","title":"Bitwise Operators","component":"studynotes","version":"","name":"bitwiseoperators","url":"/studynotes/CSharp/bitwiseoperators.html","titles":[{"text":"Code from Shawn Wildermuth’s video","hash":"_code_from_shawn_wildermuths_video","id":1},{"text":"Code from Microsoft Learn","hash":"_code_from_microsoft_learn","id":2},{"text":"Bitwise Complement Operator (~)","hash":"_bitwise_complement_operator","id":3}]},"19":{"id":19,"text":"This is my personal study notes for CSharp.","title":"CSharp Notes","component":"studynotes","version":"","name":"overview","url":"/studynotes/CSharp/overview.html","titles":[]},"20":{"id":20,"text":"This is my study notes for the book DevOps for ASP.NET Core Developers webappname=mywebapp$RANDOM (1) az group create --location centralus --name AzureTutorial (2) az appservice plan create --name $webappname --resource-group AzureTutorial --sku S1 (3) az webapp create --name $webappname --resource-group AzureTutorial --plan $webappname (4) 1 Declare a variable to store your web app’s name. 2 Create a resource group. 3 Create an App Service plan in the S1 tier. 4 Create the web app resource az webapp config appsettings set --name $webappname --resource-group AzureTutorial --settings DEPLOYMENT_BRANCH=main (1) az webapp deployment user set --user-name REPLACE_WITH_USER_NAME --password REPLACE_WITH_PASSWORD (2) echo Git deployment URL: $(az webapp deployment source config-local-git --name $webappname --resource-group AzureTutorial --query url --output tsv) (3) echo Web app URL: http://$webappname.azurewebsites.net (4) git remote add azure-prod GIT_DEPLOYMENT_URL (5) git push azure-prod main (6) 1 Set the deployment branch to main in the appsettings configuration. 2 Set the deployment credentials. These deployment credentials apply to all the web apps in your subscription. 3 Configure the web app to accept deployments from local Git and display the Git deployment URL. 4 Display the web app URL. Browse to this URL to see the blank web app. 5 Add the remote URL to the local repository. 6 Push the local default branch (main) to the azure-prod remote’s deployment branch (main). az webapp deployment slot create --name $webappname --resource-group AzureTutorial --slot staging (1) az webapp config appsettings set --name $webappname --resource-group AzureTutorial --slot staging --settings DEPLOYMENT_BRANCH=main (2) echo Git deployment URL for staging: $(az webapp deployment source config-local-git --name $webappname --resource-group AzureTutorial --slot staging --query url --output tsv) (3) echo Staging web app URL: http://$webappname-staging.azurewebsites.net (4) git remote add azure-staging (5) git push azure-staging main (6) az webapp deployment slot swap --name $webappname --resource-group AzureTutorial --slot staging (7) 1 Create a deployment slot with the name staging. 2 Set the deployment branch to main in the appsettings configuration. 3 Configure the staging slot to use deployment from local Git and get the staging deployment URL. 4 Display the staging slot’s URL. Browse to the URL to see the empty staging slot. 5 Add the remote URL for staging to the local Git repository. 6 Push the local default branch (main) to the azure-staging remote’s deployment branch (main). 7 swap the verified/warmed-up staging slot into production. Create a new Create an Azure DevOps organization. https://go.microsoft.com/fwlink/?LinkId=307137 Create a team project in Azure DevOps organization Configure a self-hosted agent if necessary. Organization Settings and then Pipelines > Parallel jobs. If you see value 0 under Microsoft-hosted that means you need a Self-hosted agent to run your pipeline Grant Azure DevOps access to the GitHub repository Create the build definition Create the release pipeline Commit changes to GitHub and automatically deploy to Azure","title":"Devops for Asp.Net Core developers","component":"studynotes","version":"","name":"devopsfordevelopers","url":"/studynotes/Devops/devopsfordevelopers.html","titles":[{"text":"Create a web service app","hash":"_create_a_web_service_app","id":1},{"text":"Deploy from local git repository to azure web app","hash":"_deploy_from_local_git_repository_to_azure_web_app","id":2},{"text":"Deploy using deployment slots","hash":"_deploy_using_deployment_slots","id":3},{"text":"Azure Devops Pipeline","hash":"_azure_devops_pipeline","id":4}]},"21":{"id":21,"text":"type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None member this.Yield(x) = printfn \"Yield an unwrapped %A as an option\" x Some x member this.YieldFrom(x) = printfn \"Yield an option (%A) directly\" x x member this.Combine(a,b) = match a,b with | Some a', Some b' -> printfn \"combining %A and %A\" a' b' Some (a' + b') | Some a', None -> printfn \"combining %A with None\" a' Some a' | None, Some b' -> printfn \"combining None with %A\" b' Some b' | None, None -> printfn \"combining None with None\" None member this.Delay(f) = printfn \"Delay\" f() //make a new instance let trace = new TraceBuilder() let trace2 x y = trace.Delay(fun () -> trace.Combine(trace.Yield(x), trace.Delay(fun () -> trace.Yield(y)))) //test trace { yield 1 yield 2 } |> printfn \"Result for yield then yield: %A\" let value1 = trace2 1 2 The Combine method only has two parameters. So what happens when you combine more than two values? A subtle but important point is that they are combined “backwards”, starting from the last value. module ListBuilder = type ListBuilder() = member this.Bind(m, f) = m |> List.collect f member this.Zero() = printfn \"Zero\" [] member this.Yield(x) = printfn \"Yield an unwrapped %A as a list\" x [x] member this.YieldFrom(m) = printfn \"Yield a list (%A) directly\" m m member this.For(m,f) = printfn \"For %A\" m this.Bind(m,f) member this.Combine (a,b) = printfn \"combining %A and %A\" a b List.concat [a;b] member this.Delay(f) = printfn \"Delay\" f() // make an instance of the workflow let listbuilder = new ListBuilder() listbuilder { yield 1 yield 2 yield 3 yield 4 } |> printfn \"Result for yield x 4: %A\" What F# converts to: let listBuilder4 x y a b = listbuilder.Delay(fun () -> listbuilder.Combine(listbuilder.Yield(x), listbuilder.Delay(fun () -> listbuilder.Combine(listbuilder.Yield(y), listbuilder.Delay(fun () -> listbuilder.Combine(listbuilder.Yield(a), listbuilder.Delay(fun () -> listbuilder.Yield(b)))))))) let value2 = listBuilder4 1 2 3 4 If the workflow has some concept of \"success\" or \"failure\", then a standard approach is: - If the first expression \"succeeds\" then use that value. - Otherwise use the value of the second expression. This approach is useful for chaining together a series of \"or else\" expressions where the first success \"wins\" and becomes the overall result. If the workflow has the concept of sequential steps, then the overall result is just the value of the last step, and all the previous steps are evaluated only for their side effects. In normal F#, this would be written: do some expression do some other expression final expression In normal F#, each expression (other than the last) evaluates to the unit value. The equivalent approach for computation expression is to treat each expression (other than the last) as a wrapped unit value, and \"pass it into\" the next expression, and so on, until you reach the last expression. module TraceBuilder1 = type TraceBuilder1 () = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = Some x member this.Zero() = printfn \"Zero\" this.Return () //unit not None member this.Combine(a,b) = printfn \"Combining %A with %A\" a b this.Bind(a, fun () -> b) member this.Delay(f) = printfn \"Delay\" f() // make a new instance let trace = new TraceBuilder1() trace { if true then printfn \"hello......\" if false then printfn \".......world\" return 1 } |> printfn \"Result for sequential combine: %A\" F# converts the above code to: //What F# converts to let expr1 = fun () -> if true then printfn \"hello......\"; trace.Zero(); let expr2 = fun () -> if false then printfn \"......world\"; trace.Zero(); let value1 = trace.Delay(fun () -> trace.Combine(expr1(), trace.Delay(fun () -> trace.Combine(expr2(), trace.Delay(fun () -> trace.Return(1)))))) In this case, Combine should merge the two data structures in whatever way is appropriate. And the Zero method should create an empty data structure, if needed. We have looked at different implementations for Combine for option types. - The first one used options as \"success/failure\" indicators, when the first success \"won\". In this case Zero was defined as None - The second one was sequential. In this case Zero was defined as Some () There is a useful rule that connects Zero and Combine Rule:- Combine(a,Zero) should be the same as Combine(Zero,a) which should be the same as just a","title":"Combine method","component":"studynotes","version":"","name":"CombineMethod","url":"/studynotes/FSharp/CombineMethod.html","titles":[{"text":"Why do we need combine method","hash":"_why_do_we_need_combine_method","id":1},{"text":"The problem with 2 yields","hash":"_the_problem_with_2_yields","id":2},{"text":"Implementing Combine for workflows with \"success\" or \"failure\"","hash":"_implementing_combine_for_workflows_with_success_or_failure","id":3},{"text":"Implementing Combine for worflows with sequential steps","hash":"_implementing_combine_for_worflows_with_sequential_steps","id":4},{"text":"Implementing combine for workflows that build data structures","hash":"_implementing_combine_for_workflows_that_build_data_structures","id":5},{"text":"Guidelines for mixing \"Combine\" and \"Zero\"","hash":"_guidelines_for_mixing_combine_and_zero","id":6}]},"22":{"id":22,"text":"One of the major uses of computation expressions is to implicitly unwrap and rewrap values that are stored in some sort of wrapper type. Every computation expression must have an associated wrapper type. This wrapper type is used in both Bind and Return, which leads to a key benefit: the output of a Return can be fed to the input of a Bind In other words, because a workflow returns a wrapper type, and because let! consumes a wrapper type, you can put a “child” workflow on the right hand side of a let! expression. let subworkflow0 = myworkflow { return 42 } let subworkflow1 = myworkflow { return 43 } let aWrappedValue = myworkflow { let! unwrappedValue1 = subworkflow1 let! unwrappedValue2 = subworkflow2 return unwrappedValue1 + unwrappedValue2 } let aWrappedValue = myworkflow { let! unwrappedValue1 = myworkflow { let! x = myworkflow { return 1 } return x } let! unwrappedValue2 = myworkflow { let! y = myworkflow { return 2 } return y } return unwrappedValue1 + unwrappedValue2 } Sometimes we have a function that already returns a wrapped value, and we want to return it directly. return is no good for this, because it requires an unwrapped type as input. The solution is a variant on return called return!, which takes a wrapped type as input and returns it. The corresponding method in the “builder” class is called ReturnFrom. Typically the implementation just returns the wrapped type “as is”","title":"Composition of computation expression","component":"studynotes","version":"","name":"ComputationExpressionComposition","url":"/studynotes/FSharp/ComputationExpressionComposition.html","titles":[]},"23":{"id":23,"text":"Avoiding unnecessary evaluations. We want to use the “return” keyword to return early and stop any more processing being done. return and yield do not generate an early return from a computation expression. The entire computation expression, all the way to the last curly brace, is always evaluated and results in a single value. This is a problem, because you might get unwanted side effects and your code is doing something unnecessary, which might cause performance problems. Use the delay method to do this. Any result from Return or Yield is immediately wrapped in a “delay” function like this, and then you can choose whether to run it or not. module TraceBuilder = type TraceBuilder() = member this.Bind(m, f) = match m with | None -> printfn \"Binding with None. Exiting.\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f m member this.Return(x) = printfn \"Return an unwrapped %A as an option\" x Some x member this.Zero() = printfn \"Zero\" None member this.Combine (a,b) = printfn \"Returning early with %A. Ignoring second part: %A\" a b a member this.Run(funcToRun) = let runResult = funcToRun() runResult // return the result of running the delayed function member this.Delay(f) = printfn \"Delay\" f //make a new instance let trace = new TraceBuilder() (* Assign the output of the computation expression to a function value, say f, and then evaluate it. *) let f = trace { printfn \"Part 1: about to return 1\" return 1 printfn \"Part 2: after return has happened\" } f |> printfn \"Result for Part1 without Part2: %A\" The Run method exists for exactly this reason. It is called as the final step in the process of evaluating a computation expression, and can be used to undo the delay.","title":"Delay and Run Method","component":"studynotes","version":"","name":"DelayRunMethod","url":"/studynotes/FSharp/DelayRunMethod.html","titles":[]},"24":{"id":24,"text":"Operations with and without '!' Operations without a “!” always have unwrapped types on the right hand side, while the ones with a “!” always have wrapped types. In normal F#, do is just like let, except that the expression returns a unit value. Inside a computation expression, do! is very similar. Just as let! passes a wrapped result to the Bind method, so does do!, except that in the case of do! the “result” is the unit value, and so a wrapped version of unit is passed to the bind method. type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None member this.Yield(x) = printfn \"Yield an unwrapped %A as an option\" x Some x member this.YieldFrom(x) = printfn \"Yield an option (%A) directly\" x x // make an instance of the workflow let trace = new TraceBuilder() trace { do! Some (printfn \"..expression that returns unit\") do! Some (printfn \"...another expression that returns unit\") let! x = Some (1) return x }","title":"Do Method","component":"studynotes","version":"","name":"DoMethod","url":"/studynotes/FSharp/DoMethod.html","titles":[]},"25":{"id":25,"text":"Every computation expression must have an associated wrapper type. But what about the logging example in the previous post? There was no wrapper type there. There was a let! that did things behind the scenes, but the input type was the same as the output type. The type was left unchanged. The short answer to this is that you can treat any type as its own “wrapper”. If you have a type such as List, it is in fact not a “real” type at all. List is a real type, and List is a real type. But List on its own is incomplete. One way to think about List is that it is a function, not a type. And like any function it takes a parameter, in this case a “type parameter”. Which is why the concept that .NET developers call “generics” is known as “parametric polymorphism” in computer science terminology. Once we grasp the concept of functions that generate one type from another type (called “type constructors”), we can see that what we really mean by a “wrapper type” is just a type constructor. But if a “wrapper type” is just a function that maps one type to another type, surely a function that maps a type to the same type fits into this category? And indeed it does. The “identity” function for types fits our definition and can be used as a wrapper type for computation expressions. We can define the “identity workflow” as the simplest possible implementation of a workflow builder. type IdentityBuilder() = member this.Bind(x,f) = f x member this.Return(x) = x member this.ReturnFrom(x) = x let identity = new IdentityBuilder() let result = identity { let! x = 1 let! y = 2 return x + y } With this in place, you can see that the logging example discussed earlier is just the identity workflow with some logging added in. A major use of computation expressions is to unwrap and rewrap values that are stored in some sort of wrapper type. You can easily compose computation expressions, because the output of a Return can be fed to the input of a Bind. Every computation expression must have an associated wrapper type. Any type with a generic parameter can be used as a wrapper type, even lists. When creating workflows, you should ensure that your implementation conforms to the three sensible rules about wrapping and unwrapping and composition.","title":"Identity Wrapper Types","component":"studynotes","version":"","name":"IdentityWrapperTypes","url":"/studynotes/FSharp/IdentityWrapperTypes.html","titles":[]},"26":{"id":26,"text":"The let! expression is syntactic sugar for a Bind method. In other words, if we chain a number of let! expressions together like this: let! x = 1 let! y = 2 let! z = x + y Bind(1, fun x → Bind(2, fun y → Bind(x + y, fun z → etc Computation expressions are just a way to create nice syntax for something that we could do ourselves. We’ve used four different approaches for the “safe divide” example so far. Let’s put them together side by side and compare them once more. First the original version, using an explicit workflow: module DivideByExplicit = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) let divideByWorkflow x y w z = let a = x |> divideBy y match a with | None -> None // give up | Some a' -> // keep going let b = a' |> divideBy w match b with | None -> None // give up | Some b' -> // keep going let c = b' |> divideBy z match c with | None -> None // give up | Some c' -> // keep going //return Some c' Next, using our own version of “bind” (a.k.a. “pipeInto”) module DivideByWithBindFunction = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) let bind (m,f) = Option.bind f m let return' x = Some x let divideByWorkflow x y w z = bind (x |> divideBy y, fun a -> bind (a |> divideBy w, fun b -> bind (b |> divideBy z, fun c -> return' c ))) Next, using a computation expression: module DivideByWithCompExpr = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) type MaybeBuilder() = member this.Bind(m, f) = Option.bind f m member this.Return(x) = Some x let maybe = new MaybeBuilder() let divideByWorkflow x y w z = maybe { let! a = x |> divideBy y let! b = a |> divideBy w let! c = b |> divideBy z return c } And finally, using bind as an infix operation: module DivideByWithBindOperator = let divideBy bottom top = if bottom = 0 then None else Some(top/bottom) let (>>=) m f = Option.bind f m let divideByWorkflow x y w z = x |> divideBy y >>= divideBy w >>= divideBy z","title":"Introducing Bind","component":"studynotes","version":"","name":"IntroducingBind","url":"/studynotes/FSharp/IntroducingBind.html","titles":[]},"27":{"id":27,"text":"The bind function “unwraps” the type, and applies the continuation function to the unwrapped value. The continuation function passed into bind is required to have a certain signature. It takes an unwrapped type, but it produces a wrapped type. In other words, the continuation function must always create a new list as its result. We can now create a “list workflow”. Bind applies the continuation function to each element of the passed in list, and then flattens the resulting list of lists into a one-level list. List.collect is a library function that does exactly that. Return converts from unwrapped to wrapped. In this case, that just means wrapping a single element in a list. module Sample1 = type ListWorkflowBuilder() = member this.Bind(list,f) = list |> List.collect f member this.Return(x) = [x] let listWorkflow = new ListWorkflowBuilder() let added = listWorkflow { let! i = [1;2;3] let! j = [10;11;12] return i + j } printfn \"added=%A\" added What F# does behind the scenes is: let addedM = listWorkflow.Bind([1;2;3], fun x -> listWorkflow.Bind([10;11;12], fun y -> listWorkflow.Return (x + y))) printfn \"added=%A\" addedM // let version let! i = [1;2;3] in [some expression] // for..in..do version for i in [1;2;3] do [some expression] We need to add a For method to our builder class. It generally has exactly the same implementation as the normal Bind method, but is required to accept the sequence type. module Sample2 = type ListWorkflowBuilder() = member this.Bind(lst,f) = lst |> List.collect f member this.Return(x) = [x] member this.For(lst, f) = this.Bind(lst, f) let listWorkflow = new ListWorkflowBuilder() let multiplied = listWorkflow { for i in [1;2;3] do for j in [10;11;12] do return i * j } printfn \"multiplied: %A\" multiplied //For is the same as bind but it needs to accept the sequence type.","title":"List Wrapper Types","component":"studynotes","version":"","name":"ListWrapperTypes","url":"/studynotes/FSharp/ListWrapperTypes.html","titles":[{"text":"List Workflow","hash":"_list_workflow","id":1},{"text":"Syntactic sugar for \"for\"","hash":"_syntactic_sugar_for_for","id":2}]},"28":{"id":28,"text":"Let’s say we have some code, and we want to log each step. let loggedWorkflow = let x = 42 log x let y = 43 log y let z = x + y log z //return z But it is annoying to have to explicitly write all the log statements each time. Is there a way to hide them? A computation expression can do that. type LoggingBuilder() = let log p = printfn \"expression is %A\" p member this.Bind(x, f) = log x f x member this.Return(x) = x Next we create an instance of the type, logger in this case. let logger = new LoggingBuilder() So with this logger value, we can rewrite the original logging example like this: let loggedWorkflow1 = logger { let! x = 42 let! y = 43 let! z = x + y return z } F# internally converts this to the following: let value = logger.Bind(42, fun x -> logger.Bind(43, fun y -> logger.Bind(x + y, fun z -> z) ))","title":"Log Builder","component":"studynotes","version":"","name":"LogBuilder","url":"/studynotes/FSharp/LogBuilder.html","titles":[]},"29":{"id":29,"text":"MaybeBuilder is useful if you have a chain of if/else statements. let divideBy bottom top = if bottom = 0 then None else Some (top/bottom) Here is a workflow that attempts to divide a starting number three times. let divideByWorkflow init x y z = let a = init |> divideBy x match a with | None -> None //give up | Some a' -> //keep going let b = a' |> divideBy y match b with | None -> None //give up | Some b' -> //keep going let c = b' |> divideBy z match c with | None -> None | Some c' -> Some c' let good = divideByWorkflow 12 3 2 1 let bad = divideByWorkflow 12 3 0 1 Once more we define a new type(MaybeBuilder) and make an instance of the type (maybe) type MaybeBuilder() = member this.Bind(x,f) = match x with | None -> None | Some a -> f a member this.Return(x) = Some x let maybe = new MaybeBuilder() let divideByWorkflowM init x y z = maybe { let! a = init |> divideBy x let! b = a |> divideBy y let! c = b |> divideBy z return c } let good1 = divideByWorkflowM 12 3 2 1 F# converts the above computation expression into something like this: let good1 = divideByWorkflowM 12 3 2 1 let good2 = maybe.Bind(divideBy 3 12, fun a -> maybe.Bind(divideBy 2 a, fun b -> maybe.Bind(divideBy 1 b, fun c -> Some c ))) let bad1 = divideByWorkflowM 12 3 0 1 let bad2 = maybe.Bind(divideBy 3 12, fun a -> maybe.Bind(divideBy 0 a, fun b -> maybe.Bind(divideBy 1 b, fun c -> Some c )))","title":"Maybe Builder","component":"studynotes","version":"","name":"MaybeBuilder","url":"/studynotes/FSharp/MaybeBuilder.html","titles":[]},"30":{"id":30,"text":"OrElseBuilder is useful if you have chains of \"or/else\" statements. Sometimes the flow of control depends on a series of \"or else\" tests. Try one thing, and if that succeeds, you’re done. Otherwise try another thing, and if that fails, try a third thing, and so on. Say that we have three dictionaries and we want to find the value corresponding to a key. Each lookup might succeed or fail, so we need to chain the lookups in a series. let map1 = [(\"1\", \"One\"); (\"2\", \"Two\")] |> Map.ofList let map2 = [(\"A\", \"Alice\"); (\"B\", \"Bob\")] |> Map.ofList let map3 = [(\"CA\", \"California\"); (\"NY\", \"New York\")] |> Map.ofList let multiLookup key = match map1.TryFind key with | Some result1 -> Some result1 //success | None -> //failure match map2.TryFind key with | Some result2 -> Some result2 //success | None -> //failure match map3.TryFind key with | Some result3 -> Some result3 //success | None -> None //failure Because everything is an expression in F# we can’t do an early return, we have to cascade all the tests in a single expression. multiLookup \"A\" |> printfn \"Result for A is %A\" multiLookup \"CA\" |> printfn \"Result for CA is %A\" multiLookup \"X\" |> printfn \"Result for X is %A\" Here is an \"or else\" builder that allows us to simplify these kinds of lookups. type OrElseBuilder() = member this.ReturnFrom(x) = x member this.Combine (a,b) = match a with | Some _ -> a // a succeeds -- use it | None -> b // a fails -- use b instead member this.Delay(f) = f() let orElse = new OrElseBuilder() let multiLookupM key = orElse { return! map1.TryFind key return! map2.TryFind key return! map3.TryFind key } multiLookupM \"A\" |> printfn \"Result for A is %A\" multiLookupM \"CA\" |> printfn \"Result for CA is %A\" multiLookupM \"X\" |> printfn \"Result for X is %A\" Internally, F# converts the above expression into something like the following: let multiLookupExpanded key = orElse.Delay(fun () -> orElse.Combine(orElse.ReturnFrom(map1.TryFind key), orElse.Delay(fun () -> orElse.Combine(orElse.ReturnFrom(map2.TryFind key), orElse.Delay(fun () -> orElse.ReturnFrom(map3.TryFind key))))))","title":"OrElse Builder","component":"studynotes","version":"","name":"OrElseBuilder","url":"/studynotes/FSharp/OrElseBuilder.html","titles":[]},"31":{"id":31,"text":"Rule 1: If you start with an unwrapped value, and then you wrap it (using return ),then unwrap it (using bind ), you should always get back the original unwrapped value. Rule 2: If you start with a wrapped value, and then you unwrap it (using bind ), then wrap it (using return ), you should always get back the original wrapped value. Rule 3: If you create a child workflow, it must produce the same result as if you had \"inlined\" the logic in the main workflow.","title":"Rules for workflows that use wrapper types","component":"studynotes","version":"","name":"WorkflowRulesForWrapperTypes","url":"/studynotes/FSharp/WorkflowRulesForWrapperTypes.html","titles":[]},"32":{"id":32,"text":"One of the major uses of computation expressions is to implicitly unwrap and rewrap values that are stored in some sort of wrapper type. Say we are accessing a database, and we want to capture the result in a Success/Error union type: type DbResult = | Success of 'a | Error of string We then use this type in our database access methods. let getCustomerId name = if name = \"\" then Error \"getCustomerId failed\" else Success \"Cust42\" let getLastOrderForCustomer custId = if custId = \"\" then Error \"getLastOrderForCustomer failed\" else Success \"Order123\" let getLastProductForOrder orderId = if orderId = \"\" then Error \"getLastProductForOrder failed\" else Success \"Product456\" Now lets say we want to chain these calls together. Here is the most explicit way of doing it. As you can see, we have to have pattern matching at each step. let product = let r1 = getCustomerId \"Alice\" match r1 with | Error _ -> r1 | Success custId -> let r2 = getLastOrderForCustomer custId match r2 with | Error _ -> r2 | Success orderId -> let r3 = getLastProductForOrder orderId match r3 with | Error _ -> r3 | Success productId -> printfn \"Product is %s\" productId r3 Really ugly code. And the top-level flow has been submerged in the error handling logic. Computation expressions to the rescue! We can write one that handles the branching of Success/Error behind the scenes: type DbResultBuilder() = member this.Bind(x,f) = match x with | Error _ -> x | Success y -> printfn \"\\tSuccessful: %s\" y f y member this.Return(x) = Success x let dbResult = new DbResultBuilder(); And with this workflow, we can focus on the big picture and write much cleaner code: let product' = dbResult { let! custId = getCustomerId \"Alice\" let! orderId = getLastOrderForCustomer custId let! productId = getLastProductForOrder orderId printfn \"Product is %s\" productId return productId } printfn \"%A\" product And if there are errors, the workflow traps them nicely and tells us where the error was: let product'' = dbResult { let! custId = getCustomerId \"Alice\" let! orderId = getLastOrderForCustomer \"\" //error let! productId = getLastProductForOrder orderId printfn \"Product is %s\" productId return productId } printfn \"%A\" product Every computation expression must have an associated wrapper type. And the wrapper type is often designed to go hand-in-hand with the workflow that we want to manage.","title":"Wrapper Types","component":"studynotes","version":"","name":"WrapperTypes","url":"/studynotes/FSharp/WrapperTypes.html","titles":[]},"33":{"id":33,"text":"The MSDN documentation says that it has the signature 'T → M, which is exactly the same as the signature for the Return method. It must take an unwrapped value and wrap it. type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None member this.Yield(x) = printfn \"Yield an unwrapped %A as an option\" x Some x member this.YieldFrom(x) = printfn \"Yield an option (%A) directly\" x x //make a new instance let trace = new TraceBuilder() //test trace { yield! Some 1 } |> printfn \"Result for yield: %A\" If return and yield are basically the same thing, why are there two different keywords? The answer is mainly so that you can enforce appropriate syntax by implementing one but not the other. For example, the seq expression does allow yield but doesn’t allow return, while the async does allow return, but does not allow yield.","title":"Yield Method","component":"studynotes","version":"","name":"YieldMethod","url":"/studynotes/FSharp/YieldMethod.html","titles":[]},"34":{"id":34,"text":"What value should you use for Zero? Does the workflow have a concept of “success” or “failure”? If so, use the “failure” value for Zero. Does the workflow have a concept of “sequential processing”? That is, in your workflow you do one step and then another, with some processing behind the scenes. In normal F# code, an expression that did not return anything explicitly would evaluate to unit. So to parallel this case, your Zero should be the wrapped version of unit. Is the workflow primarily concerned with manipulating data structures? If so, Zero should be the “empty” data structure. module Sample3_IntroducingZero = type TraceBuilder() = member this.Bind(x,f) = match x with | None -> printfn \"Binding with None. Exiting\" | Some a -> printfn \"Binding with Some(%A). Continuing\" a Option.bind f x member this.Return(x) = printfn \"Returning an unwrapped %A as an option\" x Some x member this.ReturnFrom(x) = printfn \"Returning an option (%A) directly\" x x member this.Zero() = printfn \"Zero\" None // make an instance of the workflow let trace = new TraceBuilder() //test trace { printfn \"hello world\" } |> printfn \"Result for simple expression: %A\" trace { if false then return 1 } |> printfn \"Result for if without else: %A\" The test code makes it clear that Zero is being called behind the scenes. And None is the return value for the expression as whole. You not required to have a Zero, but only if it makes sense in the context of the workflow. For example seq does not allow zero, but async does: //let s = seq {printfn \"zero\" } // Error let a = async {printfn \"zero\" } // OK","title":"Zero Method","component":"studynotes","version":"","name":"ZeroMethod","url":"/studynotes/FSharp/ZeroMethod.html","titles":[]},"35":{"id":35,"text":"This is my personal study notes for FSharp. People from whom I have shamelessly and blatantly copied. Scott Wlaschin Kit Eason Mark Seemann","title":"FSharp Notes","component":"studynotes","version":"","name":"overview","url":"/studynotes/FSharp/overview.html","titles":[]},"36":{"id":36,"text":"This is my personal short notes from https://think-like-a-git.net/ and various other sources. If I learn something new in git, I intend to put it here. A git repository is one giant graph. At the surface level, a git commit consists of 2 things:- a pointer to the state of your code at some moment in time. zero or more pointers to \"parent\" commits A Git commit is a node in a graph, and each one points to the node that came before them. Figure 1. Source: think-like-a-git.net, Git commits (simplified view) To list all commits in your repository: git log --oneline --abbrev-commit --all Figure 2. Source: think-like-a-git.net To list all commits in your repository but with a graph view: git log --oneline --abbrev-commit --all --graph Figure 3. Source: think-like-a-git.net If you want to see branch and tag labels, add --decorate: git log --oneline --abbrev-commit --all --graph --decorate --color You can setup a git alias to do the same thing: git config --global alias.graph \"log --graph --oneline –decorate=short\" GitX shows the logs as follows:- Figure 4. Source: think-like-a-git.net The very colourful labels are called references. References are pointers to commits. There are three types of references: local branch, remote branch, and tag. A local branch reference is a file that contains a 40-byte identifier of the commit that the reference points to. This file is created at the project’s .git/refs/head directory. Creating a branch in Git just means writing 40 bytes to disk, which is why git branch foo is so fast. Local branch references are specific to a single local repository. Commands that affect local branch references include commit, merge, rebase, and reset. Remote branch references are also specific to a single repository, but one that’s previously been defined as a remote. Commands that affect remote branch references include fetch and push. Tag references are branch references that never move. Once you’ve created a tag, it will never change This behavior makes them useful for marking specific versions of a software package, or marking exactly what got deployed to a production server on a particular date. Only one command affects the tag and i.e git tag Now look at the display:- Figure 5. Source: think-like-a-git.net However, you don’t see commits here. Every git tool hides commits. Imagine this scenario: you write some code and check it in. Then, you realize you forgot to run the tests, so you run them, and they uncover a syntax error. Or you spot a typo. For whatever reason, you weren’t done when you thought you were done. Git gives you an option to tack the new change on to the previous commit using: git commit --amend. This keeps all your related changes bundled together in one commit. A git commit is a SHA-1 hash of the contents of the commit, and the IDs of its parent commits. Which means that, when you use git commit --amend, you’re actually building a completely different commit, and pointing your local branch reference to it instead. The first commit you made is still there on disk, and you can still get back to it Git will decide that it’s time to run garbage collection. You can trigger this process yourself, using git gc. Starting from every branch and every tag, Git walks back through the graph, building a list of every commit it can reach. Once it’s reached the end of every path, it deletes all the commits it didn’t visit. The Secret Of Git can fit it into these four words: References make commits reachable. References …​ whether they are local branches, remote branches, or tags …​ Make commits …​ which are nodes in a graph …​ Reachable …​ so that you can get back to them, and so that Git will not delete them when it decides it is time for spring cleaning. Because references make commits reachable, creating a branch is a way to \"nail down\" part of the graph that you might want to come back to later. Neither git merge nor git rebase will change your existing commits (remember, a commit’s ID is a hash of its contents and its history), you can create a temporary branch any time you want to try something you’re even just a little bit unsure about. Creating a branch before you try a merge or a rebase is like saving your game before you battle the boss. Use this pattern if you are unsure or unclear on exactly what git merge does. Being lazy and since it very well explained here without any fluff. https://think-like-a-git.net/sections/testing-out-merges/the-scout-pattern.html Being lazy and since it very well explained here without any fluff. https://think-like-a-git.net/sections/testing-out-merges/the-savepoint-pattern.html Being lazy and since it very well explained here without any fluff. https://think-like-a-git.net/sections/testing-out-merges/black-belt-merging.html Before you start using rebase in a shared repository, make sure everyone who works on your project is comfortable working with rebase. You might also consider changing everyone’s default pull strategy to \"rebase\" instead of \"merge\" What git cherry-pick does is take a commit from somewhere else, and \"play it back\" wherever you are right now. Because this introduces the same change with a different parent, Git builds a new commit with a different ID. Figure 6. Source: think-like-a-git.net If you were at node H in this graph, and you typed git cherry-pick E, you get a copy of commit E, let’s call it E', that pointed to H as its parent. Figure 7. Source: think-like-a-git.net Or if you typed something like git cherry-pick C D E, you get the following: Figure 8. Source: think-like-a-git.net The important thing to notice here is that Git has copied changes made in one place, and replayed them somewhere else. Again being lazy and since it is very well explained here. https://think-like-a-git.net/sections/rebase-from-the-ground-up/using-git-cherry-pick-to-simulate-git-rebase.html To summarize the previous section, this: git checkout foo git checkout -b newbar git cherry-pick C D E git checkout bar git reset --hard newbar git branch -d newbar is equivalent to this: git rebase foo bar When you do a rebase, you are rewriting history. You are, in effect, saying to Git, \"Hey, you know those things that happened over there on that completely different timeline? I want you to pretend that they happened here instead.\" Here’s how I think of it: in English, we read from left to right. On most charts that show the change in something over time, time is shown on the x-axis of the graph, with time increasing from left to right. When you issue commands to the shell, you can put several of them on one line, and they’ll be executed in order from left to right. So when I use git rebase, I (almost) always give it two arguments: the name of the place I want to start from, and the name of the place I want to end up. Or, to put it another way, I tell rebase the sequence of events I want it to create, from left to right: git rebase first_this then_this There may be a time when you would like to change the origin url of your git repository to point to another url. You can use the following sequence of commands to do that: git remote rename origin upstream (1) git remote add origin https://github.com//simple-feed-reader/ (2) git push -u origin main (3) 1 Rename the existing origin remote to upstream 2 Add a new origin remote pointing to your copy of the repository on GitHub. 3 Publish your local Git repository to the newly created GitHub repository. commit guidelines Make small commits and commit often. Commit complete and well tested code. Don’t mix whitespace changes with functional code changes. Write good commit messages. commit message guidelines Why is it necessary? (Fix a bug, increase performance, add a feature) How does it address the issue? For short and obvious changes, this can be omitted. What effects does this change have? (may include benchmarks, side effects etc) What limitations does the current code have? (not necessary, but helps if you can think about it) commit message considerations Don’t assume that the code is self-evident/self-documenting. Finding it difficult to summarize your commit? Maybe it includes more than one bug fix or logical change. Consider splitting the commits using git add -p It should be possible to review a change request without reading the contents of the bug or task. Don’t assume the reviewer understands the problem. commit message structure Separate subject from body with a blank line Limit the subject line to 50 characters Capitalize the subject line Do not end the subject line with period Use the imperative mood in the subject line (Fix typo in log vs. Fixed typo in log or Misc fixes in log code) Wrap the body at 72 characters Use the body to explain what and why vs. how Reference fixed issues with closing keywords Example 1. commit message sample Add code review recipe for Go Helps teams automate linting and build verification for go projects. Also gives a list of items to verify for go code reviews. The PR does not add info about VS Code extensions for go, this will be added in issue #124 Closes: #123 You can specify which editor you would like to use for commit messages. git config --global core.editor \"code --wait\" Factory Bot rails Puppet major.minor[.build[.revision]] Upon CI build these version numbers are generated. During CD release components are pushed to a component repository such as Nuget, npm, docker hub where a history of different versions is being kept. Each build the version number is incremented at the last digit. Updating the major / minor version indicates changes of the API / interfaces / contracts: Major Version: A breaking change Minor Version: A backwards-compatible minor change Build / Revision: No API change, just a different build.s Semantic Versioning is a concept of calculating the version number automatically based on a certain source code repository. The semver tool looks at a GIT source control branch and comes up with a repeatable and unique version number based on number of commits since last major or minor release commit messages tags branch names Run semvar during the CI process to make each build uniquely identifiable.","title":"Git Notes","component":"studynotes","version":"","name":"overview","url":"/studynotes/Git/overview.html","titles":[{"text":"Basics","hash":"_basics","id":1},{"text":"git log","hash":"_git_log","id":2},{"text":"References","hash":"_references","id":3},{"text":"Garbage collection","hash":"_garbage_collection","id":4},{"text":"References make commits reachable","hash":"_references_make_commits_reachable","id":5},{"text":"Branches as savepoints","hash":"_branches_as_savepoints","id":6},{"text":"git merge","hash":"_git_merge","id":7},{"text":"the scout pattern","hash":"_the_scout_pattern","id":8},{"text":"the savepoint pattern","hash":"_the_savepoint_pattern","id":9},{"text":"Black belt merging","hash":"_black_belt_merging","id":10},{"text":"git rebase","hash":"_git_rebase","id":11},{"text":"git cherry-pick","hash":"_git_cherry_pick","id":12},{"text":"Using 'git cherry-pick' to Simulate 'git rebase'","hash":"_using_git_cherry_pick_to_simulate_git_rebase","id":13},{"text":"A Helpful Mnemonic for 'git rebase' Arguments","hash":"_a_helpful_mnemonic_for_git_rebase_arguments","id":14},{"text":"How to change git remote origin","hash":"_how_to_change_git_remote_origin","id":15},{"text":"Commit Best Practices","hash":"_commit_best_practices","id":16},{"text":"sample contributing.md files","hash":"_sample_contributing_md_files","id":17},{"text":"Versioning","hash":"_versioning","id":18},{"text":"Version numbers","hash":"_version_numbers","id":19},{"text":"Semantic Versioning","hash":"_semantic_versioning","id":20}]},"37":{"id":37,"text":"This is the study notes section on the website. This is where I try to document my notes on a topic.","title":"Study Notes","component":"studynotes","version":"","name":"index","url":"/studynotes/index.html","titles":[]},"38":{"id":38,"text":"Table of Contents Environment and Service Goals Simple Azure Digital Twins Environment Scenario Services and Data Workflows that form an Azure Digital Twins Solution Data Ingress Data Egress Azure Digital Twins in a solution context Azure Digital Twins Models Elements of a model Differentiating between Property and Telemetry Fields Applying Property and Telemetry Fields in an IoT Context Property and Telemetry Fields Example Digital Twins Definition Language Implementation Specifics Example Model Code Possible Schemas Model Inheritance Digital Twins and Graph Construction Digital Twins Relationships: a graph of digital twins Visualization Azure Digital Twins Solution Development Tools and Processes Azure Digital Twins Service Configuration Configure endpoints and routes Create an Event Route Model Management Validating and Uploading Models Update and Version Models Remove Models Azure Digital Twins API Azure Digital Twins CLI Azure Digital Twins SDK Manage Digital Twins in the Graph Manage Digital Twin Relationships in the Graph Azure Digital Twins Queries Azure Functions for Azure Digital Twins Azure Digital Twins Event data Data Ingress and Egress Processes Data Ingress (upstream resources) Data Egress Azure Digital Twins Metrics Ingress Metrics Routing metrics Additional Metrics Categories Dimensions Azure Digital Twins Diagnostic Settings Log Schemas Api Log Schemas Egress log schemas View and Query ADT Diagnostic Logs Azure Digital Twins Alert Azure Resource Health support for ADT Azure Digital Twins is a platform as a service (PaaS) offering that enables the creation of knowledge graphs. The knowledge graph is based on interconnected digital entities that combine to represent a larger, interactive environment. The size and complexity of the environment is dependent upon your business needs, and could represent things like buildings, factories, farms, energy networks, railways, stadiums, and more—even entire cities. Digital Twins (in Azure Digital Twins) and Device Twins (in IoT Hub) may sound similar, but they are two different things. IoT Hub device twins often focus on describing the aspects and capabilities of a device itself. Digital Twins are more conceptual representations that can store user-defined insights about a digital entity or many related entities. Entities that could be representing a device or many related devices. It is also worth noting that IoT Hub device twins can be connected to Azure Digital Twins (the service) as part of an end-to-end solution that represents devices across services. Consider the above example where we define an environment that represents a small building (the Azure Digital Twins graph shown above). In this example, our building is composed of digital twins that represent the floors of the building, and the rooms on each floor. The lines on the Graph that connect a Floor to a Room are called relationships. Relationships help to define how our digital twins are related to one another. In this case, the relationship tells us that a floor “contains” rooms. Azure Digital Twins is typically used together with other services to create flexible, connected solutions that use your data in various workflows. Using Event Routes, Azure Digital Twins can receive data from upstream services such as IoT Hub or Logic Apps, which are used to deliver telemetry and notifications. Azure Digital Twins can also route data to downstream services, such as Azure Maps and Time Series Insights, for storage, workflow integration, analytics, and more. Azure Digital Twins can be driven with data and events from any service—IoT Hub, Logic Apps, your own custom service, and more. This capability allows you to collect telemetry from physical devices in your environment, and process this data using the Azure Digital Twins graph in the cloud. Instead of having a built-in IoT Hub behind the scenes, Azure Digital Twins allows you to \"bring your own\" IoT Hub to use with the service. You can use an existing IoT Hub you currently have in production, or deploy a new one to be used for this purpose. This capability gives you full access to all of the device management capabilities of IoT Hub. To ingest data from any source into Azure Digital Twins, use an Azure function. Azure Digital Twins can send data to connected endpoints. Supported endpoints can be: Event Hubs Event Grids Service Bus Endpoints are attached to Azure Digital Twins using management APIs or the Azure portal. There are many other services where you may want to ultimately direct your data, such as Azure Storage, Azure Maps, or Time Series Insights. To send your data to services like these, attach the destination service to an endpoint. For example, if you are also using Azure Maps and want to correlate location with your Azure Digital Twins twin graph, you can use Azure Functions with Event Grid to establish communication between all the services in your deployment. Azure Digital Twins is commonly used in combination with other Azure services as part of a larger IoT solution. A complete solution using Azure Digital Twins may contain the following parts: The Azure Digital Twins service instance. The Azure Digital Twins service stores your twin graph with its state and orchestrates event processing. One or more client apps that may be used when building the Azure Digital Twins solution (to create digital entities and a topology, or to extract insights from the twin graph). One or more external compute resources to process events generated by Azure Digital Twins, or by connected data sources such as devices. One common way to provide compute resources is via Azure Functions. An IoT hub to provide device management and IoT data stream capabilities. Downstream services to handle tasks such as workflow integration (like Logic Apps, cold storage, time series integration, or analytics). In an Azure Digital Twins solution, Models provide the blueprint that is used to create the digital twin entities within your Azure Digital Twins environment. Consider this example of an Azure Digital Twins environment expressed as a graph. The nodes that you see in this graph are the digital twin instances that were created using the corresponding Model (either a Floor or a Room model). Models have names (such as Floor, Room, or TemperatureSensor), and contain elements such as properties, telemetry/events, and relationships that describe how the digital twin entities are related to each other within your environment. Azure Digital Twins models are defined using the Digital Twins Definition Language (DTDL), which is expressed using a JSON-style coding format. Within a model definition, the top-level code item is an Interface, which encapsulates the entire model. A DTDL model interface may contain zero, one, or many of each of the following fields: Property Properties are data fields that represent the state of an entity. Like the properties in many object-oriented programming languages. Properties have backing storage and can be read at any time. Telemetry Telemetry fields represent measurements or events, and are often used to describe device sensor readings. Unlike properties, telemetry is not stored on a digital twin; it is a series of time-bound data events that need to be handled as they occur. Component Components allow you to build your model interface as an assembly of other interfaces, if you want. An example of a component is a frontCamera interface (and another component interface backCamera) that are used in defining a model for a phone. You must first define an interface for frontCamera as though it were its own model, and then you can reference it when defining Phone. Use a component to describe something that is an integral part of your solution but doesn’t need a separate identity, and doesn’t need to be created, deleted, or rearranged in the twin graph independently. If you want entities to have independent existences in the twin graph, represent them as separate digital twins of different models, connected by relationships Relationship Relationships let you represent how a digital twin can be involved with other digital twins. Relationships can represent different semantic meanings, such as contains (\"floor contains room\"), cools (\"hvac cools room\"), isBilledTo (\"compressor is billed to user\"), etc. Relationships allow the solution to provide a graph of interrelated entities. Since property and telemetry fields could both represent numeric data, it may not be obvious when or where each should be used. Here is some more guidance on distinguishing between DTDL property and telemetry fields in Azure Digital Twins. The difference between properties and telemetry for Azure Digital Twins models is as follows: Properties Properties are expected to have backing storage (a stored and accessible value). You can read a property at any time and retrieve its value. If the property is writeable, you can also assign a value to the property. Telemetry Telemetry is more like a stream of events; it’s a set of data messages that have short lifespans. If you don’t monitor for a telemetry event and take actions when it happens, there is no trace of the event at a later time. You can’t come back to it and read it later. In C# terms, telemetry is like a C# event. In IoT terms, telemetry is typically a data value sent by a device at a specified time interval. When designing a model, a telemetry field is often used in models that represent IoT devices. In this case, you will typically monitor incoming device data and take actions as the data arrives. A property field is used most often when designing a model because properties provide you with backing storage and the ability to read and query the data fields. Consider the following example: IoT hub: IoT device with temperature sensor is connected to IoT hub. Azure Digital Twins model - telemetry field: Azure Function is used to deliver IoT telemetry data to Azure Digital Twins device twin (temp01). Azure Digital Twins model - property field: Monitor temp01 telemetry field events and capture “last received” value and “last received time” value. Store values in last_received and last_received_time property fields. Query model properties: Query as needed to extract most recently reported temperature and time. Models for Azure Digital Twins are defined using the Digital Twins Definition Language (DTDL), which is based on JSON-LD and is programming-language independent. For a DTDL model to be compatible with Azure Digital Twins, it must meet these requirements. All top-level DTDL elements in a model must be of type interface. Azure Digital Twins model APIs can receive JSON objects that represent either an interface or an array of interfaces. As a result, no other DTDL element types are allowed at the top level. DTDL for Azure Digital Twins must not define any commands. Azure Digital Twins only allows a single level of component nesting. This requirement means that an interface that’s being used as a component can’t have any components itself. Interfaces can’t be defined inline within other DTDL interfaces; they must be defined as separate top-level entities with their own IDs. Then, when another interface wants to include that interface as a component or through inheritance, it can reference its ID. Twin type models can be written in any text editor. Consider a solar system environment that contains models for planets, each with a name, a mass, and a temperature. Each of the planets may also interact with moons that are their satellites, and the planets may contain craters. In the DTDL code example below, the Planet model expresses connections to these other entities by referencing two external models—Moon and Crater. These external models are also defined in the example code below, but are kept simple so as not to detract from the primary Planet example. [ { \"@id\": \"dtmi:com:contoso:Planet;1\", \"@type\": \"Interface\", \"@context\": \"dtmi:dtdl:context;2\", \"displayName\": \"Planet\", \"contents\": [ { \"@type\": \"Property\", \"name\": \"name\", \"schema\": \"string\" }, { \"@type\": \"Property\", \"name\": \"mass\", \"schema\": \"double\" }, { \"@type\": \"Telemetry\", \"name\": \"Temperature\", \"schema\": \"double\" }, { \"@type\": \"Relationship\", \"name\": \"satellites\", \"target\": \"dtmi:com:contoso:Moon;1\" }, { \"@type\": \"Component\", \"name\": \"deepestCrater\", \"schema\": \"dtmi:com:contoso:Crater;1\" } ] }, { \"@id\": \"dtmi:com:contoso:Crater;1\", \"@type\": \"Interface\", \"@context\": \"dtmi:dtdl:context;2\" }, { \"@id\": \"dtmi:com:contoso:Moon;1\", \"@type\": \"Interface\", \"@context\": \"dtmi:dtdl:context;2\" } ] The fields of the model are: @id An identifier for the model. Must be in the following format: dtmi::; @type Identifies the kind of information being described. For an interface, the type is Interface. @context Sets the context for the JSON document. Models should use the following: dtmi:dtdl:context;2 @displayName (optional) Allows you to give the model a friendly name if desired. contents All remaining interface data is placed here, as an array of attribute definitions. Each attribute must provide an @type (Property, Telemetry, Command, Relationship, or Component) to identify the type of interface information it describes, and then a set of properties that define the actual attribute (for example, name and schema to define a Property). As per DTDL, the schema for Property and Telemetry attributes can be of standard primitive types—integer, double, string, and Boolean—and other types such as DateTime and Duration. In addition to primitive types, Property and Telemetry fields can have these complex types: Object Map Enum Telemetry fields also support the Array type. Sometimes, you may want to specialize a model further. For example, it might be useful to have a generic model Room, and specialized variants ConferenceRoom and Gym. To express specialization, DTDL supports inheritance: interfaces can inherit from one or more other interfaces. The following example reimagines the Planet model from the earlier DTDL example as a subtype of a larger CelestialBody model. The \"parent\" model is defined first, and then the \"child\" model builds on it by using the field “extends”. [ { \"@id\": \"dtmi:com:contoso:CelestialBody;1\", \"@type\": \"Interface\", \"@context\": \"dtmi:dtdl:context;2\", \"displayName\": \"Celestial body\", \"contents\": [ { \"@type\": \"Property\", \"name\": \"name\", \"schema\": \"string\" }, { \"@type\": \"Property\", \"name\": \"mass\", \"schema\": \"double\" }, { \"@type\": \"Telemetry\", \"name\": \"temperature\", \"schema\": \"double\" } ] }, { \"@id\": \"dtmi:com:contoso:Planet;1\", \"@type\": \"Interface\", \"@context\": \"dtmi:dtdl:context;2\", \"displayName\": \"Planet\", \"extends\": \"dtmi:com:contoso:CelestialBody;1\", \"contents\": [ { \"@type\": \"Relationship\", \"name\": \"satellites\", \"target\": \"dtmi:com:contoso:Moon;1\" }, { \"@type\": \"Component\", \"name\": \"deepestCrater\", \"schema\": \"dtmi:com:contoso:Crater;1\" } ] }, { \"@id\": \"dtmi:com:contoso:Crater;1\", \"@type\": \"Interface\", \"@context\": \"dtmi:dtdl:context;2\" } ] In this example, CelestialBody contributes a name, a mass, and a temperature to Planet. The extends section is an interface name, or an array of interface names (allowing the extending interface to inherit from multiple parent models if desired). Once inheritance is applied, the extending interface exposes all properties from the entire inheritance chain. The extending interface cannot change any of the definitions of the parent interfaces; it can only add to them. It also cannot redefine a capability already defined in any of its parent interfaces For example, if a parent interface defines a double property mass, the extending interface cannot contain a declaration of mass, even if it’s also a double. In an Azure Digital Twins solution, the entities in your environment are represented by digital twins. Each digital twin is an instance of one of your custom-defined digital models. A digital twin can be connected to other digital twins via relationships to form a twin graph (a representation of your entire environment). The image below shows a simplified Contoso Cheese Factory Azure Digital Twins environment expressed as a twin graph. The graph contains seven digital twin nodes connected by relationships. To the left of the twins graph are the corresponding models. Since the digital twins nodes that you create in your Azure Digital Twins solution are based on a model type, the first step in adding a digital twin to Azure Digital Twins is to upload a model type to your Azure Digital Twins service. After creating and uploading a model, you can create an instance of the type; the digital twin. For example, after creating a model of type Cheese Cave, you can create one or more digital twins that use this type (for example, a Cheese Cave digital twin called Cave_1, another called Cave_2, etc.). Twins are connected into a twin graph by their relationships. The relationships that a twin can have are defined as part of its model. Twins are connected into a twin graph by their relationships. The relationships that a twin can have are defined as part of its model. For example, the model Cheese Factory might define a “Has Caves” relationship that targets twins of type Cheese Cave. With this definition, Azure Digital Twins will allow you to create “Has Caves” relationships from any Cheese Factory twin to any Cheese Cave twin. The result of this process is a set of nodes (the digital twins) connected via edges (their relationships) in a graph. While the primary way to interact with your Azure Digital Twins instance is through the APIs and SDKs, it can be helpful to see a visualization of the twins and graphs that you are creating in your instance. Microsoft provides a sample application, the Azure Digital Twins explorer, that can be used to visualize the Azure Digital Twins graph and to edit the twins and models. The Azure Digital Twins service comes equipped with both control plane APIs and data plane APIs for managing your instance and its elements. The Control plane APIs are Azure Resource Manager APIs used to manage your Azure Digital Twins instance as a whole, so they cover operations like creating or deleting your entire instance. You will also use these APIs to create and delete endpoints. The Data plane APIs are Azure Digital Twins APIs that are used for data management operations like managing models, twins, graph queries, and event routes. The initial setup for a new Azure Digital Twins instance consists of two parts: Create the Azure Digital Twins service instance. Set up user access permissions: Azure users will need to have the Azure Digital Twins Data Owner role on the Azure Digital Twins instance to be able to manage the Azure Digital Twins service and its data. To set up user access permissions in Azure Digital Twins, you will need access to an Azure account that can assign user access permissions for the subscription that you are working in. The account must have role assignments that include the following permissions: Create and manage Azure resources. Manage user access to Azure resources (including granting and delegating permissions). With your Azure Digital Twins instance open in the Azure portal, you can use Access control (IAM), to configure role assignments. Figure 1. Source - Microsoft Learn Common roles that meet this requirement are Owner, Account admin, or the combination of User Access Administrator and Contributor. In Azure Digital Twins, you can route event notifications to downstream services or connected compute resources. This routing is done by first setting up endpoints that can receive the events. You can then create event routes that specify which events generated by Azure Digital Twins are delivered to which endpoints. You can manage Azure Digital Twins endpoints and routes in the Azure portal, with the Event Routes APIs, the SDKs, or the Azure Digital Twins CLI. Azure Digital Twins supports the endpoint types listed below. The endpoint must exist before you can link to it. Event Grid Event Hubs Service Bus Endpoint Required resouces Event Grid endpoint Event Grid topic Event Hubs endpoint Event Hubs namespace Event Hubs (Optional) authorization rule for key-based authentication Service Bus endpoint Service Bus namespace Service Bus topic (Optional) authorization rule for key-based authentication Once you have created the endpoint resources, you can use them for an Azure Digital Twins endpoint. To create your endpoint in the Azure portal, open your Azure Digital Twins blade, and then select Endpoints from the left-side menu. Figure 2. Source - Microsoft Learn In addition to the name and type of your endpoint, you will also need to specify your subscription and select the endpoint resource. For Event Hubs and Service Bus endpoints, you must also select an Authentication type. You can use key-based authentication with a pre-created authorization rule, or identity-based authentication if you’ll be using the endpoint with a managed identity for your Azure Digital Twins instance. Once created, the endpoint is available as an endpoint inside of Azure Digital Twins, under the name you chose for the endpoint. You’ll typically use that name as the target of an event route. To actually send data from Azure Digital Twins to an endpoint, you’ll need to define an event route. These routes let developers wire up event flow, throughout the system and to downstream services. An event route definition contains these elements: The route name you want to use. The name of the endpoint you want to use. A filter that defines which events are sent to the endpoint: To disable the route so that no events are sent, use a filter value of false. To enable a route that has no specific filtering, use a filter value of true. For details on any other type of filter, see the Filter events section below. A single route can allow multiple notifications and event types to be selected. To create an event route in the Azure portal, on the left-side menu of your Azure Digital Twins blade, select Event routes, and then, on the Event routes page, select + Create an event route. Routes have a filter field. If the filter value on your route is false, no events will be sent to your endpoint. After enabling the minimal filter of true, endpoints will receive various events from Azure Digital Twins: Telemetry fired by digital twins using the Azure Digital Twins service API. Twin property change notifications, fired on property changes for any twin in the Azure Digital Twins instance. Life-cycle events, fired when twins or relationships are created or deleted. You can restrict the types of events being sent by defining a more specific filter. To add an event filter while you are creating an event route, use the Add an event route filter section of the Create an event route page. You can either select from some basic common filter options, or use the advanced filter options to write your own custom filters. To use the basic filters, expand the Event types option and select the checkboxes corresponding to the events you’d like to send to your endpoint. You can use the advanced filter option to write your own custom filters. To create an event route with advanced filter options, toggle the switch for the Advanced editor to enable it. You can then write your own event filters in the Filter box: Here are the supported route filters. The detail in the Filter text schema column is the text that can be entered into the filter box. Filter name Description Filter text schema Supported Values True / False Allows creating a route with no filtering, or disabling a route so no events are sent. true = route is enabled with no filtering; false = route is disabled Type The type of event flowing through your digital twin instance. type = '' Here are the possible event type values: Microsoft.DigitalTwins.Twin.Create Microsoft.DigitalTwins.Twin.Delete Microsoft.DigitalTwins.Twin.Update Microsoft.DigitalTwins.Relationship.Create Microsoft.DigitalTwins.Relationship.Update Microsoft.DigitalTwins.Relationship.Delete microsoft.iot.telemetry Source Name of Azure Digital Twins instance. source = '' Here are the possible hostname values: For notifications: .api..digitaltwins.azure.net For telemetry: .api..digitaltwins.azure.net/ Subject A description of the event in the context of the event source above. subject = '' Here are the possible subject values: For notifications: The subject is or a URI format for subjects, which are uniquely identified by multiple parts or IDs: /relationships/ For telemetry: The subject is the component path (if the telemetry is emitted from a twin component), such as comp1.comp2. If the telemetry is not emitted from a component, then its subject field is empty. Data schema DTDL model ID. dataschema = '' For telemetry: The data schema is the model ID of the twin or the component that emits the telemetry. For example, dtmi:example:com:floor4;2 For notifications (create/delete): Data schema can be accessed in the notification body at $body.$metadata.$model. For notifications (update): Data schema can be accessed in the notification body at $body.modelId Content type Content type of data value. datacontenttype = '' The content type is application/json Spec version The version of the event schema you are using. specversion = '' The version must be 1.0. This indicates the CloudEvents schema version 1.0 Notification body Reference any property in the data field of a notification. $body. Any property in the data field can be referenced using $body The following data types are supported as values returned by references to the data above: Data type Example String STARTS_WITH($body.$metadata.$model, 'dtmi:example:com:floor') CONTAINS(subject, '') Integer $body.errorCode > 200 Double $body.temperature ⇐ 5.5 Bool $body.poweredOn = true Null $body.prop != null The following operators are supported when defining route filters: Family Operators Example Logical AND, OR, ( ) (type != 'microsoft.iot.telemetry' OR datacontenttype = 'application/json') OR (specversion != '1.0') Comparison , >=, =, != $body.temperature ⇐ 5.5 The following functions are supported when defining route filters: Function Description Example STARTS_WITH(x,y) Returns true if the value x starts with the string y. STARTS_WITH($body.$metadata.$model, 'dtmi:example:com:floor') ENDS_WITH(x,y) Returns true if the value x ends with the string y. ENDS_WITH($body.$metadata.$model, 'floor;1') CONTAINS(x,y) Returns true if the value x contains the string y. CONTAINS(subject, '') When you implement or update a filter, the change may take a few minutes to be reflected in the data pipeline. Model management operations include validation, upload, retrieval, update, and deletion. You can manage the models within your Azure Digital Twins instance using the DigitalTwinModels APIs, the .NET (C#) SDK, or the Azure Digital Twins CLI extension. After creating a model, it’s recommended that you validate your models offline before uploading them to your Azure Digital Twins instance. Microsoft provides the following tools that can be used to validate Azure Digital Twins models: DTDL Validator: The DTDL Validator is a language-agnostic sample app available for validating model documents to make sure the DTDL is correct before uploading it to your instance. It’s located here: DTDL Validator sample. The DTDL validator sample is built on a .NET DTDL parser library, which is available on NuGet as a client-side library: Microsoft.Azure.DigitalTwins.Parser. You can also use the library directly to design your own validation solution. When using the parser library, make sure to use a version that is compatible with the version that Azure Digital Twins is running. DTDL Editor for Visual Studio Code The DTDL extension for Visual Studio Code supports both model authoring and validation. The tool uses Intellisense to help you with the language syntax (including autocompletion) and syntax validation. The full documentation for the DTDL Editor for Visual Studio Code can be found here: DTDL - Visual Studio Marketplace. Once you’re finished creating, extending, or selecting your models, you’re ready to upload them to your Azure Digital Twins instance for use in your solution. You can upload models using the following techniques: Azure Digital Twins REST APIs. Azure CLI commands. Azure Digital Twins SDKs and custom applications. Microsoft also provides sample applications (based on the SDKs) that can be used to upload your models: Azure Digital Twins-Explorer: The Azure Digital Twins-Explorer is a sample application for the Azure Digital Twins service. It lets you connect to an Azure Digital Twins instance and, among other things, can help you to upload and explore your models. The Azure Digital Twins-explorer can be found here: Azure Digital Twins explorer Azure Digital Twins tools - UploadModels If you have a large number of models to upload, or if the models have interdependencies that would make ordering individual uploads complicated, you may want to use the UploadModels tool. The tool accepts a list of models (including wildcard and glob support), validates the models using the digital twins parser, orders the models so that \"root\" models are uploaded first, and then uploads models in batches for fast uploading. The Azure Digital Twins UploadModels tool can be found here: Upload Models Tool. You can follow the instructions provided with the sample to configure and use this tool to upload models into your own instance. Once a model is uploaded to your Azure Digital Twins instance, the entire model interface is immutable, which means there’s no traditional \"editing\" of models. Azure Digital Twins also doesn’t allow reupload of the same model. Instead, if you want to make changes to a model - such as updating displayName or description - the way to change the model is to upload a newer version of the model. To create a new version of an existing model, start with the DTDL of the original model. Update, add, or remove the fields you would like to change. Next, mark the file as a newer version of the model by updating the ID field of the model. The last section of the model ID, after the \";\" character, represents the model number. To indicate that the model version has been updated, increment the number at the end of the ID value. The ID value can be any number greater than the current version number. For example, if your previous model ID looked like this: \"@id\": \"dtmi:com:contoso:PatientRoom;1\", version 2 of this model might look like this: \"@id\": \"dtmi:com:contoso:PatientRoom;2\", Then, upload the new version of the model to your instance. This version of the model will then be available in your instance to use for digital twins. It does not overwrite earlier versions of the model, so multiple versions of the model will coexist in your instance until you remove them. When you create a new twin, since the new model version and the old model version coexist, the new twin can use either the new version of the model or the older version. Having an older version also means that uploading a new version of a model doesn’t automatically affect existing twins. The existing twins will remain instances of the old model version. You can update these existing twins to the new model version by patching them. If you aren’t familiar with JSON Patch, you can read more here: JsonPatch in ASP.NET Core web API Models can also be removed from the service in one of two ways: Decommisioning Once a model is decommissioned, you can no longer use it to create new digital twins. Existing digital twins that already use this model aren’t affected, so you can still update them with things like property changes and adding or deleting relationships. Deletion This will completely remove the model from the solution. Any twins that were using this model are no longer associated with any valid model, so they’re treated as though they don’t have a model at all. You can still read these twins, but won’t be able to make any updates on them until they’re reassigned to a different model. Decommissioning and deletion are separate features and they don’t impact each other, although they may be used together to remove a model gradually. Here’s the C# code to decommission a model: await client.DecommissionModelAsync(dtmiOfPlanetInterface); A model’s decommissioning status is included in the ModelData records returned by the model retrieval APIs. You can delete all models in your instance at once, or you can do it on an individual basis. Generally, models can be deleted at any time. The exception is models that other models depend on, either with an extends relationship or as a component. For example, if a ConferenceRoom model extends a Room model, and has a ACUnit model as a component, you can’t delete Room or ACUnit until ConferenceRoom removes those respective references. You can solve the dependency issue by updating the dependent model to remove the dependencies, or by deleting the dependent model completely. Even if a model meets the requirements to delete it immediately, you may want to take steps to avoid unintended consequences (for the twins left behind). Here are some steps that can help you manage the process: First, decommission the model. Wait a few minutes, to make sure the service has processed any last-minute twin creation requests sent before the decommission. Query twins by model to see all twins that are using the now-decommissioned model. Delete the twins if you no longer need them, or patch them to a new model if needed. You can also choose to leave them alone, in which case they’ll become twins without models once the model is deleted. Wait for another few minutes to make sure the changes have percolated through. Delete the model. To delete a model, use this call: await client.DeleteModelAsync(IDToDelete); Once a model is deleted, any digital twins that were using the model are now considered to be without a model. Queries aren’t able to give you a list of the twins in this state—although you can still query the twins by the deleted model to know what twins are affected. Here’s an overview of what you can and can’t do with twins that don’t have a model. Things you can do: Query the twin. Read properties. Read outgoing relationships. Add and delete incoming relationships (as in, other twins can still form relationships to this twin). The target in the relationship definition can still reflect the DTMI of the deleted model. A relationship with no defined target can also work here. Delete relationships. Delete the twin. Things you cannot do: Edit outgoing relationships (as in, relationships from this twin to other twins). Edit properties. After a model has been deleted, you may decide later to upload a new model with the same ID as the one you deleted. Here’s what happens in that case. From the solution store’s perspective, this is the same as uploading a new model. The service doesn’t remember the old one was ever uploaded. If there are any remaining twins in the graph referencing the deleted model, they’re no longer orphaned. The reused model ID is valid again with the new definition. However, if the new definition for the model is different than the model definition that was deleted, these twins may have properties and relationships that match the deleted definition and aren’t valid with the new one. Azure Digital Twins doesn’t prevent this state, so be careful to patch twins appropriately in order to make sure they remain valid through the model definition switch. Rest Api There are currently two Azure Digital Twins Data Plane Postman collections available for you to choose from: Azure Digital Twins Postman Collection postman_collection.json Azure Digital Twins Data Plane Swagger swagger file To get the bearer token use the get-access-token command of the cli: az account get-access-token --resource 0b07f429-9f4b-4714-9392-cc5e8e80c8b0 Microsoft Learn Microsoft Learn Samples Microsoft Learn Samples Microsoft Learn Samples Microsoft Learn Samples Microsoft Learn Samples Microsoft Learn Samples An Azure Digital Twins solution relies on external resources for data inputs and downstream services for analysis, storage, etc. Data can be ingested into Azure Digital Twins through external compute resources such as an Azure Function. IoT Hub is a common source for data input to Azure Digital Twins. Consider a scenario that includes the following items: A thermostat device in IoT Hub, with a known device ID A digital twin to represent the device, with a matching ID When IoT hub receives telemetry containing temperature values from the device, you need to set a temperature Property of the corresponding digital twin. This example uses a straightforward ID match between the device ID and a corresponding digital twin’s ID, but it is possible to provide more sophisticated mappings from the device to its twin (such as with a mapping table). In this case, an Azure Function receives the data from IoT hub’s built-in Event Grid endpoint and uses the Azure Digital Twins APIs to set properties on a digital twin contained within an Azure Digital Twins instance. The Azure Function could also pass temperature telemetry to a Telemetry field of the digital twin. To provide data to downstream resources, Azure Digital Twins uses digital twin change notification events as a trigger to route data to an Azure Digital Twins endpoint where the information can be accessed and used to accomplish a desired action. Although Azure Digital Twins relationships connect digital twins as parent and child, properties of a child are not automatically passed up to a parent in the case when a corresponding property is defined. Consider a scenario that includes the following items: An Azure Digital Twins environment contains Room digital twins (such as Room_01, Room_02, etc.) and Thermostat digital twins (such as thermo_0001). The Room digital twins have a rel_has_thermostat relationship and each Room has a Thermostat (establishing a Parent-Child relationship). The Thermostat digital twins have Property and Telemetry fields for temperature data that is coming from IoT hub. Room digital twins have a Property for currentTemp. When a Thermostat digital twin Property changes, you need to update the currentTemp Property of the Room digital twin (the Room digital twin that is the parent of that Thermostat digital twin) Whenever a Digital Twin Change Notification event occurs for a Thermostat digital twin, the following process is invoked: Data is routed to an Event Grid endpoint. The Event Grid uses an Event Subscription to specify an Azure Function \"listener“, creates a new event message using the Azure Digital Twins notification, and uses the new event to pass the required information to the function. The Azure Function extracts the event message data and uses it to obtain the twin’s ID and Relationship information, uses the Relationship to find the parent Room digital twin, and then updates the currentTemp Property by applying a patch. Azure Digital Twins feeds data to downstream services by using event notifications and routing. Consider a scenario that includes the following items: An Azure Digital Twins environment contains Room digital twins (such as Room_01, Room_02, etc.) and Thermostat digital twins (such as thermo_0001). The Room digital twins have a rel_has_thermostat relationship and each Room has a Thermostat. Room digital twins also have a Property for currentTemp. The Thermostat digital twins have Property and Telemetry fields for temperature data coming from IoT hub. You need to analyze the temperature Telemetry data using Azure Time Series Insights. Whenever a Digital Twin Telemetry Messages event notification occurs for a Thermostat digital twin, the following process is invoked: Data is routed to an Event Hubs endpoint. The Event Hubs processes events and triggers an Azure Function. The Azure Function creates a new event for TSI, adds a partition key, and then publishes the new event to another Event Hubs. Azure TSI (subscribed to events from the second Event Hubs) processes the incoming events to perform the required data analysis. Metrics are enabled by default. You can view Azure Digital Twins metrics from the Azure portal. You can configure these metrics to track when you are approaching a published service limit for some aspect of your solution. To set this up, use the alerts feature in Azure Monitor. You can define thresholds for these metrics so that you receive an alert when a metric reaches a certain percentage of its published limit. TwinCount - Total number of twins in the ADT instance. Use this metric to determine if you are approaching the service limit for max number of twins allowed per instance. ModelCount - Total number of models in the Azure ADT instance. Use this metric to determine if you are approaching the service limit for max number of models allowed per instance. Metrics having to do with data ingress. IngressEvents - The number of incoming telemetry events into Azure Digital Twins. IngressEventsFailureRate - The percentage of incoming telemetry events for which the service returns an internal error (500) response code. IngressEventsLatency - The average time from when an event arrives to when it is egressed by Azure Digital Twins, at which point the service sends a success/fail result. Metrics having to do with routing. MessagesRouted - The number of messages routed to an endpoint Azure service such as Event Hubs, Service Bus, or Event Grid. RoutingFailureRate - The percentage of events that result in an error as they are routed from Azure Digital Twins to an endpoint Azure Service such as Event Hubs, Service Bus, or Event Grid. RoutingLatency - Time elapsed between an event getting routed from Azure Digital Twins to when it is posted to the endpoint Azure Service such as Event Hubs, Service Bus, or Event Grid. Some more metrics the business may want to track: API request metrics - Metrics having to do with API requests, such as the number of API requests, response latency, and the percentage of requests that result in an error message (failure rate). Billing metrics - Metrics having to do with billing, such as the total number of API requests hitting the Azure Digital Twin Service, the number of messages sent to external endpoints, and the number of query units consumed. Some of the routing metrics provide information per endpoint. Dimension Value Authentication OAuth Operation (for API Requests) Microsoft.DigitalTwins/digitaltwins/delete, Microsoft.DigitalTwins/digitaltwins/write, Microsoft.DigitalTwins/digitaltwins/read, Microsoft.DigitalTwins/eventroutes/read, Microsoft.DigitalTwins/eventroutes/write, Microsoft.DigitalTwins/eventroutes/delete, Microsoft.DigitalTwins/models/read, Microsoft.DigitalTwins/models/write, Microsoft.DigitalTwins/models/delete, Microsoft.DigitalTwins/query/action Endpoint Type Event Grid, Event Hubs, Service Bus Protocol HTTPS Result Success, Failure Status Code 200, 404, 500, and so on. Status Code Class 2xx, 4xx, 5xx, and so on. Status Text Internal Server Error, Not Found, and so on. Azure Digital Twins can collect logs for your service instance to monitor its performance, access, and other data. You can configure diagnostic settings to start collecting logs from the Azure portal. Following are the categories of logs that Azure Digital Twins collects: ADTModelsOperation - Log all API calls pertaining to Models. ADTQueryOperation - Log all API calls pertaining to queries. ADTEventRoutesOperation - Log all API calls pertaining to Event Routes as well as egress of events from Azure Digital Twins to an endpoint service like Event Grid, Event Hubs and Service Bus. ADTDigitalTwinsOperation- Log all API calls pertaining to Azure Digital Twins. Each log category consists of operations of write, read, delete, and action. These map to REST API calls as follows: Write - PUT and PATCH Read - GET Delete - DELETE Action - POST Below is a comprehensive list of operations and corresponding Azure Digital Twins REST API calls that are logged in each category. Log Category Operation REST API calls and other events ADTModelsOperation Microsoft.DigitalTwins/models/write Digital Twin Models Update API. Microsoft.DigitalTwins/models/read Digital Twin Models Get By ID and List APIs. Microsoft.DigitalTwins/models/delete Digital Twin Models Delete API. Microsoft.DigitalTwins/models/action Digital Twin Models Add API. ADTQueryOperation Microsoft.DigitalTwins/query/action Query Twins API. ADTEventRoutesOperation Microsoft.DigitalTwins/eventroutes/write Event Routes Add API. Microsoft.DigitalTwins/eventroutes/read Event Routes Get By ID and List APIs. Microsoft.DigitalTwins/eventroutes/delete Event Routes Delete API. Microsoft.DigitalTwins/eventroutes/action Failure while attempting to publish events to an endpoint service (not an API call). ADTDigitalTwinsOperation Microsoft.DigitalTwins/digitaltwins/write Digital Twins Add, Add Relationship, Update, Update Component. Microsoft.DigitalTwins/digitaltwins/read Digital Twins Get By ID, Get Component, Get Relationship by ID, List Incoming Relationships, List Relationships. Microsoft.DigitalTwins/digitaltwins/delete Digital Twins Delete, Delete Relationship. Microsoft.DigitalTwins/digitaltwins/action Digital Twins Send Component Telemetry, Send Telemetry. Each log category has a schema that defines how events in that category are reported. Each individual log entry is stored as text and formatted as JSON blob. ADTDigitalTwinsOperation, ADTModelsOperation, and ADTQueryOperation use a consistent API log schema; ADTEventRoutesOperation has its own separate schema. This log schema is consistent for ADTDigitalTwinsOperation, ADTModelsOperation, and ADTQueryOperation. It contains information pertinent to API calls to an Azure Digital Twins instance. Here are the field and property descriptions for API logs. Field name Data type Description Time DateTime The date and time that this event occurred, in UTC. ResourceID String The Azure Resource Manager ID for the resource where the event took place. OperationName String The type of action being performed during the event. OperationVersion String The API version utilized during the event. Category String The type of resource being emitted. ResultType String Outcome of the event. ResultSignature String Http status code for the event. ResultDescription String Additional details about the event. DurationMs String How long it took to perform the event in milliseconds. CallerIpAddress String A masked source IP address for the event. CorrelationId Guid Customer provided unique identifier for the event. Level String The logging severity of the event. Location String The region where the event took place. RequestUri Uri The endpoint utilized during the event. Here is an example of a JSON body for these types of logs. { \"time\": \"2020-03-14T21:11:14.9918922Z\", \"resourceId\": \"/SUBSCRIPTIONS/BBED119E-28B8-454D-B25E-C990C9430C8F/RESOURCEGROUPS/MYRESOURCEGROUP/PROVIDERS/MICROSOFT.DIGITALTWINS/DIGITALTWINSINSTANCES/MYINSTANCENAME\", \"operationName\": \"Microsoft.DigitalTwins/digitaltwins/write\", \"operationVersion\": \"2020-10-31\", \"category\": \"DigitalTwinOperation\", \"resultType\": \"Success\", \"resultSignature\": \"200\", \"resultDescription\": \"\", \"durationMs\": \"314\", \"callerIpAddress\": \"13.68.244.*\", \"correlationId\": \"2f6a8e64-94aa-492a-bc31-16b9f0b16ab3\", \"level\": \"4\", \"location\": \"southcentralus\", \"uri\": \"https://myinstancename.api.scus.digitaltwins.azure.net/digitaltwins/factory-58d81613-2e54-4faa-a930-d980e6e2a884?api-version=2020-10-31\" } This is the schema for ADTEventRoutesOperation logs. These contain details pertaining to exceptions and the API operations around egress endpoints connected to an Azure Digital Twins instance. Field name Data type Description Time DateTime The date and time that this event occurred, in UTC. ResourceId String The Azure Resource Manager resource ID for the resource where the event took place. OperationName String The type of action being performed during the event. Category String The type of resource being emitted. ResultDescription String Additional details about the event. Level String The logging severity of the event. Location String The region where the event took place. EndpointName String The name of egress endpoint created in Azure Digital Twins. Here is an example of a JSON body for these types of logs. { \"time\": \"2020-11-05T22:18:38.0708705Z\", \"resourceId\": \"/SUBSCRIPTIONS/BBED119E-28B8-454D-B25E-C990C9430C8F/RESOURCEGROUPS/MYRESOURCEGROUP/PROVIDERS/MICROSOFT.DIGITALTWINS/DIGITALTWINSINSTANCES/MYINSTANCENAME\", \"operationName\": \"Microsoft.DigitalTwins/eventroutes/action\", \"category\": \"EventRoutesOperation\", \"resultDescription\": \"Unable to send EventGrid message to [my-event-grid.westus-1.eventgrid.azure.net] for event Id [f6f45831-55d0-408b-8366-058e81ca6089].\", \"correlationId\": \"7f73ab45-14c0-491f-a834-0827dbbf7f8e\", \"level\": \"3\", \"location\": \"southcentralus\", \"properties\": { \"endpointName\": \"endpointEventGridInvalidKey\" } } With diagnostic logs configured, custom queries can be used to troubleshoot issues and generate insights. Log queries are accessible from the Azure portal. Prebuilt example queries have been written for various logs. You can select one of the queries to load it into the query editor and run it to see these logs for your instance. In the image above, the left pane includes the following tabs: Tables: The Tables tab shows the different ADT log categories that are available to use in your queries. Queries: The Queries tab contains the example queries that you can load into the editor. Filter: The Filter tab lets you customize a filtered view of the data that the query returns. Alerts proactively notify you when important conditions are found in your metrics data. They allow you to identify and address issues before the users of your system notice them. Selecting New alert rule opens the Create alert rule page. You can follow the prompts to define conditions, action to be triggered, and alert details. Referring to the Create alert rule image above: Scope details should fill automatically with the details for your instance. You will define Condition and Action group details to customize alert triggers and responses. In the Alert rule details section, enter a name and optional description for your rule. You can select the Enable alert rule upon creation checkbox if you want the alert to become active as soon as it is created. This is also where you select a resource group and Severity level. Azure Resource Health can help you monitor whether your Azure Digital Twins instance is up and running. You can also use it to learn whether a regional outage is impacting the health of your instance. In the image above, the Azure Digital Twins instance is showing the current state as Available, and you can see that the resource has been available for the previous nine days.","title":"Azure Digital Twins","component":"studynotes","version":"","name":"azuredigitaltwins","url":"/studynotes/azure_iot/azuredigitaltwins.html","titles":[{"text":"Environment and Service Goals","hash":"_environment_and_service_goals","id":1},{"text":"Simple Azure Digital Twins Environment Scenario","hash":"_simple_azure_digital_twins_environment_scenario","id":2},{"text":"Services and Data Workflows that form an Azure Digital Twins Solution","hash":"_services_and_data_workflows_that_form_an_azure_digital_twins_solution","id":3},{"text":"Data Ingress","hash":"_data_ingress","id":4},{"text":"Data Egress","hash":"_data_egress","id":5},{"text":"Azure Digital Twins in a solution context","hash":"_azure_digital_twins_in_a_solution_context","id":6},{"text":"Azure Digital Twins Models","hash":"_azure_digital_twins_models","id":7},{"text":"Elements of a model","hash":"_elements_of_a_model","id":8},{"text":"Differentiating between Property and Telemetry Fields","hash":"_differentiating_between_property_and_telemetry_fields","id":9},{"text":"Applying Property and Telemetry Fields in an IoT Context","hash":"_applying_property_and_telemetry_fields_in_an_iot_context","id":10},{"text":"Property and Telemetry Fields Example","hash":"_property_and_telemetry_fields_example","id":11},{"text":"Digital Twins Definition Language","hash":"_digital_twins_definition_language","id":12},{"text":"Implementation Specifics","hash":"_implementation_specifics","id":13},{"text":"Example Model Code","hash":"_example_model_code","id":14},{"text":"Possible Schemas","hash":"_possible_schemas","id":15},{"text":"Model Inheritance","hash":"_model_inheritance","id":16},{"text":"Digital Twins and Graph Construction","hash":"_digital_twins_and_graph_construction","id":17},{"text":"Digital Twins","hash":"_digital_twins","id":18},{"text":"Relationships: a graph of digital twins","hash":"_relationships_a_graph_of_digital_twins","id":19},{"text":"Visualization","hash":"_visualization","id":20},{"text":"Azure Digital Twins Solution Development Tools and Processes","hash":"_azure_digital_twins_solution_development_tools_and_processes","id":21},{"text":"Azure Digital Twins Service Configuration","hash":"_azure_digital_twins_service_configuration","id":22},{"text":"Configure endpoints and routes","hash":"_configure_endpoints_and_routes","id":23},{"text":"Create an Event Route","hash":"_create_an_event_route","id":24},{"text":"Filter Events","hash":"_filter_events","id":25},{"text":"Basic Filters","hash":"_basic_filters","id":26},{"text":"Advanced Filters","hash":"_advanced_filters","id":27},{"text":"Model Management","hash":"_model_management","id":28},{"text":"Validating and Uploading Models","hash":"_validating_and_uploading_models","id":29},{"text":"Model Validation Tools","hash":"_model_validation_tools","id":30},{"text":"Uploading Models to Azure Digital Twins","hash":"_uploading_models_to_azure_digital_twins","id":31},{"text":"Update and Version Models","hash":"_update_and_version_models","id":32},{"text":"Model Versioning","hash":"_model_versioning","id":33},{"text":"Impact on Twins","hash":"_impact_on_twins","id":34},{"text":"Remove Models","hash":"_remove_models","id":35},{"text":"Decommissioning","hash":"_decommissioning","id":36},{"text":"Deletion","hash":"_deletion","id":37},{"text":"Before deletion: Deletion requirements","hash":"_before_deletion_deletion_requirements","id":38},{"text":"During deletion: Deletion process","hash":"_during_deletion_deletion_process","id":39},{"text":"After deletion: Twins without models","hash":"_after_deletion_twins_without_models","id":40},{"text":"After deletion: Reuploading a model","hash":"_after_deletion_reuploading_a_model","id":41},{"text":"Azure Digital Twins API","hash":"_azure_digital_twins_api","id":42},{"text":"Azure Digital Twins CLI","hash":"_azure_digital_twins_cli","id":43},{"text":"Azure Digital Twins SDK","hash":"_azure_digital_twins_sdk","id":44},{"text":"Manage Digital Twins in the Graph","hash":"_manage_digital_twins_in_the_graph","id":45},{"text":"Manage Digital Twin Relationships in the Graph","hash":"_manage_digital_twin_relationships_in_the_graph","id":46},{"text":"Azure Digital Twins Queries","hash":"_azure_digital_twins_queries","id":47},{"text":"Azure Functions for Azure Digital Twins","hash":"_azure_functions_for_azure_digital_twins","id":48},{"text":"Azure Digital Twins Event data","hash":"_azure_digital_twins_event_data","id":49},{"text":"Data Ingress and Egress Processes","hash":"_data_ingress_and_egress_processes","id":50},{"text":"Data Ingress (upstream resources)","hash":"_data_ingress_upstream_resources","id":51},{"text":"Ingress Scenario","hash":"_ingress_scenario","id":52},{"text":"Data Egress","hash":"_data_egress_2","id":53},{"text":"Egress scenario (in-service updates)","hash":"_egress_scenario_in_service_updates","id":54},{"text":"Egress Scenario (downstream services)","hash":"_egress_scenario_downstream_services","id":55},{"text":"Azure Digital Twins Metrics","hash":"_azure_digital_twins_metrics","id":56},{"text":"Ingress Metrics","hash":"_ingress_metrics","id":57},{"text":"Routing metrics","hash":"_routing_metrics","id":58},{"text":"Additional Metrics Categories","hash":"_additional_metrics_categories","id":59},{"text":"Dimensions","hash":"_dimensions","id":60},{"text":"Azure Digital Twins Diagnostic Settings","hash":"_azure_digital_twins_diagnostic_settings","id":61},{"text":"Log Schemas","hash":"_log_schemas","id":62},{"text":"Api Log Schemas","hash":"_api_log_schemas","id":63},{"text":"Egress log schemas","hash":"_egress_log_schemas","id":64},{"text":"View and Query ADT Diagnostic Logs","hash":"_view_and_query_adt_diagnostic_logs","id":65},{"text":"Azure Digital Twins Alert","hash":"_azure_digital_twins_alert","id":66},{"text":"Azure Resource Health support for ADT","hash":"_azure_resource_health_support_for_adt","id":67}]},"39":{"id":39,"text":"Table of Contents IoT Hub Features Security Routing Integration Device Management Developer IoT Hub Device Provisioning Service Provisioning Process Features When to use IoT Hub Tiers Basic Tier Standard Tier IoT Hub Message Throughtput IoT Hub Partition IoT Hub Endpoint Built-in endpoints Custom endpoints IoT Hub Security Access Control and Permissions Authentication Security tokens Supported X.509 certificates IoT Hub Device Lifecycle Terms and Concepts IoT Hub Device Identity and Registration Identity Registry Module Identity Identity registry operations Device Creation IoT Hub Device Twins Concept Device Twins Usage IoT Hub Module Identity and Module Twins IoT Hub Device Monitoring IoT Hub Device Retirements IoT Device Configuration and Communication Protocols Protocols Ports IoT Devices and Device Provisioning Provisioning Process IoT Device Enrollment Concepts ID Scope Registration ID Device ID Attestation mechanism IoT Device Enrollment Types Individual Enrollments Group Enrollments IoT Device X.509 Certificate Attestation Process Root Certificate Intermediate Certificate End-entity \"leaf\" certificate Controlling device access to the provisioning service with X.509 certificates Process IoT Device Hardware Security Module Trusted Platform Module Endorsement key Storage root key IoT Device Trusted Platform Module (TPM) Attestation Process High-level Attestation Process Detailed Attestation Process Nonce challenge Validate the nonce and receive credentials IoT Device Symmetric Key Attestation Symmetric Key Creation SAS tokens IoT Device Provisioning Process IoT Device Autoprovisioning Operation IoT Device Reprovisioning Process Reprovisioning Scenarios Device State Data Reprovisioning policies IoT Device Provisioning Service Azure CLI Commands DPS Service Commands Access Policy Commands Certificate Commands Linked Hub Commands IoT Device Provisioning SDK Provisioning Device SDK Provisioning Service SDK IoT Device Trusted Platform Module (TPM) Simulator IoT Device X.509 certificate Generator IoT Device Access control to DPS Authentication Security tokens Security Token Structure Use security tokens from service components IoT Device Provisioning Service IoT Device Configure Verified CA Certificates Proof-of-Possession Process Register and get the verification code Digitally sign the verification code to create a verification certificate Upload the signed verification certificate IoT Device - Roll Certificates Roll the certificate on the device IoT Device - The Deprovisioning process IoT Device - Manage Disenrollment Blocklist devices by using an individual enrollment entry Blocklist an X.509 intermediate or root CA certificate by using an enrollment group. Blocklist specific devices in an enrollment group IoT Hub - How to provision for multitenancy IoT Hub - Common Message Format System properties of D2C IoT hub messages System Properties of C2D IoT hub messages Message size Anti-spoofing properties IoT Hub - Message Routing Routing endpoints Routing queries IoT Hub built-in endpoint Reading from the Built-in endpoint Routing to multiple endpoints Custom endpoint Fallback route Non-telemetry events Latency IoT Hub - Monitoring and Troubleshooting IoT Hub - Message Routing Query Syntax Message properties based routing Message body based routing Device Twin based routing IoT Device Message processing options and constraints Message Enrichments IoT Hub quotas and throttling IoT Solution Business Integration Roles and responsibilities Downstream Messaging Integration with Event Grid IoT Hub Event Types and Schema IoT Hub is a managed service that acts as a central message hub for bi-directional communication between your IoT application and the devices it manages. Per-device authentication enables each device to connect securely to IoT hub and be managed securely by IoT hub. You can control user device access and per-device level connection. IoT Hub Device Provisioning Service automatically provisions devices to the correct IoT Hub when the device first boots up. Multiple authentication types: SAS token-based authentication. Individual X.509 certificate authentication for secure, standards-based authentication. X.509 CA authentication for simple, standards-based enrollment. IoT Hub has built-in routing and can setup automatic, rules-based message fan-out: Use message routing to control where your hub sends device telemetry. Can route messages to multiple endpoints at no extra cost. No-code routing rules instead of writing custom message dispatcher code. IoT Hub can integrate with other services:- Azure Event Grid to help your business to quickly react to critical events. Azure Logic Apps to automate business processes. Azure Machine Learning to add machine learning and AI models. Azure Stream Analytics to run real-time analytic computations on the data. IoT Hub can manage your devices:- Store, synchronize, and query device metadata and state information for all your devices. Set device state either per-device or based on some common characteristic. Automatically respond to a device-reported state change. Use Azure IoT device SDK libraries to build applications that run on your devices and interact with IoT Hub. There is a limit of 50 IoT hubs per subscription. You can request quota increases by contacting support. Provisioning is a two part process: The first part is establishing the initial connection between the device and the IoT solution by registering the device. The second part is applying the proper configuration to the device based on the requirements of the solution it was registered to. Secure attestation support for both X.509 and TPM-based identities. Multiple allocation policies to control how the DPS assigns devices to IoT hubs. Monitoring and diagnostic logging. Multi-hub support allows DPS to assign devices to more than one IoT hub across subscriptions. Cross-region support to assign devices in other regions. Zero-touch provisioning to an IoT solution without hardcoding IoT Hub connection. Load-balancing devices across multiple hubs. Connecting devices to a particular IoT solution depending on use case. Connecting a device to the IoT hub with the lowest latency. Reprovisioning based on a change in the device. Rolling the keys used by the device to connect to IoT Hub. To evaluate which IoT Hub tier is right for you solution, consider the following two questions: What features do I plan to use? How much data do I plan to move daily? This tier enables features for solutions that only need uni-directional communication from devices to the cloud. If your IoT solution is based around collecting data from devices and analyzing it centrally, then the basic tier is probably right for you. This tier of IoT Hubs enables features for solutions that want to make use of the bi-directional communication capabilities. If you would like to control IoT devices remotely or distribute some of your workloads onto the devices themselves, then you should consider the standard tier. Message traffic is measured for your IoT hub on a per-unit basis. When you create an IoT hub, you choose its tier and edition, and set the number of units available. You can purchase up to 200 units for the B1, B2, S1, or S2 edition, or up to 10 units for the B3 or S3 edition. Tier edition Sustained throughput Sustained send rate B1, S1 Up to 1111 KB/minute per unit (1.5 GB/day/unit) Average of 278 messages/minute per unit (400,000 messages/day per unit) B2, S2 Up to 16 MB/minute per unit (22.8 GB/day/unit) Average of 4,167 messages/minute per unit (6 million messages/day per unit) B3, S3 Up to 814 MB/minute per unit (1144.4 GB/day/unit) Average of 208,333 messages/minute per unit (300 million messages/day per unit) Partions can be used to reduce contentions that could occur when concurrently reading and writing to event streams. The partition limit is chosen when IoT hub is created. The maximum partition limit is 32 but most IoT hubs only need 4 partitions. The number of partitions is directly related to the number of concurrent readers you expect to have. The default value of four partitions should be used unless specified by the architect. An endpoint is a service that can retrieve data from other services. Examples of endpoint types: * Device-facing endpoints that enables devices to perform operations such as sending device-to-cloud messages and receiving cloud-to-device messages. * Service-facing management endpoints that enable back-end apps to perform operations such as device identity management and device twin management. * Service facing built-in endpoints for reading device-to-cloud messages. * Custom endpoints to receive device-to-cloud messages dispatched by a routing rule. Figure 1. Source Microsoft Learn The IoT hub endpoints: Resource provider. It exposes an Azure Resource Manager interface. This interface enables Azure subscription owners to create and delete IoT hubs, and to update IoT hub properties. Device identity management. A set of Https REST endpoints to manage device identities. Device identities are used for device authentication and access control. Device twin management. A set of Https REST endpoints to query and update device twins. Jobs management. Https REST endpoint to query and manage jobs. Device endpoints. For each device, a set of endpoints are exposed Send device-to-cloud messages. Receive cloud-to-device messages. Initiate file uploads - a device uses this endpoint to receive an Azure storage SAS URI from IoT Hub to upload a file. Retrieve and update device twin properties. Receive direct method requests. Service endpoints. Exposes a set of endpoints for your solution back end to communicate with your devices. With one exception, these endpoints are only exposed using the AMQP protocols. The method invocation endpoint is exposed over the Https protocol. Receive device-to-cloud messages. Send cloud-to-device messages and receive delivery acknowledgements. Receive file notifications. Direct method invocation. Receive operation monitoring events. These endpoints act as service endpoints and are used as sinks for message routes. Devices cannot write directly to these custom endpoints. The following services are supported as custom endpoints. * Azure Storage containers * Event Hubs * Service Bus Queues * Service Bus Topics There are three different ways for controlling access to IoT Hub: Azure AD - It provides identity-based authentication and fine-grained authorization with Azure RBAC. It supports only IoT hub service api’s. SAS - It lets you group permissions and grant them to applications using access keys and signed security tokens. Per-device security credentials - Each IoT Hub contains an identity registry. For each device in this registry, you can configure security credentials that grant DeviceConnect permissions scoped to the device’s endpoints. Use shared access policies for IoT hub-level access. Use the individual device credentials to scope access to that device only. Azure IoT hub grants access to endpoints by verifying a token against the shared access policies and identity registry security credentials. IoT Hub uses security tokens to authenticate devices and services to avoid sending keys on the wire. Security tokens are limited in time validity and scope. Some scenarios do require you to use security tokens directly. Example: The direct use of the MQTT, AMQP, or HTTPS surfaces. The implementation of the token service pattern. IoT hub also allows devices to authenticate with IoT Hub using X.509 certificates. You can verify using X.509 certificates by uploading either a certificate thumbprint or a certificate authority (CA) to Azure IoT Hub. Authentication using certificate thumbprints only verifies that the presented thumbprint matches the configured thumbprint. Authentication using certificate authority validates the certificate chain. Supported Certificates include: An existing X.509 certificate. A device may already have a certificate that it can then use to authenticate. Works with either thumbprint or CA authentication. CA-signed X.509 certificate. You can use a Certificate Authority signed certificate. Works with either thumbprint or CA authentication. A self generated and self-signed X.509 certificate. A device manufacturer or in-house deployer can generate these certificates and store the corresponding private key (and certificate) on the device. You can use tools such as OpenSSL and Windows SelfSignedCertificate utility for this purpose. Only works with thumbprint authentication. A device may either use an X.509 certificate or a security token for authentication, but not both. For Azure IoT, there are five stages within the device lifecycle: Plan: Enable operators to create a device metadata scheme that enables them to query for, and target a group of devices for bulk management operations. You can use the device twin to store this device metadata in the form of tags and properties. Provision: Securely provision new devices to IoT Hub and enable operators to immediately discover device capabilities. Configure: Facilitate bulk configuration changes and firmware updates to devices while maintaining both health and security. Monitor: Monitor overall device collection health, the status of ongoing operations, and alert operators to issues that might require attention. Retire: Replace or decommission devices after a failure, upgrade cycle, or at the end of the service lifetime. A device must have an entry in the IoT Hub identity registry before it can connect to an IoT Hub. The deviceID is case-sensitive. The identity registry is a REST-capable collection of device identity resources. IoT Hub creates a set of resources for every device in the identity registry such as the queue that contains in-flight cloud-to-device messages. Use the identity registry when you need to: Provision devices that connect to your IoT hub. Control per-device access to your hub’s device-facing endpoints. You can create module identities under a device identity. Each module identity can be configured with an independent connection to IoT hub. You can seperate access control permissions. You can create up to 20 module identites under a device identity. Identity registry exposes the following operations: Create device or module identity Update device or module identity Retreive device or module identity Delete device or module identity List up to 1000 identities Export device identities to Azure blob storage Import device identities from Azure blob storage You need to specify the Device ID and the authentication type when creating a new device. Device Twins are json documents managed by IoT Hub that store device state information associated with a physical device. This information includes metadata, configurations, and conditions. Azure IoT Hub maintains a device twin for each registered device. Device twins are implicity created and deleted when a device identity is created or deleted in IoT Hub. A device twin is a JSON document that includes: Tags. A solution back end can read from and write to. Tags are not visible to device apps. Desired properties. The solution back end can set desired properties, and the device app can read them. The device app can also receive notifications of changes in the desired properties. Reported properties. The device app can set reported properties, and the solution back end can read and query them. Device identity properties. The read-only properties from the corresponding device identity stored in the identity registry Figure 2. Source Microsoft Learn Sample JSON { \"deviceId\": \"devA\", \"etag\": \"AAAAAAAAAAc=\", \"status\": \"enabled\", \"statusReason\": \"provisioned\", \"statusUpdateTime\": \"0001-01-01T00:00:00\", \"connectionState\": \"connected\", \"lastActivityTime\": \"2015-02-30T16:24:48.789Z\", \"cloudToDeviceMessageCount\": 0, \"authenticationType\": \"sas\", \"x509Thumbprint\": { \"primaryThumbprint\": null, \"secondaryThumbprint\": null }, \"version\": 2, \"tags\": { \"$etag\": \"123\", \"deploymentLocation\": { \"building\": \"43\", \"floor\": \"1\" } }, \"properties\": { \"desired\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\" }, \"$metadata\": {...}, \"$version\": 1 }, \"reported\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\", \"status\": \"success\" }, \"batteryLevel\": 55, \"$metadata\": {...}, \"$version\": 4 } } } Use device twins to: Store device-specific metadata in the cloud. For example, the deployment location of a vending machine. Report current state information such as available capabilities and conditions from your device app. For example, a device is connected to your IoT hub over cellular or WiFi. Synchronize the state of long-running workflows between device app and back-end app. For example, when the solution back end specifies the new firmware version to install, and the device app reports the various stages of the update process. Query your device metadata, configuration, or state. Each module identity implicitly generates a module twin. Module twins are JSON documents that store module information including metadata, configurations, and conditions. SDKs enable you to create modules where each one opens an independent connection to IoT Hub. For example, if your vending machine has 3 different sensors controlled by different departments in your company, you can create a module for each sensor. This way, each department is only able to create jobs or direct methods for the sensor that they control, avoiding conflicts and user errors. Device monitoring is used to track the overall device collection health, the status of ongoing operations, and to alert operators to issues that might require their attention. Device twin desired and reported properties can be used to monitor a target condition, target content, or device metrics. The Target condition defines the scope of device twins to be updated. It is specified as a query on twin tags and/or reported properties. The Target content defines the desired properties to be added or updated in the targeted device twins. The content includes a path to the section of desired properties to be changed. The Metrics define the summary counts of various configuration states such as Success, In Progress, and Error. Use the IoT Hub identity registry for securely revoking device identities and credentials. You can disable devices by updating the status property of an identity in the identity registry. The disable feature is not available for modules. Protocol When you should use this protocol. MQTT MQTT over WebSocket Use with devices that have their own per-device credentials. AMQP AMQP over websocket Use on field gateways and cloud gateways to take advantage of connection multiplexing across devices. HTTPS Use for devices that support other protocols. Protocol Port MQTT 8883 MQTT over WebSockets 443 AMQP 5671 AMQP over WebSockets 443 HTTPS 443 There are two phases in the provisioning/deployment process for a device:- The manufacturing phase in which the device is created and prepared at the factory. The cloud setup phase in which the Device Provisioning Service is configured for automated provisioning. In this phase, the device is programmed with the provisioning service information, This enables it to call the provisioning service to get its connection info/IoT solution assignment when it is switched on. Also, in this phase, the manufacturer supplies the device deployer/operator with the identifying key information for the device. This identifying information could be an X.509 certificate or the public portion of a trusted platform module. These services are offered by many silicon manufacturers today. This phase is about configuring the cloud for proper automatic provisioning. There are two types of users involved A device operator - someone who knows how devices are intially set up. A solution operator - someonw who knows how devices are to be split among the IoT hubs. A one-time initial setup of the provisioning service must occur. It is done by the solution operator. The device operator then needs to enroll the device. The device operator takes the key identifying information from the manufacturer and adds it to the enrollment list. The Device Provisioning Service can only provision devices to IoT hubs that have been linked to it. Linking an IoT hub to an instance of the DPS gives the service read/write permissions to the IoT hub’s device registry with the link. A DPS can register a device ID and set the initial configuration in the device twin. Linked IoT hubs may be in any Azure region. You may link hubs in other subscriptions to your provisioning service. The service level setting that determines how DPS assigns devices to an IoT hub. There are there supported policies: Evenly weighted distribution. The default setting. Linked IoT hubs are equally likely to have devices provisioned to them. Lowest Latency. Devices are provisioned to an IoT hub with the lowest latency. Static Configuration via the enrollment list: specification of the desired IoT hub in the enrollment list takes priority over the service-level allocation policy. Custom (Use Azure Function): A custom allocation policy using custom code in an Azure function. An enrollment is the record of devices that may register through autoprovisioning. Two types of enrollments are supported: Group enrollment: Recommended for a large number of devices that share a desired initial configuration, or for devices all going to the same tenant. Individual enrollment: Recommended for devices that require unique initial configurations, or for devices that can only authenticate using SAS tokens via TPM attestation. Enrollment record contains information about the device or group of devices: The attestation mechanism used by the device. The optional intial desired configuration. Desired IoT hub. The desired device ID. A registration is the record of a device successfully registering/provisioning to an IoT Hub via the Device Provisioning Service. Registration records are created automatically; they can be deleted, but they cannot be updated. Operations are the billing unit of the Device Provisioning Service. One operation is the successful completion of one instruction to the service. Operations include device registrations and re-registrations; service-side changes such as adding enrollment list entries, and updating enrollment list entries. The manufacturer is responsible for encoding the device identity info, and the Device Provisioning Service registration URL. The ID scope is assigned to a DPS when it is created by the user. It is used to uniquely identify the specific provisioning service the device will register through. The ID scope is generated by the service and is immutable, which guarantees uniquess. The registration ID uniquely identifies a device in the Device Provisioning Service. The registration ID must be unique in the provisioning service ID scope. Each device must have a registration ID. The registration ID is alphanumeric, case insensitive, and may contain special characters including colon, period, underscore, and hyphen. When TPM attestation is used, the registration ID is provided by the TPM itself. When X.509-based attestation is used, the registration ID is provided by the subject name of the certificate. The device ID is the ID as it appears in IoT Hub. The desired ID may be set in the enrollment entry. Setting the desired ID is only supported in individual enrollments. If no desired device ID is specified in the enrollment list, the registration ID is used as the device ID when registering the device. An attestation mechanism is a method used for confirming a device’s identity. IoT Hub uses \"authentication scheme\" for a similar concept in that service. The DPS supports the following forms of attestation: X.509 certificates based on the standard X.509 certificate authentication flow. Trusted Platform Module (TPM) based on a nonce challenge, using the TPM standard for keys to present a signed Shared Access Signature (SAS) token. TPM attestation does not require a physical TPM on the device, but the service expects to attest using the endorsement key per the TPM spec. Symmetric Key based on shared access signature (SAS) security tokens, which include a hashed signature and an embedded expiration. A hardware Security Module (HSM) is recommended for secure, hardware-based storage of device secrets, and is the most secure form of secret storage. Both X.509 certificates and SAS tokens can be stored in HSM. It is an entry for a single device that may register. Individual enrollments may use X.509 certificates or SAS tokens as attestation mechanisms. Individual enrollments may have the desired IoT hub device ID specified. Individual enrollments are recommended for devices with unique initial configurations, or for devices that can only use SAS tokens via TPM or virtual TPM as the attestation mechanism. An enrollment group is a group of devices that share a specific attestation mechanism. Enrollment groups support both X.509 and symmetric keys. All devices in the X.509 enrollment group present X.509 certificates that have been signed by the same root or intermediate Certificate Authority(CA). Each device in the symmetric key enrollment group present SAS tokens derived from the group symmetric key. The enrollment group name and certificate name must be alphanumeric, lowercase, and may contain hyphens. X.509 certificates are typically arranged in a certificate chain of trust in which each certificate in the chain is signed by the private key of the next higher certificate, and so on, terminating in a self-signed root certificate. This arrangement establishes a delegated chain of trust from the root certificate generated by a trusted root certificate authority (CA) down through each intermediate CA to the end-entity \"leaf\" certificate installed on the device. Often the certificate chain represents some logical or physical heirarchy associated with devices. For example, a manufacturer may: Issue a self-signed root CA certificate. Use the root certificate to generate a unique intermediate CA certificate for each factory. Use each factory’s certificate to generate a unique intermediate CA certificate for each production line in the plant. And finally, use the production line certificate to generate a unique device (end-entity) certificate for each device manufactured on the line. A root certificate is a self-signed X.509 certificate representing a certificate authority (CA). It is the terminus, or trust anchor, of the certificate chain. Root certificates can be self-issued by an organization or purchased from a root certificate authority. The root certificate can also be referred to as a root CA certificate. An intermediate certificate is an X.509 certificate, which has been signed by the root certificate (or by another intermediate certificate with the root certificate in its chain). The last intermediate certificate in a chain is used to sign the leaf certificate. The leaf certificate, or end-entity certificate, identifies the certificate holder. It has the root certificate in its certificate chain and zero or more intermediate certificates. The leaf certificate is not used to to sign any other certificates. It uniquely identifies the device to the provisioning service and is sometimes referred to as the device certificate. During authentication, the device uses the private key associated with its certificate to respond to a proof of possession challenge from the service. Leaf certificates used with an Individual enrollment entry have a requirement that the Subject Name must be set to the registration ID of the Individual Enrollment entry. Leaf certificates used with an Enrollment group entry should have the Subject Name set to the desired device ID, which will be shown in the Registration Records for the authenticated device in the enrollment group. The provisioning service exposes two types of enrollment entry that you can use to control access for devices that use the X.509 attestation mechanism: Individual enrollment entries are configured with the device certificate associated with a specific device. These entries control enrollments for specific devices. Enrollment group entries are associated with a specific intermediate or root CA certificate. These entries control enrollments for all devices that have that intermediate or root certificate in their certificate chain. When a device connects to a provisioning service, if an individual enrollment for the device exists, the provisioning service applies that entry. If there is no individual enrollment for the device and an enrollment group for the first intermediate certificate in the device’s certificate chain exists, the service applies that entry, and so on, up the chain to the root. The service applies the first applicable entry such that: If the first enrollment entry found is enabled, the service provisions the device. If the first enrollment entry found is disabled, the service does not provision the device. If no enrollment entry is found for any of the certificates in the device’s certificate chain, the service does not provision the device. This mechanism and the hierarchical structure of certificate chains provides powerful flexibility in how you can control access for both individual devices and groups of devices. For example, imagine five devices with the following certificate: Device 1: root certificate → certificate A → device 1 certificate Device 2: root certificate → certificate A → device 2 certificate Device 3: root certificate → certificate A → device 3 certificate Device 4: root certificate → certificate B → device 4 certificate Device 5: root certificate → certificate B → device 5 certificate Initially, you can create a single enabled group enrollment entry for the root certificate to enable access for all five devices. If certificate B later becomes compromised, you can create a disabled enrollment group entry for certificate B to prevent Device 4 and Device 5 from enrolling. If still later Device 3 becomes compromised, you can create a disabled individual enrollment entry for its certificate. This revokes access for Device 3, but still allows Device 1 and Device 2 to enroll. The hardware security module, or HSM, is used for secure, hardware based storage of device secrets, and is the most secure form of secret storage. Both X.509 certificates and SAS tokens can be stored in the HSM. TPM refers to a standard for securely storing keys used to authenticate the platform. TPM can also refer to the I/O interface used to interact with the modules implementing the standard. TPMs can exist as discrete hardware, integrated hardware, firmware-based, or software-based. Device Provisioning service only supports TPM 2.0. TPM attestation is based on a nonce challenge, which uses the endorsement and storage root keys to present a signed Shared Access Signature (SAS) token. The endorsement key is an asymmetric key contained inside the TPM. It is internally generated or injected at manufacture time. It is unique for every TPM. It cannot be changed or removed. The private key portion of the endorsement key is never released outside of the TPM. The public portion of the endorsement key is used to recognize a genuine TPM. The storage root key is stored in the TPM. It is used to protect the TPM keys created by applications. These cannot be used without the TPM. The storage root key is generated when you take ownership of the TPM. When you clear the TPM so a new user can take ownership, a new storage root key is generated. TPM attestation uses endorsement key (EK) as the secure root of trust. The EK is unique to the TPM. Changing the EK changes the device into a new one. TPMs have another type of key called the storage root key (SRK). An SRK may be generated by the TPMs owner after taking ownership. Taking ownership is a way of saying \"Someone sets a password on the HSM\". If a TPM device is sold to a new owner, the new owner can take ownership of the TPM to generate a new SRK. The SRK provides a sandbox for the owner to store their keys and provide access revocability if the device or TPM is sold. Once a device has been setup, it will have both an SRK and an EK available for use. TPM ownership could mean many things, follow the instructions relevant to your system to take ownership. Figure 3. Source Microsoft Learn The public part of the EK is used by the DPS for device enrollment. The device vendor can read the EK_pub and upload it to the provisioning service. The device will be recognized when it connects to the DPS. The DPS does not check the SRK or owner. Clearing the TPM erases customer data and not the EK. The device will still be recognized by the DPS when it connects to provision. The device connects to the DPS and requests to provision. It provides the service its registration ID, an ID scope, and the EK_pub and SRK_pub from the TPM. The service passes the encrypted nonce back to the device. The device decrypts the encrypted nonce and uses that to sign a SAS token to connect again and finish provisioning. Figure 4. Source Microsoft Learn The device takes the nonce and uses the private portion of the EK and SRK to decrypt the nonce into the TPM. The order of nonce encryption delegates trust from the EK, which is immutable, to the SRK, which can change if a new owner takes ownership of the TPM. Figure 5. Source Microsoft Learn The device then signs a SAS token using the decrypted nonce. It reestablishes connection to the DPS using the signed SAS token. With the Nonce challenge completed, the service allows the device to provision. Figure 6. Source Microsoft Learn Symmetric key attestation is a simple approach to authenticating a device with DPS. Can be used if you do not have strict security requirements. It is useful for legacy devices with limited security functionality. The DPS creates new symmetric keys with a default length of 32 bytes when new enrollments are saved with the Auto generate keys option enabled. You can also specify your own symmetric keys. Your keys must have a key length between 16 bytes and 64 bytes. The keys must be in valid Base64 format. SAS tokens have the following form:- SharedAccessSignature sig={signature}&se={expiry}&skn={policyName}&sr={URL-encoded-resourceURI} Signature is the HMAC-SHA256 signature string produced by using the symmetric key or the enrollment group key. The key must be decoded from base64 before being used to perform the sha256 computation. The signature result must be url encoded. resourceURI is the uri registration endpoint that can be accessed by this token. It starts with the scope ID for the DPS. for example, {scope ID}/registrations/{registration ID} expiry is the number of seconds since Jan 1970 url-encoded-resourceURI is the lower case URL-encoding of the lower case resource URI. policyName is the name of the shared access policy to which this token refers. The policy name used when provisioning with symmetric key attestation is registration. The DPS automates many of the manual steps that are traditionally involved in provisioning devices. Figure 7. Source Microsoft Learn Device manufacturer adds the device registration information to the enrollment list in the Azure portal. Device contacts the DPS set/embedded at the factory. The device passes identifying information to the DPS to prove its identity. The DPS validates the identity of the device by validating the registration ID and key against the enrollment list entry using either a nonce challenge (TPM) or X.509 certificates. The DPS registers the device with an IoT Hub and populates the device’s twin state. The IoT hub returns the deviceID information to the provisioning service. The DPS returns the IoT hub connection information to the device. The device can now start sending data directly to the IoT hub. The device connects to IoT hub. The device gets the desired state from its device twin in IoT hub. Figure 8. Source Microsoft Learn Encode identity and registration URL - the manufacturer is responsible for encoding the device identity info, and the DPS registration URL Provide device identity - the manufacturer is responsible for communicating it to the operator or directly enrolling it to the DPS. Configure autoprovisioning - a one-time configuration of the Azure IoT Hub and IoT Hub Device Provisioning Service instances, establishing them and creating linkage between them. Enroll device identity - Identity is based on the attestation mechanism the device is designed to use, which allows the provisioning service to attest to the device’s authenticity during registration Build/Deploy registration software. - The Developer is responsible for building and deploying the registration software to the device, using the appropriate SDK. Bootup and register. - Initiated upon boot up by registration software, which is built using a Device Provisioning Service client SDK appropriate for the device and attestation mechanism. Upon successful registration, the device is provided with its IoT Hub unique device ID and connection information, allowing it to pull its initial configuration and begin the telemetry process. Latency As a device moves between locations, network latency can be improved by having the device migrated closed to the IoT hub. Multi-tenancy A device may be reassigned to a new customer within an IoT solution. This new customer may use a different IoT hub. Solution change A device could be moved into a new or updated IoT solution. This may require an IoT hub change. Quarantine A device that is malfunctioning, compromised, or out-of-date may be reassigned to an IoT hub that can only update and get back in compliance. Once the device is functioning properly, it’s then migrated back to its main hub. Device state data is composed of the device twin and device capabilities. This data is stored in the Device Provisioning Service instance and the IoT hub that a device is assigned to When a device is initially provisioned with a DPS instance, the following steps are done: The device sends a provisioning request to a DPS instance. The service instance authenticates the device identity based on an enrollment entry. It then creates the initial configuration of the device state data. The service instance assigns the device to an IoT hub based on the enrollment configuration. It then returns that IoT hub assignment to the device. The provisioning service instance gives a copy of any intial device state data to the assigned IoT hub. The device connects to the assigned IoT hub and begins operations. Over time, the device state data on the IoT hub may be updated by device operations and back-end operations. The initial device state information stored in the DPS instance stays untouched. This untouched device state data is the initial configuration. As a device moves between IoT hubs, it may also be necessary to migrate device state updated on the previous IoT hub over to the new IoT hub. This migration is supported by reprovisioning policies in the DPS. A device usually supports a method to manually trigger provisioning on demand. The reprovisioning policy on an enrollment entry determines how the DPS handles provisioning requests. The policy also determines whether device state data should be migrated during reprovisioning. The same policies are available for individual enrollments and enrollment groups: Reprovision and migrate data: This policy is the default for new enrollment entries. This policy takes action when devices associated with the enrollment entry submint a new request (1). The updated device state information from that initial IoT hub will be migrated over to the new IoT hub (2). During migration, the device’s status will be reported as Assigning. Reprovision and reset to initial config: This policy takes action when devices associated with the enrollment entry submit a new provisioning request (1). The initial configuration data that the provisioning service instance received when the device was provisioned is provided to the new IoT hub (2). During migration, the device’s status will be reported as Assigning. This policy is often used for a factory reset without changing IoT hubs. Never reprovision: The device is never reassigned to a different hub. This policy is provided for managing backwards compatibility. Service Commands Description az iot dps create Create an Azure IoT Hub DPS instance. az iot dps delete Delete an Azure IoT Hub DPS instance. az iot dps list List Azure IoT Hub Device Provisioning Service instances. az iot dps show Get the details of an Azure IoT Hub Device Provisioning instance. az iot dps update Update an Azure IoT Hub Device Provisioning Service instance. Access Policy Commands Description az iot dps access-policy Manage Azure IoT Hub DPS access policies. az iot dps access-policy create Create a new shared access policy in an Azure IoT Hub DPS instance. az iot dps access-policy delete Delete a shared access policies in an Azure IoT Hub DPS instance. az iot dps access-policy list List all shared access policies in an Azure IoT Hub DPS. az iot dps access-policy show Show details of a shared access policy in an Azure IoT Gub DPS instance. az iot dps access-policy update Update a shared access policy in an Azure IoT Hub DPS instance. az iot dps certificate Manage Azure IoT Hub DPS certificates. az iot dps certificate create Create/upload an Azure IoT Hub DPS certificate. az iot dps certificate delete Delete an Azure IoT Hub DPS certificate. az iot dps certificate generate-verification-code Generate a verification code for an Azure IoT Hub DPS certificate. az iot dps certificate list List all certificates contained within an Azure IoT Gub dps az iot dps certificate show Show information about a particular Azure IoT Hub DPS certificate. az iot dps certificate update Update an Azure IoT Hub DPS certificate az iot dps certificate verify Verify an Azure IoT Hub DPS certificate. Linked Hub Commands Descriptions az iot dps linked-hub Manage Azure IoT Hub DPS linked IoT hubs. az iot dps linked-hub create Create a linked IoT hub in an Azure IoT Hub DPS instance. az iot dps linked-hub delete Update (delete) a linked IoT hub in an Azure IoT Hub DPS instance. az iot dps linked-hub list List all linked IoT hubs in an Azure IoT DPS instance. az iot dps linked-hub show Show details of a linked IoT hub in an Azure IoT Hub DPS instance. az iot dps linked-hub update Update a linked IoT hub in an Azure IoT Hub DPS instance. The Azure Provisioning device and service SDKs for C# can be downloaded from NuGet as follows: Provisioning Device Client SDK Provisioning Service Client SDK This SDK supports the following protocols: MQTT, MQTT-WS, AMQP, AMQP-WS, and HTTPS. TPM Individual Enrollment: This SDK supports connecting your device to the DPS via individual enrollment using TPM. TPM over MQTT (and MQTT-WS) is currrently not supported by the DPS X.509 Indivicual Enrollment: This SDK supports connecting your device to the DPS via individual enrollment using X.509 root certificate. X.509 Enrollment Group This SDK supports connecting your device to the DPS via individual enrollment using X.509 leaf certificate. WebSocket support for MQTT/AMQP is limited to .NET Framework 4.x This SDK can be used to programmatically enroll devices. CRUD Operation with TPM Individual Enrollment Programmatically manage device enrollment using TPM with the service SDK. Bulk CRUD Operation with TPM Individual Enrollment Programmatically manage device enrollment using TPM with the service SDK. CRUD Operation with X.509 Individual Enrollment Programmatically manage device enrollment using X.509 individual enrollment with the service SDK. CRUD Operation with X.509 Group Enrollment Programmatically manage device enrollment using X.509 group enrollment with the service SDK. Query enrollments Programmatically query registration states with the service SDK. In production, TPM is located on the device, either as discrete hardware, integrated hardware, or firmware-based. In testing phase, a software-based TPM simulator is provided to developers. This simulator is only available on the Windows platform for now. Clone the Github repository: git clone https://github.com/Azure/azure-iot-sdk-java.git. Navigate to the TPM simulator folder under azure-iot-sdk-java/provisioning/provisioning-tool/tpm-simulator/. Run Simulator.exe prior to running any client application for provisioning device. Let the simulator run in the background throughout the provisioning process to obtain registration ID and Endorsement Key. Both values are only valid for one instance of the run. For production environment, purchase an X.509 CA certificate from a public root certificate authority. For testing environment, you can generate an X.509 root certificate or X.509 certificate chain using: OpenSSL: You can use scripts for certificate generation: Node.js Powershell or Bash Device Identity Composition Engine (DICE) Enulator: DICE can be used for cryptographic device identity and attestation based on TLS protocol and X.509 client certificates. https://learn.microsoft.com/en-us/azure/iot-hub/tutorial-x509-openssl The DPS uses permissions to grant access to each endpoint. Permissions limit the access to a service instance based on functionality. For example, a backend app must include a token that contains security credentials along with every message it sends to the service. You can grant permissions in the following ways: Shared access authorization policies. Shared access policies can grant any combination of permissions. A newly created provisioning service has the provisioningserviceowner policy set as the default policy. It is a policy with all permissions. DPS grants access to endpoints by verifying a token against the shared access policies. Security credentials, such as symmetric keys, are never sent over the wire. The DPS uses security tokens to authenticate services to avoid sending keys on the wire. Security tokens are limited in time validity and scope. DPS SDKs automatically generate tokens without requiring any special configuration. Use security tokens to grant time-bounded access for services to specific functionality in IoT Device Provisioning Service. To get authorization to connect to the provisioning service, services must send security tokens signed with either a shared access or symmetric key. A token signed with a shared access key grants access to all the functionality associated with the shared access policy permissions. The security token has the following format: SharedAccessSignature sig={signature}&se={expiry}&skn={policyName}&sr={URL-encoded-resourceURI} Service components can only generate security tokens using shared access policies granting the appropriate permissions. Endpoint Functionality {your-service}.azure-devices-provisioning.net/enrollments Provides device enrollment operations with the Device Provisioning Service. {your-service}.azure-devices-provisioning.net/enrollmentGroups Provides operations for managing device enrollment groups. {your-service}.azure-devices-provisioning.net/registrations/{id} Provides operations for retrieving and managing the status of device registrations. As an example, a service generated using a pre-created shared access policy named enrollmentread would create a token with the following parameters: resource URI: {mydps}.azure-devices-provisioning.net, signing key: one of the keys of the enrollmentread policy, policy name: enrollmentread, an expiration time The result, which would grant access to read all enrollment records, would be: SharedAccessSignature sr=mydps.azure-devices- provisioning.net&sig=JdyscqTpXdEJs49elIUCcohw2DlFDR3zfH5KqGJo4r4%3D&se=1456973447&skn=enrollmentread Permission Notes ServiceConfig Grants access to change the service configurations. This permissions is used by backend cloud services. EnrollmentRead Grants read access to the device enrollments and enrollment groups. This permission is used by backend cloud services. EnrollmentWrite Grants write access to the device enrollments and enrollment groups. This permission is used by backend cloud services. RegistrationStatusRead Grants read access to the device registration status. This permission is used by backend cloud services. RegistrationStatusWrite Grants delete access to the device registration status. This permission is used by backend cloud services. A verified X.509 Certificate Authority (CA) certificate is a CA certificate that has been uploaded and registered to your provisioning service and has gone through proof-of-possession with the service. Get a unique verification code generated by the provisioning service for your X.509 CA certificate. You can do this from the Azure portal. Create an X.509 verification certificate with the verification code as its subject and sign the certificate with the private key associated with your X.509 certificate. Upload the signed verification certificate to the service. The service validates the verification certificate using the public portion of the CA certificate to be verified, thus proving that you are in possession of the CA certificate’s private key. Verifying certificate ownership ensures the uploader of the certificate is in possession of the certificate’s private key. Verification prevents a malicious actor sniffing your traffic from extracting an intermediate certificate and using that certificate to create an enrollment group in their own provisioning service, effectively hijacking your devices. By proving ownership of the root or an intermediate certificate in a certificate chain, you are proving that you have permission to generate leaf certificates for the devices that will be registering as part of that enrollment group. For this reason, the root or intermediate certificate configured in an enrollment group must either be a verified certificate or must roll up to a verified certificate in the certificate chain a device presents when it authenticates with the service. In the Azure portal, navigate to your provisioning service and open Certificates from the left-hand menu. Select Add to add a new certificate. Enter a friendly display name for your certificate. Browse to your .cer or .pem file that represents the public part of your X.509 certificate. Select Upload. Once you get a notification that your certificate is successfully uploaded, Select Save. Select the certificate that you added in the previous step. In Certificate Details, select Generate Verification code. The provisioning service creates a verification code that you can use to validate the certificate ownership. Copy the code to your clipboard. You need to sign the Verification Code with the private key associated with your X.509 CA certificate, which generates a signature. This process is known as Proof of possession and results in a signed verification certificate. The Azure IoT Hub C SDK provides Powershell (Windows) and Bash (Linux) scripts to help you create CA and leaf certificates for development and to perform proof-of-possession using a verification code. You download the files relevant to your system to a working folder and follow the instructions in the Managing CA certificates readme to perform proof-of-possession on a CA certificate. The Azure IoT Hub C# SDK contains the Group Certificate Verification Sample, which you can use to do proof-of-possession. The Powershell and Bash scripts provided in the documentation and SDKs rely on OpenSSL. You may also use OpenSSL or other third-party tools to help you do proof-of-possession. Upload the resulting signature as a verification certificate to your provisioning service in the portal. In Certificate Details on the Azure portal, use the File Explorer icon next to the Verification Certificate .pem or .cer file field to upload the signed verification certificate from your system. Once the certificate is successfully uploaded, select Verify. The STATUS of your certificate changes to Verified in the Certificate Explorer list. Select Refresh if it does not update automatically. During the lifecycle of your IoT solution, you will need to roll certificates. It could be because of a security breach or certificate expirations. Rolling device certificates will involve updating the certificate stored on the device and the IoT hub. The device can then reprovision itself with the IoT hub using normal autoprovisioning with the DPS. Certificates on a device should always be stored in a safe place like a HSM. If you are managing your own device certificates, make sure both old and new leaf certificates have the same Common Name (CN). By having the same CN, the device can reprovision itself without creating a duplicate registration record. https://learn.microsoft.com/en-us/azure/iot-dps/how-to-roll-certificates You may find it necessary to deprovision devices that were previously autoprovisioned through the DPS. For example, a device may be sold or moved to a different IoT hub, or it may be lost, stolen, or otherwise compromised. Deprovisioning a device involves two steps: Disenroll the device from your provisioning service, to prevent future autoprovisioning. To learn how to disenroll a device, see https://learn.microsoft.com/en-us/azure/iot-dps/how-to-revoke-device-access-portal To learn how to disenroll a device programmatically using one of the provisioning SDKs, see https://learn.microsoft.com/en-us/azure/iot-dps/quick-enroll-device-x509?pivots=programming-language-csharp Deregister the device from your IoT Hub, to prevent future communications and data transfer. The exact steps you take to deprovision a device depends on its attestation mechanism and its applicable enrollment entry with your provisioning service. Deprovisioning enrollment groups requires you to consider two scenarios: To deprovision all of the devices that have been provisioned through an enrollment group: Disable the enrollment group to blocklist its signing certificate. Use the list of provisioned devices for that enrollment group to disable or delete each device from the identity registry of its respective IoT hub After disabling or deleting all devices from their respective IoT hubs, you can optionally delete the enrollment group. Be aware, though, that, if you delete the enrollment group and there is an enabled enrollment group for a signing certificate higher up in the certificate chain of one or more of the devices, those devices can re-enroll. To deprovision a single device from an enrollment group: Create a disabled individual enrollment for its leaf (device) certificate. This revokes access to the provisioning service for that device while still permitting access for other devices that have the enrollment group’s signing certificate in their chain. Do not delete the disabled individual enrollment for the device. Doing so will allow the device to re-enroll through the enrollment group. Use the list of provisioned devices for that enrollment group to find the IoT hub that the device was provisioned to and disable or delete it from theat hub’s identity registry. Enrollment in the DPS enables a device to be autoprovisioned. A provisioned device is one that has been registered with IoT Hub. This allows it to receive its initial device twin state and begin reporting telemetry data. Individual enrollments apply to a single device. It can use either X.509 certificates or SAS tokens as the attestation mechanism. Devices that use SAS tokens as their attestation mechanism can be provisioned only through an individual enrollment. To blocklist a device that has an individual enrollment, you can either disable or delete its enrollment entry. To temporarily blocklist the device by disabling its enrollment entry: Sign in to the Azure portal and select All resources from the left menu. In the list of resources, select the provisioning service that you want to blocklist your device from. In your provisioning service, select Manage enrollments, and then select the Individual Enrollments tab. Select the enrollment entry for the device that you want to blocklist. On your enrollment page, scroll to the bottom, and select Disable for the Enable entry switch, and then select Save. To permanently blocklist the device by deleting its enrollment entry: Sign in to the Azure portal and select All resources from the left menu. In the list of resources, select the provisioning service that you want to blocklist your device from. In your provisioning service, select Manage enrollments, and then select the Individual Enrollments tab. Select the check box next to the enrollment entry for the device that you want to blocklist. Select Delete at the top of the window, and then select Yes to confirm that you want to remove the enrollment. After you finish the procedure, you should see your entry removed from the list of individual enrollments. X.509 certificates are typically arranged in a certificate chain of trust. If a certificate at any stage in a chain becomes compromised, trust is broken. The certificate must be blocklisted to prevent Device Provisioning Service from provisioning devices downstream in any chain that contains that certificate. An enrollment group is an entry for devices that share a common attestation mechanism of X.509 certificates signed by the same intermediate or root CA. The enrollment group entry is configured with the X.509 certificate associated with the intermediate or root CA. The entry is also configured with any configuration values, such as twin state and IoT hub connection, that are shared by devices with that certificate in their certificate chain. To blocklist the certificate, you can either disable or delete its enrollment group. Devices that implement the X.509 attestation mechanism use the device’s certificate chain and private key to authenticate. When a device connects and authenticates with DPS, the service first looks for an individual enrollment that matches the device’s credentials. The service then searches enrollment groups to determine whether the device can be provisioned. If the service finds a disabled individual enrollment for the device, it prevents the device from connecting. The service prevents the connection even if an enabled enrollment group for an intermediate or root CA in the device’s certificate chain exists. The allocation policies defined by the provisioning service support various allocation scenarios. Geolocation/GeoLatency: This policy causes the DPS to evaluate device latency and determine the closest IoT hub out of the group of IoT hubs. Multi-tenancy: The solution may require all devices for a particular tenant to communicate with a specific group of IoT hubs. Provisioning devices for the multitenant scenario across regions, involves the following: Two (or more) regional IoT hubs. An enrollment group that uses a multitenant enrollment and specifies assigning devices based on lowest latency. Multiple devices provisioned in each region. With this configuration in place, you will see that devices in each region are provisioned to the same tenant in the closest region. To support seamleass interoperability across protocols, IoT Hub defines a common message format for all device-facing protocols. This message format is used for both device-to-cloud and cloud-to-device messages. IoT Hub implements device-to-cloud messaging using a streaming messaging pattern. IoT Hub’s device-to-cloud messages are more like Event Hubs events than Service Bus messages in that there is a high volume of events passing through the service that can be read by multiple readers. An IoT Hub message consists of: A predetermined set of system properties as listed below. A set of application properties. A dictionary of string properties that the application can define and access, without needing to deserialize the message body. IoT Hub never modifies these properties. An opaque binary body. Property name and values can only contain ASCII alphanumeric characters. {'!', '#', '$', '%, '&', ''', '*', '+', '-', '.', '^', '_', '’, '|', '~'} are also allowed. Device-to-cloud messaging with IoT Hub has the following characteristics: Device-to-cloud messages are durable and retained in an IoT Hub’s default messages/events endpoint for up to seven days. Device-to-cloud messages can be at most 256 KB, and can be grouped in batches to optimize sends. Batches can be at most 256 KB. IoT Hub does not allow arbitrary partitioning. Device-to-cloud messages are partitioned based on their originating deviceID. IoT Hub enables per-device authentication and access control. You can stamp messages with information that goes into the application properties. message-id A user settable identifier for the message used for request-reply patterns. A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters. Other characters allowed: ` {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}` It is user settable. The keyword for routing query is messageId. iothub-enqueuedtime Date and time the Device-to-Cloud message was received by IoT Hub. It is not user settable. The keyword for routing query is enqueuedTime. user-id An ID used to specify the origin of messages. When messages are generated by IoT Hub, it is set to {iot hub name}. It is user settable. The keyword for routing query is userId. iothub-connection-device-id An ID set by IoT Hub on device-to-cloud messages. It contains the deviceId of the device that sent the message. It is not user settable. The keyword for routing query is connectionDeviceId. iothub-connection-module-id And ID set by IoT Hub on device-to-cloud messages. It contains the moduleId of the device that sent the message. It is not user settable. The keyword for routing query is connectionModuleId. iothub-connection-auth-generation-id An ID set by IoT Hub on device-to-cloud messages. It contains the connectionDeviceGenerationId of the device that sent the message. It is not user settable. The keyword for routing query is connectionDeviceGenerationId. iothub-connection-auth-method An authentication method set by IoT Hub on device-to-cloud messages. This property contains information about the authentication method used to authenticate the device sending the message. It is not user settable. The keyword for routing query is connectionAuthMethod. dt-dataschema This value is set by IoT hub on device-to-cloud messages. It contains the device model ID set in the device connection. It is not user settable. The keyword for routing query is $dt-dataschema. dt-subject The name of the component that is sending the device-to-cloud messages. It is user settable. The keyword for routing query is $dt-subject. message-id A user settable identifier for the message used for request-reply patterns. A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters. Other characters allowed: ` {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}` It is user settable. sequence-number A number (unique per device-queue) assigned by IoT hub to each cloud-to-device message. It is not user settable. to A destination specified in Cloud-to-Device messages. It is not user settable. absolute expiry time Date and time of message expiration It is user settable. correlation-id A string property in a response message that typically contains the MessageId of the request, in request-reply patterns. It is user settable. user-id An ID used to specify the origin of messages. When messages are generated by IoT Hub, it is set to {iot hub name} It is use settable. iothub-ack A feedback message generator. This property is used in cloud-to-device messages to request IoT Hub to generate feedback messages as a result of the consumption of the message by the device. Possible values: none(default) no feedback message is generated. positive receive a feedback message if the message was completed. negative receive a feedback message if the message expired without being completed by the device. full both positive and negative. IoT Hub measures message size in a protocol-agnostic way, considering only the actual payload. The size in bytes is calculated as the sum of the following values: The body size in bytes. The size in bytes of all the values of the message system properties. The size in bytes of all user property names and values. Property names and values are limited to ASCII characters, so the length of the strings equals the size in bytes. To avoid device spoofing in device-to-cloud messages, IoT Hub stamps all messages with the following properties: iothub-connection-device-id iothub-connection-auth-generation-id iothub-connection-auth-method The first two contain the deviceId and generationId of the originating device (device identity properties). The iothub-connection-auth-method property contains a json serialized object:- { \"scope\": \"{ hub | device }\", \"type\": \"{ symkey | sas | x509 }\", \"issuer\": \"iothub\" } IoT Hub Message Routing enables users to rout device-to-cloud messages to service-facing endpoints. Routing also provides a querying capability to filter the data before routing it to the endpoints. An IoT hub has a default built-in messaging endpoint (messages/events). Custom endpoints can be configured that link IoT hub to other services in your subscription. IoT Hub currently supports the following custom endpoints: Azure Storage containers Event Hubs Service Bus Queues Service Bus Topics There are two storage services IoT hub can route messages to: Azure Blob Storage and Azure Data Lake Storage Gen2. Both of these use blobs for their storage. Service Bus Queues and Service Bus Topics that have Sessions or Duplicate Detection enabled are not supported as custom endpoints. A single message may match the condition on multiple routing queries. The IoT hub delivers the message to the endpoint associated with each matched query. IoT hub automatically deduplicates message delivery. So if a message matches multiple queries that have the same destination, it is only written once to that destination. When you route message data to custom endpoints, messages are only delivered to the built-in endpoint if they do not match any query. To deliver messages to both the built-in endpoint and to a custom endpoint, add a route that sends messages to the built-in events endpoint. Each routing query you configure has the following properties: Name The unique name that identifies the query. Source The origin of the data stream to be acted upon. For example, device telemetry. Condition The query expression for the routing query that is run against the following to determine if it is a match for the endpoint: message application properties system properties message body device twin tags device twin properties Endpoint The name of the endpoint where IoT hub sends messages that match the query. We recommend that you choose an endpoint in the same region as your IoT hub. By default, messages are routed to the built-in service-facing endpoint which is compatible with Event Hubs. This endpoint is currently only exposed using the AMQP protocol on port 5671 and AMQP over WebSockets on port 443. An IoT hub exposes the following properties to enable you to control the built-in endpoint. Partition count Set this property at creation to define the number of partitions for device-to-cloud event ingestion. Retention time This property specifies how long in days messages are retained by IoT Hub. The default is one day, but it can be increased to seven days. IoT Hub enables you to manage consumer groups on the built-in device-to-cloud receive endpoint. You can have up to 20 consumer groups for each IoT Hub. If you are using message routing and the fallback route is enabled, all messages that do not match a query on any route go to the built-in endpoint. If you disable this fallback route, messages that don’t match any query are dropped. Retention time can modified programmatically or through the Azure portal. IoT Hub exposes the messages/events built-in endpoint for your back-end services to read the device-to-cloud messages. This endpoint is Event Hubs-compatible, which enables you to use any of the mechanisms the Event Hubs service supports for reading messages. For services that are aware of IoT Hub, you can use IoT hub service connection string to connect to the built-in endpoint. For services that are not aware of IoT Hub, you need an Event Hubs-compatible endpoint and Event Hubs-compatible name. You can retrieve these values from IoT hub service in the Azure portal by opening the Built-in endpoints blade. You can use any shared access policy that has the ServiceConnect permissions to connect to the specified Event Hubs. The following Azure products are aware of IoT Hub and you can easily create a service connection to them: Azure Functions. Azure Stream Analytics. Time Series Insights. Apache Storm spout. Apache Spark integration. Azure Databricks. Message routing can be used for: Sending device telemetry messages and events, namely device lifecycle events and device twin change events, to the built-in-endpoint and custom endpoints. Filtering data before routing it to various endpoints by applying queries. Message routing allows you to query on the message properties and message body as well as device twin tags and device twin properties. IoT Hub needs write access to these service endpoints for message routing to work. If you configure your endpoints through the Azure portal, the necessary permissions are added for you. Make sure you configure your services to support the expected throughput. For example, if you are using Event Hubs as a custom endpoint, you must configure the throughput units for that Event Hubs so it handle the ingress of events from IoT Hub. Similarly, when using a Service Bus Queue as an endpoint, you must configure the maximum size to ensure the queue can hold all the data ingressed. You many need to monitor your endpoints and make any necessary adjustments for the actual load. If a message matches multiple routes that point to the same endpoint, IoT Hub delivers the message to that endpoint only once. You do not need to configure deduplication on your Service Bus queue or topic. In partitioned queues, partition affinity guarantees message ordering. IoT hub supports Azure Storage containers, Event Hubs, Service Bus queues and Service Bus topics as custom endpoint. Azure Storage These are two storage services IoT Hub can route messages to — Azure Blob Storage and Azure Data Lake Storage Gen2 accounts. Both of these use blobs for their storage. Event Hubs Event Hubs is a service that processes large amounts of event data (telemetry) from devices and applications. After you collect data into Event Hubs, you can store the data using a storage cluster or transform it using a real-time analytics provider Service Bus Queues and Service Bus Topics Service Bus Queues and Topics must not have Sessions or Duplicate Detection enabled. If either of those options are enabled, the endpoint appears as Unreachable in the Azure portal. The fallback route sends all the messages that don’t satisfy query conditions on any of the existing routes to the built-in endpoint (message/events) that is compatible with Event Hubs. If message routing is turned on, you can enable the fallback route capability. Once a route is created, data stops flowing to the built-in endpoint, unless a route is created to that endpoint. If there are no routes to the built-in-endpoint and a fallback route is enabled, only messages that don’t match any query conditions on routes will be sent to the built-in-endpoint. Also, if all existing routes are deleted, fallback route must be enabled to receive all data the built-in-endpoint. You can enable/disable the fallback route in the Azure portal → Message Routing blade. You can also use Azure Resource Manager for FallbackRouteProperties to use a custom endpoint for fallback route. In additon to device telemetry, message routing also enables sending device twin change events, device lifecycle events, and digital twin change events. For example, if a route is created with data source set to device twin change events, IoT Hub sends messages to the endpoint that contain the change in the device twin. Similarly, if a route is created with data source set to device lifecycle events, IoT hub send a message indicating whether the device was deleted or created. When you route device-to-cloud telemetry messages using built-in endpoints, there is a slight increase in the end-to-end latency after the creation of the first route. In most cases, the average increase in latency is less than 500ms. You can monitor the latency using Routing: message latency for messages/events or d2c.endpoints.latency.builtIn.events IoT Hub metric. Creating or deleting any route after the first one does not impact the end-to-end latency. IoT Hub metrics lists all the metrics that are enabled by default for your IoT Hub. The Rest Api Get Endpoint Health can be used to get the health status of the endpoints. Message routing allows you to query on the message properties and message body as well as device twin tags and device twin properties. If the message body is not JSON, message routing can still route the message, but queries cannot be applied to the message body. Queries are boolean expression where a Boolean true makes the query succeed or fail. If the expression evaluates to null or undefined, it is treated as false and an error will be generated in diagnostic logs if there is a routing failure. The query syntax must be correct for the route to be saved and evaluated. The IoT Hub defines a common format for all device-to-cloud messaging for interoperability across protocols. IoT Hub assumes the following JSON representation of the message. System properties are added for all users and identify content of the message. Users can selectively add appplication properties to the message. IoT Hub device-to-cloud messaging is not case-sensitive. If you have multiple properties with the same name, IoT Hub will only send one of the properties. { \"message\": { \"systemProperties\": { \"contentType\": \"application/json\", \"contentEncoding\": \"UTF-8\", \"iothub-message-source\": \"deviceMessages\", \"iothub-enqueuedtime\": \"2017-05-08T18:55:31.8514657Z\" }, \"appProperties\": { \"processingPath\": \"{cold | warm | hot}\", \"verbose\": \"{true, false}\", \"severity\": 1-5, \"testDevice\": \"{true | false}\" }, \"body\": \"{\\\"Weather\\\":{\\\"Temperature\\\":50}}\" } } System properties help identify contents and source of the messages. Application properties are user-defined strings that can be added to the message. These fields are optional. A query on message system properties needs to be prefixed with the $ symbol. Queries on application properties are accessed with their name and should not be prefixed with the $ symbol. If an application property name begins with $, then IoT Hub will search for it in the system properties, and if it is not found, then it will look in the application properties. To query on system property contentEncoding: $contentEncoding = 'UTF-8' To query on application property processingPath: processingPath = 'hot' To combine these queries, you can use Boolean expressions and functions: $contentEncoding = 'UTF-8' AND processingPath = 'hot' To enable querying on message body, the message should be a JSON encoded in either UTF-8, UTF-16 or UTF-32. The contentType must be set to application/JSON and contentEncoding to one of the supported UTF encodings in the system properties. If these properties are not specified, IoT Hub will not evaluate the query expression on the message body. A query on the message body needs to be prefixed with the $body. Following are all valid query expressions: $body.Weather.HistoricalData[0].Month = 'Feb' $body.Weather.Temperature = 50 AND $body.Weather.IsEnabled length($body.Weather.Location.State) = 2 $body.Weather.Temperature = 50 AND processingPath = 'hot' Message routing enables you to query on Device Twin tags and properties, which are JSON objects. Querying on module twin is not supported. A sample of Device Twin tags and properties is shown below: { \"tags\": { \"deploymentLocation\": { \"building\": \"43\", \"floor\": \"1\" } }, \"properties\": { \"desired\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\" }, \"$metadata\" : {...}, \"$version\": 1 }, \"reported\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\", \"status\": \"success\" }, \"batteryLevel\": 55, \"$metadata\" : {...}, \"$version\": 4 } } } A query on device twin properties needs to be prefixed with the $twin. Use unique names in tags and properties as the query is not case-sensitive. Refrain from using twin, $twin, body, or $bosy, as a property names. Following are all valid query expressions: $twin.properties.desired.telemetryConfig.sendFrequency = '5m' $body.Weather.Temperature = 50 AND $twin.properties.desired.telemetryConfig.sendFrequency = '5m' $twin.tags.deploymentLocation.floor = 1 Message enrichment is the ability of the IoT Hub to stamp messages with additional information before the messages are sent to the designated endpoint. One reason to use message enrichments is to include data that can be used to simplify downstream processing. For example, enriching device telemetry messages with a device twin tag can reduce load on customers to make device twin API calls for this information. A message enrichment has three key elements: Enrichment name or key A value One or more endpoints for which the enrichment should be applied. The key is a string. A key can only contain alphanumeric characters or these special characters: hyphen(-), underscore (_), and period (.). The value can be any of the following examples: Any static string. The name of the IoT hub sending the message. This value is $iothubname. Information from the device twin, such as its path. Example would $twin.tags.field and $twin.tags.latitude. At this time, only $iothubname, $twin.tags, $twin.properties.desired, and $twin.properties.reported are supported variables for message enrichment. Message enrichments are added as application properties to messages sent to chosen endpoint(s). Enrichments are applied per endpoint. If you specify five enrichments to be stamped for a specific endpoint, all messages going to that endpoint are stamped with the same five enrichments. Limitations You can add up to 10 enrichments per IoT Hub. In the case of the free tier, only 2 enrichments are allowed. If you are applying an enrichment with a value set to a tag or property in the device twin, the value will be stamped as a string value. For example, if an enrichment value is set to $twin.tags.field, the messages will be stamped with the string “$twin.tags.field” rather than the value of that field from the twin. This happens in the following cases: Your IoT Hub is in the basic tier. Basic tier IoT hubs do not support device twins. Your IoT Hub is in the Standard tier, but the device sending the message has no device twin. Your IoT Hub is in the standared tier, but the device twin path used for the value of the enrichment does not exist. For example, if the enrichment value is set to $twin.tags.location, and the device twin does not have a location property under tags, the message is stamped with the string $twin.tags.location. Updates to a device twin can take up to five minutes to be reflected in the corresponding enrichment value. The total message size, including the enrichments, can’t exceed 256KB. If the message size exceeds 256 KB, the IoT Hub will drop the message. You can use IoT Hub metrics to identify and debug errors when messages are dropped. For example, you can monitor d2d.telemetry.egress.invalid. Message enrichments don’t apply to digital twin change events. Pricing Message enrichments are available at no extra charge. Currently, you are charged when you send a message to an IoT hub. You are only charged once for that message, even if the message goes to multiple endpoints. Each Azure subscription can have at most 50 IoT hubs, and at most one Free hub. Each IoT hub is provisioned with one or more units in a specific tier. The tier and number of units determine the maximum daily quota of messages that you send The message size used to calculate the daily quota is 0.5 KB for a free tier hub and 4 KB for all other tiers. The tier also determines the throttling limits that IoT Hub enforces on all operations. Operation throttles Operation throttles are rate limitations that are applied in minute ranges and are intended to prevent abuse. They are also subject to traffic shaping. Check this link to get the details of the throttles Solution Architects - Envision and plan the IoT solution. Data Analysts and Engineers - Process the data generated by the IoT solution IoT hardware manufacturer/integrator Manufacturers of IoT hardware, integrators assembling hardware from various manufacturers, or suppliers providing hardware for an IoT deployment manufactured or integrated by other suppliers. Involved in development and integration of firmware, embedded operating systems, and embedded software. IoT solution developer The development of an IoT solution is typically done by a solution developer. The IoT solution developer can develop various components of the IoT solution from scratch or integrate various standard or open-source components. IoT solution operator After the IoT solution is deployed, it requires long-term operations, monitoring, upgrades, and maintenance. These tasks can be done by an in-house team that consists of information technology specialists, hardware operations and maintenance teams, and domain specialists who monitor the correct behavior of the overall IoT infrastructure. Azure provides four services that assist IoT hub in delivering event and message data to downstream locations within a solution. These services are: Event Grid Event Hubs Service Bus Azure Storage Queues An event is a lightweight notification of a condition or a state change. The publisher of the event has no expectation about how the event is handled. The consumer of the event decides what to do with the notification. Events can be discrete units or part of a series. Discrete events report state change and are actionable. To take the next step, the consumer only needs to know that something happened. The event data has information about what happened but doesn’t have the data that triggered the event. For example, an event notifies consumers that a file was created. It may have general information about the file, but it doesn’t have the file itself. Discrete events are ideal for serverless solutions that need to scale. Series events report a condition and are analyzable. The events are time-ordered and interrelated. The consumer needs the sequenced series of events to analyze what happened. A message is raw data produced by a service to be consumed or stored elsewhere. The message contains the data that triggered the message pipeline. The publisher of the message has an expectation about how the consumer handles the message. A contract exists between the two sides. For example, the publisher sends a message with the raw data, and expects the consumer to create a file from that data and send a response when the work is done. Service Purpose Type When to use Event Grid Reactive programming Event distribution (discrete) React to status changes. Event Hubs Big data pipeline Event streaming (series) Telemetry and distributed data streaming. Service Bus High-value enterprise messaging Message Order processing and financial transactions. Azure Storage Queues Simple, reliable, persistent messaging within and between services Message Very large message stores (over 80 GB), unreliable consumers. Event Grid is an eventing backplane that enables event-driven, reactive programming. It uses a publish-subscribe model. Publishers emit events, but have no expectation about which events are handled. Subscribers decide which events they want to handle. The event message has the information you need to react to changes in services and applications. Event Grid isn’t a data pipeline, and doesn’t deliver the actual object that was updated. Event Grid supports dead-lettering for events that aren’t delivered to an endpoint. It has the following characteristics: Dynamically scalable Low cost Serverless At least once delivery Azure Event Hubs is a big data pipeline. It facilitates the capture, retention, and replay of telemetry and event stream data. The data can come from many concurrent sources. Event Hubs allows telemetry and event data to be made available to a variety of stream-processing infrastructures and analytics services. It is available either as data streams or bundled event batches. This service provides a single solution that enables rapid data retrieval for real-time processing as well as repeated replay of stored raw data. It can capture the streaming data into a file for processing and analysis. It has the following characteristics: Low latency Capable of receiving and processing millions of events per second At least once delivery\u0013 Service Bus is intended for traditional enterprise applications. These enterprise applications require transactions, ordering, duplicate detection, and instantaneous consistency. Service Bus enables cloud-native applications to provide reliable state transition management for business processes. When handling high-value messages that cannot be lost or duplicated, use Azure Service Bus. Service Bus also facilitates highly secure communication across hybrid cloud solutions and can connect existing on-premises systems to cloud solutions. Service Bus is a brokered messaging system. It stores messages in a \"broker\" (for example, a queue) until the consuming party is ready to receive the messages. It has the following characteristics: Reliable asynchronous message delivery (enterprise messaging as a service) that requires polling. Advanced messaging features like FIFO, batching/sessions, transactions, dead-lettering, temporal control, routing and filtering, and duplicate detection At least once delivery Optional in-order delivery Azure Queue Storage is a service for storing large numbers of messages. You access messages from anywhere in the world via authenticated calls using HTTP or HTTPS. A queue message can be up to 64 KB in size. A queue may contain millions of messages, up to the total capacity limit of a storage account. Queues are commonly used to create a backlog of work to process asynchronously. Events - What happened. Event sources - Where the event took place. Topics - The endpoint where publishers send events. Event subscriptions - The endpoint or built-in mechanism to route events, sometimes to more than one handler. Subscriptions are also used by handlers to intelligently filter incoming events. Event handlers - The app or service reacting to the event. An event is the smallest amount of information that fully describes something that happened in the system. Every event has common information like: source of the event, time the event took place, and unique identifier. Every event also has specific information that is only relevant to the specific type of event. For example, an event about a new file being created in Azure Storage has details about the file, such as the lastTimeModified value. Or, an Event Hubs event has the URL of the Capture file. An event of size up to 64 KB is covered by General Availability (GA) Service Level Agreement (SLA). Events over 64 KB are charged in 64-KB increments. An event source is where the event happens. Each event source is related to one or more event types. For example, Azure Storage is the event source for blob created events. IoT Hub is the event source for device created events. Your application is the event source for custom events that you define. Event sources are responsible for sending events to Event Grid. The Event Grid topic provides an endpoint where the source sends events. The publisher creates the Event Grid topic, and decides whether an event source needs one topic or more than one topic. A topic is used for a collection of related events. To respond to certain types of events, subscribers decide which topics to subscribe to. When designing your application, you have flexibility when deciding how many topics to create. For large solutions, create a custom topic for each category of related events. For example, consider an application that sends events related to modifying user accounts and processing orders. It’s unlikely any event handler wants both categories of events. Create two custom topics and let event handlers subscribe to the one that interests them. For small solutions, you might prefer to send all events to a single topic. Event subscribers can filter for the event types they want. A subscription tells Event Grid which events on a topic you’re interested in receiving. When creating the subscription, you provide an endpoint for handling the event. You can filter the events that are sent to the endpoint. You can filter by event type, or subject pattern. You can set an expiration for event subscriptions that are only needed for a limited time and when you don’t want to worry about cleaning up those subscriptions. The event subscription will be expired automatically after the specified date. For example, you might want to set an expiration date when using an event subscription within a test scenario. From an Event Grid perspective, an event handler is the place where the event is sent. The handler takes some further action to process the event. Event Grid supports several handler types. You can use a supported Azure service or your own webhook as the handler. Depending on the type of handler, Event Grid follows different mechanisms to guarantee the delivery of the event. For HTTP webhook event handlers, the event is retried until the handler returns a status code of 200 – OK. For Azure Storage Queue, the events are retried until the Queue service successfully processes the message push into the queue. Event Grid provides security for subscribing to topics, and publishing topics. When subscribing, you must have adequate permissions on the resource or Event Grid topic. When publishing, you must have a SAS token or key authentication for the topic. If Event Grid can’t confirm that an event has been received by the subscriber’s endpoint, it redelivers the event. When using a custom topic, events must always be published in an array. This can be a batch of one for low-throughput scenarios, however, for high volume use cases, it’s recommended that you batch several events together per publish to achieve higher efficiency. Batches can be up to 1 MB. Each event should still not be greater than 64 KB (General Availability) or 1 MB (preview). Azure Event Grid uses a pay-per-event pricing model, so you only pay for what you use. The first 100,000 operations per month are free. Operations are defined as event ingress, subscription delivery attempts, management calls, and filtering by subject suffix.\u0013 Simplicity - Point and click to aim events from your Azure resource to any event handler or endpoint. Advanced filtering - Filter on event type or event publish path to make sure event handlers only receive relevant events. Fan-out - Subscribe several endpoints to the same event to send copies of the event to as many places as needed. Reliability - 24-hour retry with exponential backoff to make sure events are delivered. Pay-per-event - Pay only for the amount you use Event Grid. High throughput - Build high-volume workloads on Event Grid with support for millions of events per second. Built-in Events - Get up and running quickly with resource-defined built-in events. Custom Events - Use Event Grid route, filter, and reliably deliver custom events in your app. Azure IoT Hub integrates with Azure Event Grid so that you can send event notifications to other services and trigger downstream processes. For example, build an application that updates a database, creates a work ticket, and delivers an email notification every time a new IoT device is registered to your IoT hub.\u0013 Event type Description\u0013 Microsoft.Devices.DeviceCreated Published when a device is registered to an IoT hub. Microsoft.Devices.DeviceDeleted Published when a device is deleted from an IoT hub. Microsoft.Devices.DeviceConnected Published when a device is connected to an IoT hub. Microsoft.Devices.DeviceDisconnected Published when a device is disconnected from an IoT hub. Microsoft.Devices.DeviceTelemetry Published when a device telemetry message is sent to an IoT hub. IoT Hub events contain all the information you need to respond to changes in your device lifecycle. You can identify an IoT Hub event by checking that the eventType property starts with Microsoft.Devices. [{ \"id\": \"f6bbf8f4-d365-520d-a878-17bf7238abd8\", \"topic\": \"/SUBSCRIPTIONS//RESOURCEGROUPS//PROVIDERS/MICROSOFT.DEVICES/IOTHUBS/\", \"subject\": \"devices/LogicAppTestDevice\", \"eventType\": \"Microsoft.Devices.DeviceConnected\", \"eventTime\": \"2018-06-02T19:17:44.4383997Z\", \"data\": { \"deviceConnectionStateEventInfo\": { \"sequenceNumber\": \"000000000000000001D4132452F67CE200000002000000000000000000000001\" }, \"hubName\": \"egtesthub1\", \"deviceId\": \"LogicAppTestDevice\", \"moduleId\" : \"DeviceModuleID\", }, \"dataVersion\": \"1\", \"metadataVersion\": \"1\" }] [{ \"id\": \"f6bbf8f4-d365-520d-a878-17bf7238abd8\", \"topic\": \"/SUBSCRIPTIONS//RESOURCEGROUPS//PROVIDERS/MICROSOFT.DEVICES/IOTHUBS/\", \"subject\": \"devices/LogicAppTestDevice\", \"eventType\": \"Microsoft.Devices.DeviceConnected\", \"eventTime\": \"2018-06-02T19:17:44.4383997Z\", \"data\": { \"deviceConnectionStateEventInfo\": { \"sequenceNumber\": \"000000000000000001D4132452F67CE200000002000000000000000000000001\" }, \"hubName\": \"egtesthub1\", \"deviceId\": \"LogicAppTestDevice\", \"moduleId\" : \"DeviceModuleID\", }, \"dataVersion\": \"1\", \"metadataVersion\": \"1\" }] Device telemetry message must be in a valid JSON format with the contentType set to application/json and contentEncoding set to UTF-8 in the message system properties. Both of these properties are case insensitive. If the content encoding is not set, then IoT Hub will write the messages in base 64 encoded format. You can enrich device telemetry events before they are published to Event Grid by selecting the endpoint as Event Grid. [{ \"id\": \"9af86784-8d40-fe2g-8b2a-bab65e106785\", \"topic\": \"/SUBSCRIPTIONS//RESOURCEGROUPS//PROVIDERS/MICROSOFT.DEVICES/IOTHUBS/\", \"subject\": \"devices/LogicAppTestDevice\", \"eventType\": \"Microsoft.Devices.DeviceTelemetry\", \"eventTime\": \"2019-01-07T20:58:30.48Z\", \"data\": { \"body\": { \"Weather\": { \"Temperature\": 900 }, \"Location\": \"USA\" }, \"properties\": { \"Status\": \"Active\" }, \"systemProperties\": { \"iothub-content-type\": \"application/json\", \"iothub-content-encoding\": \"utf-8\", \"iothub-connection-device-id\": \"d1\", \"iothub-connection-auth-method\": \"{\\\"scope\\\":\\\"device\\\",\\\"type\\\":\\\"sas\\\",\\\"issuer\\\":\\\"iothub\\\",\\\"acceptingIpFilterRule\\\":null}\", \"iothub-connection-auth-generation-id\": \"123455432199234570\", \"iothub-enqueuedtime\": \"2019-01-07T20:58:30.48Z\", \"iothub-message-source\": \"Telemetry\" } }, \"dataVersion\": \"\", \"metadataVersion\": \"1\" }] [{ \"id\": \"56afc886-767b-d359-d59e-0da7877166b2\", \"topic\": \"/SUBSCRIPTIONS//RESOURCEGROUPS//PROVIDERS/MICROSOFT.DEVICES/IOTHUBS/\", \"subject\": \"devices/LogicAppTestDevice\", \"eventType\": \"Microsoft.Devices.DeviceCreated\", \"eventTime\": \"2018-01-02T19:17:44.4383997Z\", \"data\": { \"twin\": { \"deviceId\": \"LogicAppTestDevice\", \"etag\": \"AAAAAAAAAAE=\", \"deviceEtag\":\"null\", \"status\": \"enabled\", \"statusUpdateTime\": \"0001-01-01T00:00:00\", \"connectionState\": \"Disconnected\", \"lastActivityTime\": \"0001-01-01T00:00:00\", \"cloudToDeviceMessageCount\": 0, \"authenticationType\": \"sas\", \"x509Thumbprint\": { \"primaryThumbprint\": null, \"secondaryThumbprint\": null }, \"version\": 2, \"properties\": { \"desired\": { \"$metadata\": { \"$lastUpdated\": \"2018-01-02T19:17:44.4383997Z\" }, \"$version\": 1 }, \"reported\": { \"$metadata\": { \"$lastUpdated\": \"2018-01-02T19:17:44.4383997Z\" }, \"$version\": 1 } } }, \"hubName\": \"egtesthub1\", \"deviceId\": \"LogicAppTestDevice\" }, \"dataVersion\": \"1\", \"metadataVersion\": \"1\" }] IoT Hub event subscriptions can filter events based on event type, data content and subject, which is the device name. Event Grid enables filtering on event types, subjects, and data content. While creating the Event Grid subscription, you can choose to subscribe to selected IoT events. Subject filters in Event Grid work based on Begins With (prefix) and Ends With (suffix) matches. The filter uses an AND operator, so events with a subject that match both the prefix and suffix are delivered to the subscriber. The subject of IoT Events uses the format: devices/{deviceId} Event Grid also allows for filtering on attributes of each event, including the data content. This feature allows you to choose what events are delivered based contents of the telemetry message. For filtering on the telemetry message body, you must set the contentType to application/json and contentEncoding to UTF-8 in the message system properties. Both of these properties are case insensitive. For non-telemetry events like DeviceConnected, DeviceDisconnected, DeviceCreated, and DeviceDeleted, the Event Grid filtering can be used when creating the subscription. For telemetry events, in addition to the filtering in Event Grid, users can also filter on device twins, message properties, and body through the message routing query. When you subscribe to telemetry events via Event Grid, IoT Hub creates a default message route to send data source type device messages to Event Grid. This route will be visible in the portal under IoT Hub > Message Routing. Only one route to Event Grid is created regardless of the number of EG subscriptions created for telemetry events. So, if you need several subscriptions with different filters, you can use the OR operator in these queries on the same route. The creation and deletion of the route is controlled through subscription of telemetry events via Event Grid. You cannot create or delete a route to Event Grid using IoT Hub Message Routing. To filter messages before telemetry data is sent, you can update your routing query. A routing query can be applied to the message body only if the body is JSON. You must also set the contentType to application/json and contentEncoding to UTF-8 in the message system properties. To receive device connection state events, a device must do either a ‘D2C Send Telemetry’ OR a ‘C2D Receive Message’ operation with Iot Hub. However, if a device is using AMQP protocol to connect with Iot Hub, it is recommended that they do a ‘C2D Receive Message’ operation otherwise their connection state notifications may be delayed by few minutes. If your device is using MQTT protocol, IoT Hub will keep the C2D link open. For AMQP, you can open the C2D link by calling the Receive Async API, for IoT Hub C# SDK, or device client for AMQP. The D2C link is open if you are sending telemetry. If the device connection is flickering, which means the device connects and disconnects frequently, we will not send every single connection state, but will publish the current connection state taken at a periodic snapshot. Receiving either the same connection state event with different sequence numbers or different connection state events both mean that there was a change in the device connection state. Applications that handle IoT Hub events should follow these suggested practices: Multiple subscriptions can be configured to route events to the same event handler, so don’t assume that events are from a particular source. Always check the message topic to ensure that it comes from the IoT hub that you expect. Don’t assume that all events you receive are the types that you expect. Always check the eventType before processing the message. Messages can arrive out of order or after a delay. Use the etag field to understand if your information about objects is up to date for device created or device deleted events. IoT Hub message routing and the IoT Hub integration with Event Grid perform different actions to achieve similar results. They both take information from your IoT Hub solution and pass it on so that other services can react. So how do you decide which one to use? Consider the following questions to help guide your decision: What kind of data are you sending to the endpoints? Use IoT Hub message routing when you have to send telemetry data to other services. Message routing also enables querying message application and system properties, message body, device twin tags, and device twin properties. The IoT Hub integration with Event Grid works with events that occur in the IoT Hub service. These IoT Hub events include telemetry data, device created, deleted, connected, and disconnected. When subscribing to telemetry events, you can apply filters on the data to filter on message properties, message body and device twin in your IoT Hub, before publishing to Event Grid. What endpoints need to receive this information? IoT Hub message routing supports a limited number of unique endpoints and endpoint types, but you can build connectors to reroute the data and events to more endpoints. The IoT Hub integration with Event Grid supports 500 endpoints per IoT Hub and a larger variety of endpoint types. It natively integrates with Azure Functions, Logic Apps, Storage and Service Bus queues, and also works with webhooks to extend sending data outside of the Azure service ecosystem and into third-party business applications. Does it matter if your data arrives in order? IoT Hub message routing maintains the order in which messages are sent, so that they arrive in the same way. Event Grid does not guarantee that endpoints will receive events in the same order that they occurred. For those cases in which absolute order of messages is significant and/or in which a consumer needs a trustworthy unique identifier for messages, we recommend using message routing.","title":"Working With IoT Hub","component":"studynotes","version":"","name":"iothub","url":"/studynotes/azure_iot/iothub.html","titles":[{"text":"IoT Hub Features","hash":"_iot_hub_features","id":1},{"text":"Security","hash":"_security","id":2},{"text":"Routing","hash":"_routing","id":3},{"text":"Integration","hash":"_integration","id":4},{"text":"Device Management","hash":"_device_management","id":5},{"text":"Developer","hash":"_developer","id":6},{"text":"IoT Hub Device Provisioning Service","hash":"_iot_hub_device_provisioning_service","id":7},{"text":"Provisioning Process","hash":"_provisioning_process","id":8},{"text":"Features","hash":"_features","id":9},{"text":"When to use","hash":"_when_to_use","id":10},{"text":"IoT Hub Tiers","hash":"_iot_hub_tiers","id":11},{"text":"Basic Tier","hash":"_basic_tier","id":12},{"text":"Standard Tier","hash":"_standard_tier","id":13},{"text":"IoT Hub Message Throughtput","hash":"_iot_hub_message_throughtput","id":14},{"text":"IoT Hub Partition","hash":"_iot_hub_partition","id":15},{"text":"IoT Hub Endpoint","hash":"_iot_hub_endpoint","id":16},{"text":"Built-in endpoints","hash":"_built_in_endpoints","id":17},{"text":"Custom endpoints","hash":"_custom_endpoints","id":18},{"text":"IoT Hub Security","hash":"_iot_hub_security","id":19},{"text":"Access Control and Permissions","hash":"_access_control_and_permissions","id":20},{"text":"Authentication","hash":"_authentication","id":21},{"text":"Security tokens","hash":"_security_tokens","id":22},{"text":"Supported X.509 certificates","hash":"_supported_x_509_certificates","id":23},{"text":"IoT Hub Device Lifecycle Terms and Concepts","hash":"_iot_hub_device_lifecycle_terms_and_concepts","id":24},{"text":"IoT Hub Device Identity and Registration","hash":"_iot_hub_device_identity_and_registration","id":25},{"text":"Identity Registry","hash":"_identity_registry","id":26},{"text":"Module Identity","hash":"_module_identity","id":27},{"text":"Identity registry operations","hash":"_identity_registry_operations","id":28},{"text":"Device Creation","hash":"_device_creation","id":29},{"text":"IoT Hub Device Twins Concept","hash":"_iot_hub_device_twins_concept","id":30},{"text":"Device Twins Usage","hash":"_device_twins_usage","id":31},{"text":"IoT Hub Module Identity and Module Twins","hash":"_iot_hub_module_identity_and_module_twins","id":32},{"text":"IoT Hub Device Monitoring","hash":"_iot_hub_device_monitoring","id":33},{"text":"IoT Hub Device Retirements","hash":"_iot_hub_device_retirements","id":34},{"text":"IoT Device Configuration and Communication Protocols","hash":"_iot_device_configuration_and_communication_protocols","id":35},{"text":"Protocols","hash":"_protocols","id":36},{"text":"Ports","hash":"_ports","id":37},{"text":"IoT Devices and Device Provisioning","hash":"_iot_devices_and_device_provisioning","id":38},{"text":"Provisioning Process","hash":"_provisioning_process_2","id":39},{"text":"Manufacturing Process Phase","hash":"_manufacturing_process_phase","id":40},{"text":"Cloud setup phase","hash":"_cloud_setup_phase","id":41},{"text":"Linked IoT Hubs","hash":"_linked_iot_hubs","id":42},{"text":"Allocation policy","hash":"_allocation_policy","id":43},{"text":"Enrollment","hash":"_enrollment","id":44},{"text":"Registration","hash":"_registration","id":45},{"text":"Operations","hash":"_operations","id":46},{"text":"IoT Device Enrollment Concepts","hash":"_iot_device_enrollment_concepts","id":47},{"text":"ID Scope","hash":"_id_scope","id":48},{"text":"Registration ID","hash":"_registration_id","id":49},{"text":"Device ID","hash":"_device_id","id":50},{"text":"Attestation mechanism","hash":"_attestation_mechanism","id":51},{"text":"IoT Device Enrollment Types","hash":"_iot_device_enrollment_types","id":52},{"text":"Individual Enrollments","hash":"_individual_enrollments","id":53},{"text":"Group Enrollments","hash":"_group_enrollments","id":54},{"text":"IoT Device X.509 Certificate Attestation Process","hash":"_iot_device_x_509_certificate_attestation_process","id":55},{"text":"Root Certificate","hash":"_root_certificate","id":56},{"text":"Intermediate Certificate","hash":"_intermediate_certificate","id":57},{"text":"End-entity \"leaf\" certificate","hash":"_end_entity_leaf_certificate","id":58},{"text":"Controlling device access to the provisioning service with X.509 certificates","hash":"_controlling_device_access_to_the_provisioning_service_with_x_509_certificates","id":59},{"text":"Process","hash":"_process","id":60},{"text":"IoT Device Hardware Security Module","hash":"_iot_device_hardware_security_module","id":61},{"text":"Trusted Platform Module","hash":"_trusted_platform_module","id":62},{"text":"Endorsement key","hash":"_endorsement_key","id":63},{"text":"Storage root key","hash":"_storage_root_key","id":64},{"text":"IoT Device Trusted Platform Module (TPM) Attestation Process","hash":"_iot_device_trusted_platform_module_tpm_attestation_process","id":65},{"text":"High-level Attestation Process","hash":"_high_level_attestation_process","id":66},{"text":"Detailed Attestation Process","hash":"_detailed_attestation_process","id":67},{"text":"Nonce challenge","hash":"_nonce_challenge","id":68},{"text":"Validate the nonce and receive credentials","hash":"_validate_the_nonce_and_receive_credentials","id":69},{"text":"IoT Device Symmetric Key Attestation","hash":"_iot_device_symmetric_key_attestation","id":70},{"text":"Symmetric Key Creation","hash":"_symmetric_key_creation","id":71},{"text":"SAS tokens","hash":"_sas_tokens","id":72},{"text":"IoT Device Provisioning Process","hash":"_iot_device_provisioning_process","id":73},{"text":"IoT Device Autoprovisioning Operation","hash":"_iot_device_autoprovisioning_operation","id":74},{"text":"IoT Device Reprovisioning Process","hash":"_iot_device_reprovisioning_process","id":75},{"text":"Reprovisioning Scenarios","hash":"_reprovisioning_scenarios","id":76},{"text":"Device State Data","hash":"_device_state_data","id":77},{"text":"Reprovisioning policies","hash":"_reprovisioning_policies","id":78},{"text":"IoT Device Provisioning Service Azure CLI Commands","hash":"_iot_device_provisioning_service_azure_cli_commands","id":79},{"text":"DPS Service Commands","hash":"_dps_service_commands","id":80},{"text":"Access Policy Commands","hash":"_access_policy_commands","id":81},{"text":"Certificate Commands","hash":"_certificate_commands","id":82},{"text":"Linked Hub Commands","hash":"_linked_hub_commands","id":83},{"text":"IoT Device Provisioning SDK","hash":"_iot_device_provisioning_sdk","id":84},{"text":"Provisioning Device SDK","hash":"_provisioning_device_sdk","id":85},{"text":"Provisioning Service SDK","hash":"_provisioning_service_sdk","id":86},{"text":"IoT Device Trusted Platform Module (TPM) Simulator","hash":"_iot_device_trusted_platform_module_tpm_simulator","id":87},{"text":"IoT Device X.509 certificate Generator","hash":"_iot_device_x_509_certificate_generator","id":88},{"text":"IoT Device Access control to DPS","hash":"_iot_device_access_control_to_dps","id":89},{"text":"Authentication","hash":"_authentication_2","id":90},{"text":"Security tokens","hash":"_security_tokens_2","id":91},{"text":"Security Token Structure","hash":"_security_token_structure","id":92},{"text":"Use security tokens from service components","hash":"_use_security_tokens_from_service_components","id":93},{"text":"IoT Device Provisioning Service","hash":"_iot_device_provisioning_service","id":94},{"text":"IoT Device Configure Verified CA Certificates","hash":"_iot_device_configure_verified_ca_certificates","id":95},{"text":"Proof-of-Possession Process","hash":"_proof_of_possession_process","id":96},{"text":"Register and get the verification code","hash":"_register_and_get_the_verification_code","id":97},{"text":"Digitally sign the verification code to create a verification certificate","hash":"_digitally_sign_the_verification_code_to_create_a_verification_certificate","id":98},{"text":"Upload the signed verification certificate","hash":"_upload_the_signed_verification_certificate","id":99},{"text":"IoT Device - Roll Certificates","hash":"_iot_device_roll_certificates","id":100},{"text":"Roll the certificate on the device","hash":"_roll_the_certificate_on_the_device","id":101},{"text":"IoT Device - The Deprovisioning process","hash":"_iot_device_the_deprovisioning_process","id":102},{"text":"IoT Device - Manage Disenrollment","hash":"_iot_device_manage_disenrollment","id":103},{"text":"Blocklist devices by using an individual enrollment entry","hash":"_blocklist_devices_by_using_an_individual_enrollment_entry","id":104},{"text":"Blocklist an X.509 intermediate or root CA certificate by using an enrollment group.","hash":"_blocklist_an_x_509_intermediate_or_root_ca_certificate_by_using_an_enrollment_group","id":105},{"text":"Blocklist specific devices in an enrollment group","hash":"_blocklist_specific_devices_in_an_enrollment_group","id":106},{"text":"IoT Hub - How to provision for multitenancy","hash":"_iot_hub_how_to_provision_for_multitenancy","id":107},{"text":"IoT Hub - Common Message Format","hash":"_iot_hub_common_message_format","id":108},{"text":"System properties of D2C IoT hub messages","hash":"_system_properties_of_d2c_iot_hub_messages","id":109},{"text":"System Properties of C2D IoT hub messages","hash":"_system_properties_of_c2d_iot_hub_messages","id":110},{"text":"Message size","hash":"_message_size","id":111},{"text":"Anti-spoofing properties","hash":"_anti_spoofing_properties","id":112},{"text":"IoT Hub - Message Routing","hash":"_iot_hub_message_routing","id":113},{"text":"Routing endpoints","hash":"_routing_endpoints","id":114},{"text":"Routing queries","hash":"_routing_queries","id":115},{"text":"IoT Hub built-in endpoint","hash":"_iot_hub_built_in_endpoint","id":116},{"text":"Reading from the Built-in endpoint","hash":"_reading_from_the_built_in_endpoint","id":117},{"text":"Routing to multiple endpoints","hash":"_routing_to_multiple_endpoints","id":118},{"text":"Custom endpoint","hash":"_custom_endpoint","id":119},{"text":"Fallback route","hash":"_fallback_route","id":120},{"text":"Non-telemetry events","hash":"_non_telemetry_events","id":121},{"text":"Latency","hash":"_latency","id":122},{"text":"IoT Hub - Monitoring and Troubleshooting","hash":"_iot_hub_monitoring_and_troubleshooting","id":123},{"text":"IoT Hub - Message Routing Query Syntax","hash":"_iot_hub_message_routing_query_syntax","id":124},{"text":"Message properties based routing","hash":"_message_properties_based_routing","id":125},{"text":"Query expressions","hash":"_query_expressions","id":126},{"text":"Message body based routing","hash":"_message_body_based_routing","id":127},{"text":"Query expressions","hash":"_query_expressions_2","id":128},{"text":"Device Twin based routing","hash":"_device_twin_based_routing","id":129},{"text":"Query expressions","hash":"_query_expressions_3","id":130},{"text":"IoT Device Message processing options and constraints","hash":"_iot_device_message_processing_options_and_constraints","id":131},{"text":"Message Enrichments","hash":"_message_enrichments","id":132},{"text":"IoT Hub quotas and throttling","hash":"_iot_hub_quotas_and_throttling","id":133},{"text":"IoT Solution Business Integration","hash":"_iot_solution_business_integration","id":134},{"text":"Roles and responsibilities","hash":"_roles_and_responsibilities","id":135},{"text":"Downstream Messaging","hash":"_downstream_messaging","id":136},{"text":"Event vs. message services","hash":"_event_vs_message_services","id":137},{"text":"Event","hash":"_event","id":138},{"text":"Message","hash":"_message","id":139},{"text":"Comparison of services","hash":"_comparison_of_services","id":140},{"text":"Event Grid","hash":"_event_grid","id":141},{"text":"Event Hubs","hash":"_event_hubs","id":142},{"text":"Service Bus","hash":"_service_bus","id":143},{"text":"Azure Storage queues","hash":"_azure_storage_queues","id":144},{"text":"Integration with Event Grid","hash":"_integration_with_event_grid","id":145},{"text":"Concepts","hash":"_concepts","id":146},{"text":"Events definition","hash":"_events_definition","id":147},{"text":"Event sources definition","hash":"_event_sources_definition","id":148},{"text":"Topics definition","hash":"_topics_definition","id":149},{"text":"Event subscriptions definition","hash":"_event_subscriptions_definition","id":150},{"text":"Event handlers definition","hash":"_event_handlers_definition","id":151},{"text":"Security","hash":"_security_2","id":152},{"text":"Event delivery","hash":"_event_delivery","id":153},{"text":"Batching","hash":"_batching","id":154},{"text":"Cost","hash":"_cost","id":155},{"text":"Capabilities","hash":"_capabilities","id":156},{"text":"IoT Hub Event Types and Schema","hash":"_iot_hub_event_types_and_schema","id":157},{"text":"Event Types","hash":"_event_types","id":158},{"text":"Event Schema","hash":"_event_schema","id":159},{"text":"Device Connected Schema","hash":"_device_connected_schema","id":160},{"text":"Device Connected Schema","hash":"_device_connected_schema_2","id":161},{"text":"Device Telemetry Schema","hash":"_device_telemetry_schema","id":162},{"text":"Device Created Schema","hash":"_device_created_schema","id":163},{"text":"Filter Events","hash":"_filter_events","id":164},{"text":"Limitations for device connected and device disconnected events","hash":"_limitations_for_device_connected_and_device_disconnected_events","id":165},{"text":"Tips for consuming events","hash":"_tips_for_consuming_events","id":166},{"text":"Choosing between IoT Hub routing and Event Grid","hash":"_choosing_between_iot_hub_routing_and_event_grid","id":167}]},"40":{"id":40,"text":"Table of Contents Azure Monitor Overview What data does Azure Monitor collect? Alerts IoT Hub metrics IoT Hub Service Limits Resource Logs and Content Read logs from Azure Event Hubs IoT Hub Service Health Monitoring Device Connection State and Lifecycle Notifications Device heartbeat Device and module lifecycle notifications Device Identity Properties Module Identity Properties The above diagram gives a high-level view of Azure Monitor. At the center of the diagram are the data stores for metrics and logs, which are the two fundamental types of data used by Azure Monitor. On the left are the sources of monitoring data that populate these data stores. On the right are the different functions that Azure Monitor performs with this collected data such as analysis, alerting, and streaming to external systems. Application monitoring data: Data about the performance and functionality of the code you have written, regardless of its platform. Guest OS monitoring data: Data about the operating system on which your application is running. This OS could be running in Azure, another cloud, or on-premises. Azure resource monitoring data: Data about the operation of an Azure resource. Azure subscription monitoring data: Data about the operation and management of an Azure subscription, as well as data about the health and operation of Azure itself. Azure tenant monitoring data: Data about the operation of tenant-level Azure services, such as Azure Active Directory. As soon as you create an Azure subscription and start adding resources such as virtual machines and web apps, Azure Monitor starts collecting data. Activity logs record when resources are created or modified. Metrics tell you how the resource is performing and the resources that it’s consuming. Alerts in Azure Monitor proactively notify you of critical conditions and potentially attempt to take corrective action. The diagram below represents the flow of alerts. image::https://learn.microsoft.com/en-us/training/wwl-azure/examine-azure-iot-solution-monitoring-logging/media/m09-l01-monitoring-logging-alerts-flow-52464b0e.png[]\u0013 Alert rules are separated from alerts and the actions taken when an alert fires. The alert rule captures the target and criteria for alerting. The alert rule can be in an enabled or a disabled state. Alerts only fire when enabled. The following are key attributes of an alert rule: Target Resource Defines the scope and signals available for alerting. A target can be any Azure resource. Example targets: a virtual machine, a storage account, a virtual machine scale set, a Log Analytics workspace, or an Application Insights resource For certain resources (like virtual machines), you can specify multiple resources as the target of the alert rule. Signal Emitted by the target resource. Signals can be of the following types: metric, activity log, Application Insights, and log. Criteria A combination of signal and logic applied on a target resource. Examples: Percentage CPU > 70% Server Response Time > 4 ms Result count of a log query > 100 Alert Name A specific name for the alert rule configured by the user. Alert Description A description for the alert rule configured by the user. Severity The severity of the alert after the criteria specified in the alert rule is met. Severity can range from 0 to 4. Sev 0 = Critical Sev 1 = Error Sev 2 = Warning Sev 3 = Informational Sev 4 = Verbose Action A specific action taken when the alert is fired. https://learn.microsoft.com/en-us/training/modules/examine-azure-iot-solution-monitoring-logging/3-iot-hub-metrics https://learn.microsoft.com/en-us/training/modules/examine-azure-iot-solution-monitoring-logging/6-quotas-throttling You can send the resource logs that Azure Monitor generates to Azure Monitor logs, Event Hubs, or Azure Storage for custom processing. Choose where you want to send the logs. You can select any combination of the three options: Archive to a storage account Stream to an Event Hubs Send to Log Analytics Azure Monitor tracks different operations that occur in IoT Hub. Each category has a schema that defines how events in that category are reported. Connections The connections category tracks device connect and disconnect events from an IoT hub and errors. This category is useful for identifying unauthorized connection attempts and/or alerting you when the connection to devices is lost. { \"records\": [ { \"time\": \" UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"deviceConnect\", \"category\": \"Connections\", \"level\": \"Information\", \"properties\": \"{\\\"deviceId\\\":\\\"\\\",\\\"protocol\\\":\\\"\\\",\\\"authType\\\":\\\"{\\\\\\\"scope\\\\\\\":\\\\\\\"device\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"sas\\\\\\\",\\\\\\\"issuer\\\\\\\":\\\\\\\"iothub\\\\\\\",\\\\\\\"acceptingIpFilterRule\\\\\\\":null}\\\",\\\"maskedIpAddress\\\":\\\"\\\"}\", \"location\": \"Resource location\" } ] } Cloud-to-device commands The cloud-to-device commands category tracks errors that occur at the IoT hub and are related to the cloud-to-device message pipeline. This category includes errors that occur from: Sending cloud-to-device messages (like unauthorized sender errors). Receiving cloud-to-device messages (like delivery count exceeded errors). Receiving cloud-to-device message feedback (like feedback expired errors). This category does not catch errors when the cloud-to-device message is delivered successfully but then improperly handled by the device. { \"records\": [ { \"time\": \" UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"messageExpired\", \"category\": \"C2DCommands\", \"level\": \"Error\", \"resultType\": \"Event status\", \"resultDescription\": \"MessageDescription\", \"properties\": \"{\\\"deviceId\\\":\\\"\\\",\\\"messageId\\\":\\\"\\\",\\\"messageSizeInBytes\\\":\\\"\\\",\\\"protocol\\\":\\\"Amqp\\\",\\\"deliveryAcknowledgement\\\":\\\"\\\",\\\"deliveryCount\\\":\\\"0\\\",\\\"expiryTime\\\":\\\"\\\",\\\"timeInSystem\\\":\\\"\\\",\\\"ttl\\\":, \\\"EventProcessedUtcTime\\\":\\\"\\\",\\\"EventEnqueuedUtcTime\\\":\\\"\\\", \\\"maskedIpAddress\\\": \\\"\\\", \\\"statusCode\\\": \\\"4XX\\\"}\", \"location\": \"Resource location\" } ] } Device identity operations The device identity operations category tracks errors that occur when you attempt to create, update, or delete an entry in your IoT hub’s identity registry. Tracking this category is useful for provisioning scenarios. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"get\", \"category\": \"DeviceIdentityOperations\", \"level\": \"Error\", \"resultType\": \"Event status\", \"resultDescription\": \"MessageDescription\", \"properties\": \"{\\\"maskedIpAddress\\\":\\\"\\\",\\\"deviceId\\\":\\\"\\\", \\\"statusCode\\\":\\\"4XX\\\"}\", \"location\": \"Resource location\" } ] } Routes The message routing category tracks errors that occur during message route evaluation and endpoint health as perceived by IoT Hub. This category includes events such as: A rule evaluates to \"undefined\". IoT Hub marks an endpoint as dead. Any errors received from an endpoint. This category does not include specific errors about the messages themselves (like device throttling errors), which are reported under the \"device telemetry\" category. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"endpointUnhealthy\", \"category\": \"Routes\", \"level\": \"Error\", \"properties\": \"{\\\"deviceId\\\": \\\"\\\",\\\"endpointName\\\":\\\"\\\",\\\"messageId\\\":,\\\"details\\\":\\\"\\\",\\\"routeName\\\": \\\"\\\"}\", \"location\": \"Resource location\" } ] } Device Telemetry The device telemetry category tracks errors that occur at the IoT hub and are related to the telemetry pipeline. This category includes errors that occur when sending telemetry events (such as throttling) and receiving telemetry events (such as unauthorized reader). This category cannot catch errors caused by code running on the device itself. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"ingress\", \"category\": \"DeviceTelemetry\", \"level\": \"Error\", \"resultType\": \"Event status\", \"resultDescription\": \"MessageDescription\", \"properties\": \"{\\\"deviceId\\\":\\\"\\\",\\\"batching\\\":\\\"0\\\",\\\"messageSizeInBytes\\\":\\\"\\\",\\\"EventProcessedUtcTime\\\":\\\"\\\",\\\"EventEnqueuedUtcTime\\\":\\\"\\\",\\\"partitionId\\\":\\\"1\\\"}\", \"location\": \"Resource location\" } ] } File upload operations The file upload category tracks errors that occur at the IoT hub and are related to file upload functionality. This category includes: Errors that occur with the SAS URI, such as when it expires before a device notifies the hub of a completed upload. Failed uploads reported by the device. Errors that occur when a file is not found in storage during IoT Hub notification message creation. This category cannot catch errors that directly occur while the device is uploading a file to storage. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"ingress\", \"category\": \"FileUploadOperations\", \"level\": \"Error\", \"resultType\": \"Event status\", \"resultDescription\": \"MessageDescription\", \"durationMs\": \"1\", \"properties\": \"{\\\"deviceId\\\":\\\"\\\",\\\"protocol\\\":\\\"\\\",\\\"authType\\\":\\\"{\\\\\\\"scope\\\\\\\":\\\\\\\"device\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"sas\\\\\\\",\\\\\\\"issuer\\\\\\\":\\\\\\\"iothub\\\\\\\",\\\\\\\"acceptingIpFilterRule\\\\\\\":null}\\\",\\\"blobUri\\\":\\\"http//bloburi.com\\\"}\", \"location\": \"Resource location\" } ] } Cloud-to-device twin operations The cloud-to-device twin operations category tracks service-initiated events on device twins. These operations can include get twin, update or replace tags, and update or replace desired properties. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"read\", \"category\": \"C2DTwinOperations\", \"level\": \"Information\", \"durationMs\": \"1\", \"properties\": \"{\\\"deviceId\\\":\\\"\\\",\\\"sdkVersion\\\":\\\"\\\",\\\"messageSize\\\":\\\"\\\"}\", \"location\": \"Resource location\" } ] } Device-to-cloud twin operations The device-to-cloud twin operations category tracks device-initiated events on device twins. These operations can include get twin, update reported properties, and subscribe to desired properties. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"update\", \"category\": \"D2CTwinOperations\", \"level\": \"Information\", \"durationMs\": \"1\", \"properties\": \"{\\\"deviceId\\\":\\\"\\\",\\\"protocol\\\":\\\"\\\",\\\"authenticationType\\\":\\\"{\\\\\\\"scope\\\\\\\":\\\\\\\"device\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"sas\\\\\\\",\\\\\\\"issuer\\\\\\\":\\\\\\\"iothub\\\\\\\",\\\\\\\"acceptingIpFilterRule\\\\\\\":null}\\\"}\", \"location\": \"Resource location\" } ] } Twin queries The twin queries category reports on query requests for device twins that are initiated in the cloud. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"query\", \"category\": \"TwinQueries\", \"level\": \"Information\", \"durationMs\": \"1\", \"properties\": \"{\\\"query\\\":\\\"\\\",\\\"sdkVersion\\\":\\\"\\\",\\\"messageSize\\\":\\\"\\\",\\\"pageSize\\\":\\\"\\\", \\\"continuation\\\":\\\"\\\", \\\"resultSize\\\":\\\"\\\"}\", \"location\": \"Resource location\" } ] } Jobs operations The jobs operations category reports on job requests to update device twins or invoke direct methods on multiple devices. These requests are initiated in the cloud. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"jobCompleted\", \"category\": \"JobsOperations\", \"level\": \"Information\", \"durationMs\": \"1\", \"properties\": \"{\\\"jobId\\\":\\\"\\\", \\\"sdkVersion\\\": \\\"\\\",\\\"messageSize\\\": ,\\\"filter\\\":\\\"DeviceId IN ['1414ded9-b445-414d-89b9-e48e8c6285d5']\\\",\\\"startTimeUtc\\\":\\\"Wednesday, September 13, 2017\\\",\\\"duration\\\":\\\"0\\\"}\", \"location\": \"Resource location\" } ] } Direct methods The direct methods category tracks request-response interactions sent to individual devices. These requests are initiated in the cloud. { \"records\": [ { \"time\": \"UTC timestamp\", \"resourceId\": \"Resource Id\", \"operationName\": \"send\", \"category\": \"DirectMethods\", \"level\": \"Information\", \"durationMs\": \"1\", \"properties\": \"{\\\"deviceId\\\":, \\\"RequestSize\\\": 1, \\\"ResponseSize\\\": 1, \\\"sdkVersion\\\": \\\"2017-07-11\\\"}\", \"location\": \"Resource location\" } ] } After you set up event logging through diagnostics settings, you can create applications that read out the logs so that you can take action based on the information in them. This sample code retrieves logs from an Event Hubs: class Program { static string connectionString = \"{your AMS eventhub endpoint connection string}\"; static string monitoringEndpointName = \"{your AMS Event Hubs endpoint name}\"; static EventHubClient eventHubClient; //This is the Diagnostic Settings schema class AzureMonitorDiagnosticLog { string time { get; set; } string resourceId { get; set; } string operationName { get; set; } string category { get; set; } string level { get; set; } string resultType { get; set; } string resultDescription { get; set; } string durationMs { get; set; } string callerIpAddress { get; set; } string correlationId { get; set; } string identity { get; set; } string location { get; set; } Dictionary properties { get; set; } }; static void Main(string[] args) { Console.WriteLine(\"Monitoring. Press Enter key to exit.\\n\"); eventHubClient = EventHubClient.CreateFromConnectionString(connectionString, monitoringEndpointName); var d2cPartitions = eventHubClient.GetRuntimeInformationAsync().PartitionIds; CancellationTokenSource cts = new CancellationTokenSource(); var tasks = new List(); foreach (string partition in d2cPartitions) { tasks.Add(ReceiveMessagesFromDeviceAsync(partition, cts.Token)); } Console.ReadLine(); Console.WriteLine(\"Exiting...\"); cts.Cancel(); Task.WaitAll(tasks.ToArray()); } private static async Task ReceiveMessagesFromDeviceAsync(string partition, CancellationToken ct) { var eventHubReceiver = eventHubClient.GetDefaultConsumerGroup().CreateReceiver(partition, DateTime.UtcNow); while (true) { if (ct.IsCancellationRequested) { await eventHubReceiver.CloseAsync(); break; } EventData eventData = await eventHubReceiver.ReceiveAsync(new TimeSpan(0,0,10)); if (eventData != null) { string data = Encoding.UTF8.GetString(eventData.GetBytes()); Console.WriteLine(\"Message received. Partition: {0} Data: '{1}'\", partition, data); var deserializer = new JavaScriptSerializer(); //deserialize json data to azure monitor object AzureMonitorDiagnosticLog message = new JavaScriptSerializer().Deserialize(result); } } } } Use Azure Resource Health to monitor whether your IoT hub is up and running. You can also learn whether a regional outage is impacting the health of your IoT hub. Device events enable you to keep your solution healthy. Knowing whether a device is connected at a particular moment is not as easy as you may think. Continuously testing the connection would be a waste of resources and in some cases, such as low power devices that enter a sleep mode for extended intervals, could be impossible. The IoT Hub identity registry contains a field called connectionState, but IoT solutions should not query this field at run time. Only use the connectionState field during development and debugging. For example, do not query the connectionState field to check if a device is connected before you send a cloud-to-device message or an SMS. We recommend subscribing to the device disconnected event on Event Grid to get alerts and monitor the device connection state. If your IoT solution needs to know if a device is connected, you can implement the heartbeat pattern. In the heartbeat pattern, the device sends device-to-cloud messages at least once every fixed amount of time (for example, at least once every hour) When this pattern is implemented, even if a device does not have any data to send, it still sends an empty device-to-cloud message (usually with a property that identifies it as a heartbeat). On the service side, the solution maintains a map with the last heartbeat received for each device. If the solution does not receive a heartbeat message within the expected time from the device, it assumes that there is a problem with the device. A more complex implementation could include the information from Azure Monitor and Azure Resource Health to identify devices that are trying to connect or communicate but failing. When you implement the heartbeat pattern, make sure to check IoT Hub Quotas and Throttles. IoT Hub can notify your IoT solution when an identity is created or deleted by sending lifecycle notifications. To do so, your IoT solution needs to create a route and to set the Data Source equal to DeviceLifecycleEvents or ModuleLifecycleEvents. By default, no lifecycle notifications are sent, that is, no such routes pre-exist. The notification message includes properties, and body. Properties: Message system properties are prefixed with the /$ symbol. Notification message for device: Name Value $content-type application/json $iothub-enqueuedtime Time when the notification was sent. $iothub-message-source deviceLifecycleEvents $content-encoding utf-8 opType createDeviceIdentity or deleteDeviceIdentity hubName Name of IoT Hub deviceId ID of the device operationTimestamp ISO8601 timestamp of operation iothub-message-schema deviceLifecycleNotification Body: This section is in JSON format and represents the twin of the created device identity. For example, { \"deviceId\":\"11576-ailn-test-0-67333793211\", \"etag\":\"AAAAAAAAAAE=\", \"properties\": { \"desired\": { \"$metadata\": { \"$lastUpdated\": \"2016-02-30T16:24:48.789Z\" }, \"$version\": 1 }, \"reported\": { \"$metadata\": { \"$lastUpdated\": \"2016-02-30T16:24:48.789Z\" }, \"$version\": 1 } } } Device identities are represented as JSON documents with the following properties: Property Options Description deviceId required, read-only on updates A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters plus certain special characters: - . + % _ # * ? ! ( ) , = @ $ ' generationId required, read-only An IoT hub-generated, case-sensitive string up to 128 characters long. This value is used to distinguish devices with the same deviceId, when they have been deleted and re-created. etag required, read-only A string representing a weak ETag for the device identity, as per RFC7232. auth optional A composite object containing authentication information and security materials. auth.symkey optional A composite object containing a primary and a secondary key, stored in base64 format. status required An access indicator. Can be Enabled or Disabled. If Enabled, the device is allowed to connect. If Disabled, this device cannot access any device-facing endpoint. statusReason optional A 128 character-long string that stores the reason for the device identity status. All UTF-8 characters are allowed. statusUpdateTime read-only A temporal indicator, showing the date and time of the last status update. connectionState read-only A field indicating connection status: either Connected or Disconnected. This field represents the IoT Hub view of the device connection status. Important: This field should be used only for development/debugging purposes. The connection state is updated only for devices using MQTT or AMQP. Also, it is based on protocol-level pings (MQTT pings, or AMQP pings), and it can have a maximum delay of only 5 minutes. For these reasons, there can be false positives, such as devices reported as connected but that are disconnected. connectionStateUpdatedTime read-only A temporal indicator, showing the date and last time the connection state was updated. lastActivityTime read-only A temporal indicator, showing the date and last time the device connected, received, or sent a message. Module identities are represented as JSON documents with the following properties: Property Options Description deviceId required, read-only on updates A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters plus certain special characters: - . + % _ # * ? ! ( ) , = @ $ ' moduleId required, read-only on updates A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters plus certain special characters: - . + % _ # * ? ! ( ) , = @ $ ' generationId required, read-only An IoT hub-generated, case-sensitive string up to 128 characters long. This value is used to distinguish devices with the same deviceId, when they have been deleted and re-created. etag required, read-only A string representing a weak ETag for the device identity, as per RFC7232 auth optional A composite object containing authentication information and security materials. auth.symkey optional A composite object containing a primary and a secondary key, stored in base64 format. status required An access indicator. Can be Enabled or Disabled. If Enabled, the device is allowed to connect. If Disabled, this device cannot access any device-facing endpoint. statusReason optional A 128 character-long string that stores the reason for the device identity status. All UTF-8 characters are allowed. statusUpdateTime read-only A temporal indicator, showing the date and time of the last status update. connectionState read-only A field indicating connection status: either Connected or Disconnected. This field represents the IoT Hub view of the device connection status. Important: This field should be used only for development/debugging purposes. The connection state is updated only for devices using MQTT or AMQP. Also, it is based on protocol-level pings (MQTT pings, or AMQP pings), and it can have a maximum delay of only 5 minutes. For these reasons, there can be false positives, such as devices reported as connected but that are disconnected. connectionStateUpdatedTime read-only A temporal indicator, showing the date and last time the connection state was updated. lastActivityTime read-only A temporal indicator, showing the date and last time the device connected, received, or sent a message. Currently the device SDKs do not support using the \\+ and \\# characters in the deviceId and moduleId.","title":"IoT Monitoring and Logging","component":"studynotes","version":"","name":"iotmonitoring","url":"/studynotes/azure_iot/iotmonitoring.html","titles":[{"text":"Azure Monitor","hash":"_azure_monitor","id":1},{"text":"Overview","hash":"_overview","id":2},{"text":"What data does Azure Monitor collect?","hash":"_what_data_does_azure_monitor_collect","id":3},{"text":"Alerts","hash":"_alerts","id":4},{"text":"IoT Hub metrics","hash":"_iot_hub_metrics","id":5},{"text":"IoT Hub Service Limits","hash":"_iot_hub_service_limits","id":6},{"text":"Resource Logs and Content","hash":"_resource_logs_and_content","id":7},{"text":"Read logs from Azure Event Hubs","hash":"_read_logs_from_azure_event_hubs","id":8},{"text":"IoT Hub Service Health Monitoring","hash":"_iot_hub_service_health_monitoring","id":9},{"text":"Device Connection State and Lifecycle Notifications","hash":"_device_connection_state_and_lifecycle_notifications","id":10},{"text":"Device heartbeat","hash":"_device_heartbeat","id":11},{"text":"Device and module lifecycle notifications","hash":"_device_and_module_lifecycle_notifications","id":12},{"text":"Device Identity Properties","hash":"_device_identity_properties","id":13},{"text":"Module Identity Properties","hash":"_module_identity_properties","id":14}]},"41":{"id":41,"text":"Table of Contents Core Subsystems of IoT Optional Subsystems of IoT Data flow and Processing Data flow Scenarios Cross-cutting Architectural Needs IoT Hardware Components IP-enabled IoT Devices Non-IP enabled Devices Sensors IoT Edge Devices and Field Gateways Review Azure IoT Technologies Managed aPaaS Solutions Flexible PaaS Solutions IoT Edge and Azure Sphere IoT Hub Azure Digital Twins Azure Stream, Azure Data Explorer and Azure Maps IoT Device Software Options Cloud Service Components of an IoT solution Cloud Gateways Data Storage Options Analytics Data visualization IoT Hub Security Routing Integration Device Management Developer Device Provisioning Service Provisioning Process Features When to use IoT Hub Tiers Basic Tier Standard Tier Message Throughtput Basics Partition Basics IoT Hub Endpoint Basics Security Concepts IoT Device Lifecycle Terms and Concepts Device Identity and Registration Device Twins Concept Module Identity and Module Twins Device Monitoring Device Retirements Device Configuration and Communication Protocols Devices and Device Provisioning Device Enrollment Concepts Device Enrollment Types X.509 Certificate Attestation Process Controlling device access to the provisioning service with X.509 certificates Hardware Security Module Trusted Platform Module (TPM) Attestation Process Symmetric Key Attestation The Device Provisioning Process The Autoprovisioning Operation The Reprovisioning Process Azure CLI Commands for DPS Device Provisioning SDK Trusted Platform Module (TPM) Simulator X.509 certificate Generator Access control to DPS Device Provisioning Service Configure Verified CA Certificates Roll Device Certificates Roll the certificate on the device The Deprovisioning process Manage Disenrollment How to provision for multitenancy Common Message Format Message Routing Message Routing Query Syntax Message processing options and constraints IoT Hub quotas and throttling Azure IoT Edge IoT Edge Runtime IoT Edge Agent Azure IoT Edge modules Module Twin Properties IoT Edge Security Manager IoT Edge certificates and module identity IoT Edge Deployment Concepts IoT Edge deployment manifest Examine pre-deployment considerations IoT Edge Gateway Device Configuration IoT Edge Module Development Module Development and Testing Offline and Local Storage Capabilities Azure Blob Storage on IoT Edge Manage IoT devices by using IoT Hub and apps Device Configuration using Device Twins An IoT solution architecture consists of the following subsystems: Devices securely connecting to the cloud. Devices sending and receiving data from the cloud. A cloud gateway service, or hub, that provides device management capabilities. A cloud gateway service, or hub, that securely accepts data from the devices. Stream processors that consume data from the hub. Stream processors can integrate with business processes. Stream processors can place the data into storage. A user interface to visualize telemetry data and to facilitate device management. Below diagram illustrates the core subsystems of IoT Figure 1. Source: Microsoft Learn, Core Subsystems of IoT Many IoT apps will also include subsystems for the following: IoT Edge Devices to manage access and information flow IoT Edge Devices may help with device provisioning, data filtering, batching and aggregation, buffering of data, protocol translation, event rules processing etc. Data Transformation Subsystem for manipulation and aggregation of the telemetry stream either before or after it is received by the cloud gateway service (the IoT hub). Bulk Device Provisioning for deploying a fleet of devices. User Management Subsystem for specifying groups and users who can perform action on devices (for example, updating firmware etc). ML Subsystem to learn from data and experiences and to act without being explicitly programmed. Hot/Warm/Cold Storage paths. Figure 2. Source: Micorsoft Learn, Optional Subsystems of IoT There are four categories of stages (storage, routing, analysis, action/display): Storage includes in-memory caches, temp queues and databases. Routing makes the decision on what data should go to which target and when. Targets include storage, analysis processes and action. Analysis is used to run the data records through a set of conditions and can produce different output data records. Data records are stored and available for display and may trigger actions such as sending email, sms etc. Scenario 1 Device sends data to IoT Hub. IoT hub temporarily stores data. This data is immediately displayed as a graph on-screen. Figure 3. Source: Microsoft Learn Scenario 2 Device sends data to IoT Hub. IoT hub temporarily stores data. The data is then analyzed to detect anomalies, which can then be used to trigger actions such as sending email, text etc. Figure 4. Source: Microsoft Learn Scenario 3 Some devices may connect directly to the cloud. Some devices may store data on premise within field/edge gateways before sending it to the cloud. Some legacy or constrained devices may use protocol translation provided by an edge gateway. Figure 5. Source: Microsoft Learn Cross-cutting architectural needs: Security Requirements User Management and Auditing Device Connectivity In-transit Telemetry At-rest Security Logging and Monitoring for individual subsystems and the application High Availability Disaster Recovery Figure 6. Source: Microsoft Learn An IP-enabled device is a device that can establish a connection to a network. It has a unique identity on that network. They are deployed in scenarios where data needs to be collected, delivered, and analyzed in real-time, or periodically. These devices connect to a field gateway (IoT Edge device). These devices can use protocols like CoAP5, OPC or technologies like Bluetooth, ZigBee to connect to an edge device. A sensor is a circuit (or device) that collects a specific type of data about the physical environment. A smart sensor is a device that gathers the input and then processes that information locally before forwarding the data. A field gateway is a specialized device-appliance or a general-purpose software that: acts as a communication enabler. may act as a local device control system. can perform local processing. can control functions that are directed back towards the child devices that are connected to it. can be used to filter or aggregate device telemetry. may help with device provisioning, buffering of data, protocol translation, and event processing rules. Application platform as a service (aPaas) provides a cloud environment to build, manage, and deliver applications to customers. Azure IoT Central is a fully managed, end-to-end ready made environment for IoT solution development. It delivers built-in disaster recovery, multitenancy, global availability, and a predictable cost structure. You can tailor Azure hardware and software tools to a specific task or job function. You are responsible for scaling and configuration. The underlying infrastructure as a service (IaaS) is taken care for you. Develop your IoT devices using one of the Azure IoT starter kits or choose a device to use from the Azure Certified for IoT device catalog. SDKs are available for multiple programming languages. IoT Plug and Play can simplify how you create embedded code for your devices. Azure IoT Edge enables offloading parts of your workload from the cloud to the devices. Azure Sphere is a secured, high-level app platform with built-in communication and security features for internet connected devices. It includes a secured microcontroller unit, a custom linux-based operating system, and a cloud based security service which provides continuous, renewable security. IoT Hub service enables reliable and secure bidirectional communications between millions of IoT devices and a cloud based solution. IoT Hub Device Provision System is a helper service that provides zero-touch, just-in-time provisioning of devices to the right IoT hub without requiring human intervention. IoT Central uses Azure Digital Twins to synchronize devices and data in the real world with the digital models that enable users to monitor and manage those connected devices. Azure Stream Analytics and Azure Data Explorer can be used to process, query, analyze, and visualize data. Azure Maps is a collection of geospatial services that use fresh mapping data to provide accurate geographic context to web and mobile applications. IoT devices need to run code to be useful. Device operating system options: Windows 10 IoT enterprise (Managed) Ubuntu Core (Open source) Riot (Open source) QNX (managed) Android Automative (managed) A cloud gateway enables you to manage your IoT devices and brokers the communication with other cloud services. Cloud gateways can provide workloads such as: Authentication and Authorization Message brokering Data storage and filtering Data analytics Functions (discrete code blocks that perform specific tasks) Figure 7. Source Microsoft Learn Data is often time-series data. The warm data holds recent data that needs to be accessed with low latency. You can decide the duration range (for example, the last day, week, or month). Data stored in cold storage is historical data. Figure 8. Source Microsoft Learn Data collected from IoT is too voluminous and unstructured to visualize or gain insights. Analytic services enable architects to build meaningful relationships between sets of data in order to make it easier to manage. Data visualization tools can take input from various data streams and combine them into \"dashboards\" that can be used to tell a story about the data that was collected. IoT Hub is a managed service that acts as a central message hub for bi-directional communication between your IoT application and the devices it manages. Per-device authentication enables each device to connect securely to IoT hub and be managed securely by IoT hub. You can control user device access and per-device level connection. IoT Hub Device Provisioning Service automatically provisions devices to the correct IoT Hub when the device first boots up. Multiple authentication types: SAS token-based authentication. Individual X.509 certificate authentication for secure, standards-based authentication. X.509 CA authentication for simple, standards-based enrollment. IoT Hub has built-in routing and can setup automatic, rules-based message fan-out: Use message routing to control where your hub sends device telemetry. Can route messages to multiple endpoints at no extra cost. No-code routing rules instead of writing custom message dispatcher code. IoT Hub can integrate with other services:- Azure Event Grid to help your business to quickly react to critical events. Azure Logic Apps to automate business processes. Azure Machine Learning to add machine learning and AI models. Azure Stream Analytics to run real-time analytic computations on the data. IoT Hub can manage your devices:- Store, synchronize, and query device metadata and state information for all your devices. Set device state either per-device or based on some common characteristic. Automatically respond to a device-reported state change. Use Azure IoT device SDK libraries to build applications that run on your devices and interact with IoT Hub. There is a limit of 50 IoT hubs per subscription. You can request quota increases by contacting support. Provisioning is a two part process: The first part is establishing the initial connection between the device and the IoT solution by registering the device. The second part is applying the proper configuration to the device based on the requirements of the solution it was registered to. Secure attestation support for both X.509 and TPM-based identities Multiple allocation policies to control how the DPS assigns devices to IoT hubs. Monitoring and diagnostic logging Mult-hub support allows DPS to assign devices to more than one IoT hub across subscriptions. Cross-region support to assign devices in other regions. Zero-touch provisioning to an IoT solution without hardcoding IoT Hub connection. Load-balancing devices across multiple hubs. Connecting devices to a particular IoT solution depending on use case. Connecting a device to the IoT hub with the lowest latency. Reprovisioning based on a change in the device. Rolling the keys used by the device to connect to IoT Hub. To evaluate which IoT Hub tier is right for you solution, consider the following two questions: What features do I plan to use? How much data do I plan to move daily? This tier enables features for solutions that only need uni-directional communication from devices to the cloud. If your IoT solution is based around collecting data from devices and analyzing it centrally, then the basic tier is probably right for you. This tier of IoT Hubs enables features for solutions that want to make use of the bi-directional communication capabilities. If you would like to control IoT devices remotely or distribute some of your workloads onto the devices themselves, then you should consider the standard tier. Message traffic is measured for your IoT hub on a per-unit basis. When you create an IoT hub, you choose its tier and edition, and set the number of units available. You can purchase up to 200 units for the B1, B2, S1, or S2 edition, or up to 10 units for the B3 or S3 edition. Tier edition Sustained throughput Sustained send rate B1, S1 Up to 1111 KB/minute per unit (1.5 GB/day/unit) Average of 278 messages/minute per unit (400,000 messages/day per unit) B2, S2 Up to 16 MB/minute per unit (22.8 GB/day/unit) Average of 4,167 messages/minute per unit (6 million messages/day per unit) B3, S3 Up to 814 MB/minute per unit (1144.4 GB/day/unit) Average of 208,333 messages/minute per unit (300 million messages/day per unit) Partions can be used to reduce contentions that could occur when concurrently reading and writing to event streams. The partition limit is chosen when IoT hub is created. The maximum partition limit is 32 but most IoT hubs only need 4 partitions. The number of partitions is directly related to the number of concurrent readers you expect to have. The default value of four partitions should be used unless specified by the architect. An endpoint is a service that can retrieve data from other services. Examples of endpoint types: Device-facing endpoints that enables devices to perform operations such as sending device-to-cloud messages and receiving cloud-to-device messages. Service-facing management endpoints that enable back-end apps to perform operations such as device identity management and device twin management. Service facing built-in endpoints for reading device-to-cloud messages. Custom endpoints to receive device-to-cloud messages dispatched by a routing rule. Figure 9. Source Microsoft Learn The IoT hub endpoints: Resource provider. It exposes an Azure Resource Manager interface. This interface enables Azure subscription owners to create and delete IoT hubs, and to update IoT hub properties. Device identity management. A set of Https REST endpoints to manage device identities. Device identities are used for device authentication and access control. Device twin management. A set of Https REST endpoints to query and update device twins. Jobs management. Https REST endpoint to query and manage jobs. Device endpoints. For each device, a set of endpoints are exposed Send device-to-cloud messages. Receive cloud-to-device messages. Initiate file uploads - a device uses this endpoint to receive an Azure storage SAS URI from IoT Hub to upload a file. Retrieve and update device twin properties. Receive direct method requests. Service endpoints. Exposes a set of endpoints for your solution back end to communicate with your devices. With one exception, these endpoints are only exposed using the AMQP protocols. The method invocation endpoint is exposed over the Https protocol. Receive device-to-cloud messages. Send cloud-to-device messages and receive delivery acknowledgements. Receive file notifications. Direct method invocation. Receive operation monitoring events. These endpoints act as service endpoints and are used as sinks for message routes. Devices cannot write directly to these custom endpoints. The following services are supported as custom endpoints. Azure Storage containers Event Hubs Service Bus Queues Service Bus Topics There are three different ways for controlling access to IoT Hub: Azure AD - It provides identity-based authentication and fine-grained authorization with Azure RBAC. It supports only IoT hub service api’s. SAS - It lets you group permissions and grant them to applications using access keys and signed security tokens. Per-device security credentials - Each IoT Hub contains an identity registry. For each device in this registry, you can configure security credentials that grant DeviceConnect permissions scoped to the device’s endpoints. Use shared access policies for IoT hub-level access. Use the individual device credentials to scope access to that device only. Azure IoT hub grants access to endpoints by verifying a token against the shared access policies and identity registry security credentials. IoT Hub uses security tokens to authenticate devices and services to avoid sending keys on the wire. Security tokens are limited in time validity and scope. Some scenarios do require you to use security tokens directly. Example: The direct use of the MQTT, AMQP, or HTTPS surfaces. The implementation of the token service pattern. IoT hub also allows devices to authenticate with IoT Hub using X.509 certificates. You can verify using X.509 certificates by uploading either a certificate thumbprint or a certificate authority (CA) to Azure IoT Hub. Authentication using certificate thumbprints only verifies that the presented thumbprint matches the configured thumbprint. Authentication using certificate authority validates the certificate chain. Supported Certificates include: An existing X.509 certificate. A device may already have a certificate that it can then use to authenticate. Works with either thumbprint or CA authentication. CA-signed X.509 certificate. You can use a Certificate Authority signed certificate. Works with either thumbprint or CA authentication. A self generated and self-signed X.509 certificate. A device manufacturer or in-house deployer can generate these certificates and store the corresponding private key (and certificate) on the device. You can use tools such as OpenSSL and Windows SelfSignedCertificate utility for this purpose. Only works with thumbprint authentication. A device may either use an X.509 certificate or a security token for authentication, but not both. For Azure IoT, there are five stages within the device lifecycle: Plan: Enable operators to create a device metadata scheme that enables them to query for, and target a group of devices for bulk management operations. You can use the device twin to store this device metadata in the form of tags and properties. Provision: Securely provision new devices to IoT Hub and enable operators to immediately discover device capabilities. Configure: Facilitate bulk configuration changes and firmware updates to devices while maintaining both health and security. Monitor: Monitor overall device collection health, the status of ongoing operations, and alert operators to issues that might require attention. Retire: Replace or decommission devices after a failure, upgrade cycle, or at the end of the service lifetime. A device must have an entry in the IoT Hub identity registry before it can connect to an IoT Hub. The deviceID is case-sensitive. The identity registry is a REST-capable collection of device identity resources. IoT Hub creates a set of resources for every device in the identity registry such as the queue that contains in-flight cloud-to-device messages. Use the identity registry when you need to: Provision devices that connect to your IoT hub. Control per-device access to your hub’s device-facing endpoints. You can create module identities under a device identity. Each module identity can be configured with an independent connection to IoT hub. You can seperate access control permissions. You can create up to 20 module identites under a device identity. Identity registry exposes the following operations: Create device or module identity Update device or module identity Retreive device or module identity Delete device or module identity List up to 1000 identities Export device identities to Azure blob storage Import device identities from Azure blob storage You need to specify the Device ID and the authentication type when creating a new device. Device Twins are json documents managed by IoT Hub that store device state information associated with a physical device. This information includes metadata, configurations, and conditions. Azure IoT Hub maintains a device twin for each registered device. Device twins are implicity created and deleted when a device identity is created or deleted in IoT Hub. A device twin is a JSON document that includes: Tags. A solution back end can read from and write to. Tags are not visible to device apps. Desired properties. The solution back end can set desired properties, and the device app can read them. The device app can also receive notifications of changes in the desired properties. Reported properties. The device app can set reported properties, and the solution back end can read and query them. Device identity properties. The read-only properties from the corresponding device identity stored in the identity registry Figure 10. Source Microsoft Learn Sample JSON { \"deviceId\": \"devA\", \"etag\": \"AAAAAAAAAAc=\", \"status\": \"enabled\", \"statusReason\": \"provisioned\", \"statusUpdateTime\": \"0001-01-01T00:00:00\", \"connectionState\": \"connected\", \"lastActivityTime\": \"2015-02-30T16:24:48.789Z\", \"cloudToDeviceMessageCount\": 0, \"authenticationType\": \"sas\", \"x509Thumbprint\": { \"primaryThumbprint\": null, \"secondaryThumbprint\": null }, \"version\": 2, \"tags\": { \"$etag\": \"123\", \"deploymentLocation\": { \"building\": \"43\", \"floor\": \"1\" } }, \"properties\": { \"desired\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\" }, \"$metadata\": {...}, \"$version\": 1 }, \"reported\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\", \"status\": \"success\" }, \"batteryLevel\": 55, \"$metadata\": {...}, \"$version\": 4 } } } Use device twins to: Store device-specific metadata in the cloud. For example, the deployment location of a vending machine. Report current state information such as available capabilities and conditions from your device app. For example, a device is connected to your IoT hub over cellular or WiFi. Synchronize the state of long-running workflows between device app and back-end app. For example, when the solution back end specifies the new firmware version to install, and the device app reports the various stages of the update process. Query your device metadata, configuration, or state. Each module identity implicitly generates a module twin. Module twins are JSON documents that store module information including metadata, configurations, and conditions. SDKs enable you to create modules where each one opens an independent connection to IoT Hub. For example, if your vending machine has 3 different sensors controlled by different departments in your company, you can create a module for each sensor. This way, each department is only able to create jobs or direct methods for the sensor that they control, avoiding conflicts and user errors. Device monitoring is used to track the overall device collection health, the status of ongoing operations, and to alert operators to issues that might require their attention. Device twin desired and reported properties can be used to monitor a target condition, target content, or device metrics. The Target condition defines the scope of device twins to be updated. It is specified as a query on twin tags and/or reported properties. The Target content defines the desired properties to be added or updated in the targeted device twins. The content includes a path to the section of desired properties to be changed. The Metrics define the summary counts of various configuration states such as Success, In Progress, and Error. Use the IoT Hub identity registry for securely revoking device identities and credentials. You can disable devices by updating the status property of an identity in the identity registry. The disable feature is not available for modules. Protocol When you should use this protocol. MQTT MQTT over WebSocket Use with devices that have their own per-device credentials. AMQP AMQP over websocket Use on field gateways and cloud gateways to take advantage of connection multiplexing across devices. HTTPS Use for devices that support other protocols. Protocol Port MQTT 8883 MQTT over WebSockets 443 AMQP 5671 AMQP over WebSockets 443 HTTPS 443 There are two phases in the provisioning/deployment process for a device:- The manufacturing phase in which the device is created and prepared at the factory. The cloud setup phase in which the Device Provisioning Service is configured for automated provisioning. In this phase, the device is programmed with the provisioning service information, This enables it to call the provisioning service to get its connection info/IoT solution assignment when it is switched on. Also, in this phase, the manufacturer supplies the device deployer/operator with the identifying key information for the device. This identifying information could be an X.509 certificate or the public portion of a trusted platform module. These services are offered by many silicon manufacturers today. This phase is about configuring the cloud for proper automatic provisioning. There are two types of users involved A device operator - someone who knows how devices are intially set up. A solution operator - someonw who knows how devices are to be split among the IoT hubs. A one-time initial setup of the provisioning service must occur. It is done by the solution operator. The device operator then needs to enroll the device. The device operator takes the key identifying information from the manufacturer and adds it to the enrollment list. The Device Provisioning Service can only provision devices to IoT hubs that have been linked to it. Linking an IoT hub to an instance of the DPS gives the service read/write permissions to the IoT hub’s device registry with the link. A DPS can register a device ID and set the initial configuration in the device twin. Linked IoT hubs may be in any Azure region. You may link hubs in other subscriptions to your provisioning service. The service level setting that determines how DPS assigns devices to an IoT hub. There are there supported policies: Evenly weighted distribution. The default setting. Linked IoT hubs are equally likely to have devices provisioned to them. Lowest Latency. Devices are provisioned to an IoT hub with the lowest latency. Static Configuration via the enrollment list: specification of the desired IoT hub in the enrollment list takes priority over the service-level allocation policy. Custom (Use Azure Function): A custom allocation policy using custom code in an Azure function. An enrollment is the record of devices that may register through autoprovisioning. Two types of enrollments are supported: Group enrollment: Recommended for a large number of devices that share a desired initial configuration, or for devices all going to the same tenant. Individual enrollment: Recommended for devices that require unique initial configurations, or for devices that can only authenticate using SAS tokens via TPM attestation. Enrollment record contains information about the device or group of devices: The attestation mechanism used by the device. The optional intial desired configuration. Desired IoT hub. The desired device ID. A registration is the record of a device successfully registering/provisioning to an IoT Hub via the Device Provisioning Service. Registration records are created automatically; they can be deleted, but they cannot be updated. Operations are the billing unit of the Device Provisioning Service. One operation is the successful completion of one instruction to the service. Operations include device registrations and re-registrations; service-side changes such as adding enrollment list entries, and updating enrollment list entries. The manufacturer is responsible for encoding the device identity info, and the Device Provisioning Service registration URL. The ID scope is assigned to a DPS when it is created by the user. It is used to uniquely identify the specific provisioning service the device will register through. The ID scope is generated by the service and is immutable, which guarantees uniquess. The registration ID uniquely identifies a device in the Device Provisioning Service. The registration ID must be unique in the provisioning service ID scope. Each device must have a registration ID. The registration ID is alphanumeric, case insensitive, and may contain special characters including colon, period, underscore, and hyphen. When TPM attestation is used, the registration ID is provided by the TPM itself. When X.509-based attestation is used, the registration ID is provided by the subject name of the certificate. The device ID is the ID as it appears in IoT Hub. The desired ID may be set in the enrollment entry. Setting the desired ID is only supported in individual enrollments. If no desired device ID is specified in the enrollment list, the registration ID is used as the device ID when registering the device. An attestation mechanism is a method used for confirming a device’s identity. IoT Hub uses \"authentication scheme\" for a similar concept in that service. The DPS supports the following forms of attestation: X.509 certificates based on the standard X.509 certificate authentication flow. Trusted Platform Module (TPM) based on a nonce challenge, using the TPM standard for keys to present a signed Shared Access Signature (SAS) token. TPM attestation does not require a physical TPM on the device, but the service expects to attest using the endorsement key per the TPM spec. Symmetric Key based on shared access signature (SAS) security tokens, which include a hashed signature and an embedded expiration. A hardware Security Module (HSM) is recommended for secure, hardware-based storage of device secrets, and is the most secure form of secret storage. Both X.509 certificates and SAS tokens can be stored in HSM. It is an entry for a single device that may register. Individual enrollments may use X.509 certificates or SAS tokens as attestation mechanisms. Individual enrollments may have the desired IoT hub device ID specified. Individual enrollments are recommended for devices with unique initial configurations, or for devices that can only use SAS tokens via TPM or virtual TPM as the attestation mechanism. An enrollment group is a group of devices that share a specific attestation mechanism. Enrollment groups support both X.509 and symmetric keys. All devices in the X.509 enrollment group present X.509 certificates that have been signed by the same root or intermediate Certificate Authority(CA). Each device in the symmetric key enrollment group present SAS tokens derived from the group symmetric key. The enrollment group name and certificate name must be alphanumeric, lowercase, and may contain hyphens. X.509 certificates are typically arranged in a certificate chain of trust in which each certificate in the chain is signed by the private key of the next higher certificate, and so on, terminating in a self-signed root certificate. This arrangement establishes a delegated chain of trust from the root certificate generated by a trusted root certificate authority (CA) down through each intermediate CA to the end-entity \"leaf\" certificate installed on the device. Often the certificate chain represents some logical or physical heirarchy associated with devices. For example, a manufacturer may: Issue a self-signed root CA certificate. Use the root certificate to generate a unique intermediate CA certificate for each factory. Use each factory’s certificate to generate a unique intermediate CA certificate for each production line in the plant. And finally, use the production line certificate to generate a unique device (end-entity) certificate for each device manufactured on the line. A root certificate is a self-signed X.509 certificate representing a certificate authority (CA). It is the terminus, or trust anchor, of the certificate chain. Root certificates can be self-issued by an organization or purchased from a root certificate authority. The root certificate can also be referred to as a root CA certificate. An intermediate certificate is an X.509 certificate, which has been signed by the root certificate (or by another intermediate certificate with the root certificate in its chain). The last intermediate certificate in a chain is used to sign the leaf certificate. The leaf certificate, or end-entity certificate, identifies the certificate holder. It has the root certificate in its certificate chain and zero or more intermediate certificates. The leaf certificate is not used to to sign any other certificates. It uniquely identifies the device to the provisioning service and is sometimes referred to as the device certificate. During authentication, the device uses the private key associated with its certificate to respond to a proof of possession challenge from the service. Leaf certificates used with an Individual enrollment entry have a requirement that the Subject Name must be set to the registration ID of the Individual Enrollment entry. Leaf certificates used with an Enrollment group entry should have the Subject Name set to the desired device ID, which will be shown in the Registration Records for the authenticated device in the enrollment group. The provisioning service exposes two types of enrollment entry that you can use to control access for devices that use the X.509 attestation mechanism: Individual enrollment entries are configured with the device certificate associated with a specific device. These entries control enrollments for specific devices. Enrollment group entries are associated with a specific intermediate or root CA certificate. These entries control enrollments for all devices that have that intermediate or root certificate in their certificate chain. When a device connects to a provisioning service, if an individual enrollment for the device exists, the provisioning service applies that entry. If there is no individual enrollment for the device and an enrollment group for the first intermediate certificate in the device’s certificate chain exists, the service applies that entry, and so on, up the chain to the root. The service applies the first applicable entry such that: If the first enrollment entry found is enabled, the service provisions the device. If the first enrollment entry found is disabled, the service does not provision the device. If no enrollment entry is found for any of the certificates in the device’s certificate chain, the service does not provision the device. This mechanism and the hierarchical structure of certificate chains provides powerful flexibility in how you can control access for both individual devices and groups of devices. For example, imagine five devices with the following certificate: Device 1: root certificate → certificate A → device 1 certificate Device 2: root certificate → certificate A → device 2 certificate Device 3: root certificate → certificate A → device 3 certificate Device 4: root certificate → certificate B → device 4 certificate Device 5: root certificate → certificate B → device 5 certificate Initially, you can create a single enabled group enrollment entry for the root certificate to enable access for all five devices. If certificate B later becomes compromised, you can create a disabled enrollment group entry for certificate B to prevent Device 4 and Device 5 from enrolling. If still later Device 3 becomes compromised, you can create a disabled individual enrollment entry for its certificate. This revokes access for Device 3, but still allows Device 1 and Device 2 to enroll. The hardware security module, or HSM, is used for secure, hardware based storage of device secrets, and is the most secure form of secret storage. Both X.509 certificates and SAS tokens can be stored in the HSM. TPM refers to a standard for securely storing keys used to authenticate the platform. TPM can also refer to the I/O interface used to interact with the modules implementing the standard. TPMs can exist as discrete hardware, integrated hardware, firmware-based, or software-based. Device Provisioning service only supports TPM 2.0. TPM attestation is based on a nonce challenge, which uses the endorsement and storage root keys to present a signed Shared Access Signature (SAS) token. The endorsement key is an asymmetric key contained inside the TPM. It is internally generated or injected at manufacture time. It is unique for every TPM. It cannot be changed or removed. The private key portion of the endorsement key is never released outside of the TPM. The public portion of the endorsement key is used to recognize a genuine TPM. The storage root key is stored in the TPM. It is used to protect the TPM keys created by applications. These cannot be used without the TPM. The storage root key is generated when you take ownership of the TPM. When you clear the TPM so a new user can take ownership, a new storage root key is generated. TPM attestation uses endorsement key (EK) as the secure root of trust. The EK is unique to the TPM. Changing the EK changes the device into a new one. TPMs have another type of key called the storage root key (SRK). An SRK may be generated by the TPMs owner after taking ownership. Taking ownership is a way of saying \"Someone sets a password on the HSM\". If a TPM device is sold to a new owner, the new owner can take ownership of the TPM to generate a new SRK. The SRK provides a sandbox for the owner to store their keys and provide access revocability if the device or TPM is sold. Once a device has been setup, it will have both an SRK and an EK available for use. TPM ownership could mean many things, follow the instructions relevant to your system to take ownership. Figure 11. Source Microsoft Learn The public part of the EK is used by the DPS for device enrollment. The device vendor can read the EK_pub and upload it to the provisioning service. The device will be recognized when it connects to the DPS. The DPS does not check the SRK or owner. Clearing the TPM erases customer data and not the EK. The device will still be recognized by the DPS when it connects to provision. The device connects to the DPS and requests to provision. It provides the service its registration ID, an ID scope, and the EK_pub and SRK_pub from the TPM. The service passes the encrypted nonce back to the device. The device decrypts the encrypted nonce and uses that to sign a SAS token to connect again and finish provisioning. Figure 12. Source Microsoft Learn The device takes the nonce and uses the private portion of the EK and SRK to decrypt the nonce into the TPM. The order of nonce encryption delegates trust from the EK, which is immutable, to the SRK, which can change if a new owner takes ownership of the TPM. Figure 13. Source Microsoft Learn The device then signs a SAS token using the decrypted nonce. It reestablishes connection to the DPS using the signed SAS token. With the Nonce challenge completed, the service allows the device to provision. Figure 14. Source Microsoft Learn Symmetric key attestation is a simple approach to authenticating a device with DPS. Can be used if you do not have strict security requirements. It is useful for legacy devices with limited security functionality. The DPS creates new symmetric keys with a default length of 32 bytes when new enrollments are saved with the Auto generate keys option enabled. You can also specify your own symmetric keys. Your keys must have a key length between 16 bytes and 64 bytes. The keys must be in valid Base64 format. SAS tokens have the following form:- SharedAccessSignature sig={signature}&se={expiry}&skn={policyName}&sr={URL-encoded-resourceURI} Signature is the HMAC-SHA256 signature string produced by using the symmetric key or the enrollment group key. The key must be decoded from base64 before being used to perform the sha256 computation. The signature result must be url encoded. resourceURI is the uri registration endpoint that can be accessed by this token. It starts with the scope ID for the DPS. for example, {scope ID}/registrations/{registration ID} expiry is the number of seconds since Jan 1970 url-encoded-resourceURI is the lower case URL-encoding of the lower case resource URI. policyName is the name of the shared access policy to which this token refers. The policy name used when provisioning with symmetric key attestation is registration. The DPS automates many of the manual steps that are traditionally involved in provisioning devices. Figure 15. Source Microsoft Learn Device manufacturer adds the device registration information to the enrollment list in the Azure portal. Device contacts the DPS set/embedded at the factory. The device passes identifying information to the DPS to prove its identity. The DPS validates the identity of the device by validating the registration ID and key against the enrollment list entry using either a nonce challenge (TPM) or X.509 certificates. The DPS registers the device with an IoT Hub and populates the device’s twin state. The IoT hub returns the deviceID information to the provisioning service. The DPS returns the IoT hub connection information to the device. The device can now start sending data directly to the IoT hub. The device connects to IoT hub. The device gets the desired state from its device twin in IoT hub. Figure 16. Source Microsoft Learn Encode identity and registration URL - the manufacturer is responsible for encoding the device identity info, and the DPS registration URL Provide device identity - the manufacturer is responsible for communicating it to the operator or directly enrolling it to the DPS. Configure autoprovisioning - a one-time configuration of the Azure IoT Hub and IoT Hub Device Provisioning Service instances, establishing them and creating linkage between them. Enroll device identity - Identity is based on the attestation mechanism the device is designed to use, which allows the provisioning service to attest to the device’s authenticity during registration Build/Deploy registration software. - The Developer is responsible for building and deploying the registration software to the device, using the appropriate SDK. Bootup and register. - Initiated upon boot up by registration software, which is built using a Device Provisioning Service client SDK appropriate for the device and attestation mechanism. Upon successful registration, the device is provided with its IoT Hub unique device ID and connection information, allowing it to pull its initial configuration and begin the telemetry process. Latency As a device moves between locations, network latency can be improved by having the device migrated closed to the IoT hub. Multi-tenancy A device may be reassigned to a new customer within an IoT solution. This new customer may use a different IoT hub. Solution change A device could be moved into a new or updated IoT solution. This may require an IoT hub change. Quarantine A device that is malfunctioning, compromised, or out-of-date may be reassigned to an IoT hub that can only update and get back in compliance. Once the device is functioning properly, it’s then migrated back to its main hub. Device state data is composed of the device twin and device capabilities. This data is stored in the Device Provisioning Service instance and the IoT hub that a device is assigned to When a device is initially provisioned with a DPS instance, the following steps are done: The device sends a provisioning request to a DPS instance. The service instance authenticates the device identity based on an enrollment entry. It then creates the initial configuration of the device state data. The service instance assigns the device to an IoT hub based on the enrollment configuration. It then returns that IoT hub assignment to the device. The provisioning service instance gives a copy of any intial device state data to the assigned IoT hub. The device connects to the assigned IoT hub and begins operations. Over time, the device state data on the IoT hub may be updated by device operations and back-end operations. The initial device state information stored in the DPS instance stays untouched. This untouched device state data is the initial configuration. As a device moves between IoT hubs, it may also be necessary to migrate device state updated on the previous IoT hub over to the new IoT hub. This migration is supported by reprovisioning policies in the DPS. A device usually supports a method to manually trigger provisioning on demand. The reprovisioning policy on an enrollment entry determines how the DPS handles provisioning requests. The policy also determines whether device state data should be migrated during reprovisioning. The same policies are available for individual enrollments and enrollment groups: Reprovision and migrate data: This policy is the default for new enrollment entries. This policy takes action when devices associated with the enrollment entry submint a new request (1). The updated device state information from that initial IoT hub will be migrated over to the new IoT hub (2). During migration, the device’s status will be reported as Assigning. Reprovision and reset to initial config: This policy takes action when devices associated with the enrollment entry submit a new provisioning request (1). The initial configuration data that the provisioning service instance received when the device was provisioned is provided to the new IoT hub (2). During migration, the device’s status will be reported as Assigning. This policy is often used for a factory reset without changing IoT hubs. Never reprovision: The device is never reassigned to a different hub. This policy is provided for managing backwards compatibility. Service Commands Description az iot dps create Create an Azure IoT Hub DPS instance. az iot dps delete Delete an Azure IoT Hub DPS instance. az iot dps list List Azure IoT Hub Device Provisioning Service instances. az iot dps show Get the details of an Azure IoT Hub Device Provisioning instance. az iot dps update Update an Azure IoT Hub Device Provisioning Service instance. Access Policy Commands Description az iot dps access-policy Manage Azure IoT Hub DPS access policies. az iot dps access-policy create Create a new shared access policy in an Azure IoT Hub DPS instance. az iot dps access-policy delete Delete a shared access policies in an Azure IoT Hub DPS instance. az iot dps access-policy list List all shared access policies in an Azure IoT Hub DPS. az iot dps access-policy show Show details of a shared access policy in an Azure IoT Gub DPS instance. az iot dps access-policy update Update a shared access policy in an Azure IoT Hub DPS instance. az iot dps certificate Manage Azure IoT Hub DPS certificates. az iot dps certificate create Create/upload an Azure IoT Hub DPS certificate. az iot dps certificate delete Delete an Azure IoT Hub DPS certificate. az iot dps certificate generate-verification-code Generate a verification code for an Azure IoT Hub DPS certificate. az iot dps certificate list List all certificates contained within an Azure IoT Gub dps az iot dps certificate show Show information about a particular Azure IoT Hub DPS certificate. az iot dps certificate update Update an Azure IoT Hub DPS certificate az iot dps certificate verify Verify an Azure IoT Hub DPS certificate. Linked Hub Commands Linked Hub Commands Descriptions az iot dps linked-hub Manage Azure IoT Hub DPS linked IoT hubs. az iot dps linked-hub create Create a linked IoT hub in an Azure IoT Hub DPS instance. az iot dps linked-hub delete Update (delete) a linked IoT hub in an Azure IoT Hub DPS instance. az iot dps linked-hub list List all linked IoT hubs in an Azure IoT DPS instance. az iot dps linked-hub show Show details of a linked IoT hub in an Azure IoT Hub DPS instance. az iot dps linked-hub update Update a linked IoT hub in an Azure IoT Hub DPS instance. The Azure Provisioning device and service SDKs for C# can be downloaded from NuGet as follows: Provisioning Device Client SDK Provisioning Service Client SDK This SDK supports the following protocols: MQTT, MQTT-WS, AMQP, AMQP-WS, and HTTPS. TPM Individual Enrollment: This SDK supports connecting your device to the DPS via individual enrollment using TPM. TPM over MQTT (and MQTT-WS) is currrently not supported by the DPS X.509 Indivicual Enrollment: This SDK supports connecting your device to the DPS via individual enrollment using X.509 root certificate. X.509 Enrollment Group This SDK supports connecting your device to the DPS via individual enrollment using X.509 leaf certificate. WebSocket support for MQTT/AMQP is limited to .NET Framework 4.x This SDK can be used to programmatically enroll devices. CRUD Operation with TPM Individual Enrollment Programmatically manage device enrollment using TPM with the service SDK. Bulk CRUD Operation with TPM Individual Enrollment Programmatically manage device enrollment using TPM with the service SDK. CRUD Operation with X.509 Individual Enrollment Programmatically manage device enrollment using X.509 individual enrollment with the service SDK. CRUD Operation with X.509 Group Enrollment Programmatically manage device enrollment using X.509 group enrollment with the service SDK. Query enrollments Programmatically query registration states with the service SDK. In production, TPM is located on the device, either as discrete hardware, integrated hardware, or firmware-based. In testing phase, a software-based TPM simulator is provided to developers. This simulator is only available on the Windows platform for now. Clone the Github repository: git clone https://github.com/Azure/azure-iot-sdk-java.git. Navigate to the TPM simulator folder under azure-iot-sdk-java/provisioning/provisioning-tool/tpm-simulator/. Run Simulator.exe prior to running any client application for provisioning device. Let the simulator run in the background throughout the provisioning process to obtain registration ID and Endorsement Key. Both values are only valid for one instance of the run. For production environment, purchase an X.509 CA certificate from a public root certificate authority. For testing environment, you can generate an X.509 root certificate or X.509 certificate chain using: OpenSSL: You can use scripts for certificate generation: Node.js Powershell or Bash Device Identity Composition Engine (DICE) Enulator: DICE can be used for cryptographic device identity and attestation based on TLS protocol and X.509 client certificates. https://learn.microsoft.com/en-us/azure/iot-hub/tutorial-x509-openssl The DPS uses permissions to grant access to each endpoint. Permissions limit the access to a service instance based on functionality. For example, a backend app must include a token that contains security credentials along with every message it sends to the service. You can grant permissions in the following ways: Shared access authorization policies. Shared access policies can grant any combination of permissions. A newly created provisioning service has the provisioningserviceowner policy set as the default policy. It is a policy with all permissions. DPS grants access to endpoints by verifying a token against the shared access policies. Security credentials, such as symmetric keys, are never sent over the wire. The DPS uses security tokens to authenticate services to avoid sending keys on the wire. Security tokens are limited in time validity and scope. DPS SDKs automatically generate tokens without requiring any special configuration. Use security tokens to grant time-bounded access for services to specific functionality in IoT Device Provisioning Service. To get authorization to connect to the provisioning service, services must send security tokens signed with either a shared access or symmetric key. A token signed with a shared access key grants access to all the functionality associated with the shared access policy permissions. The security token has the following format: SharedAccessSignature sig={signature}&se={expiry}&skn={policyName}&sr={URL-encoded-resourceURI} Service components can only generate security tokens using shared access policies granting the appropriate permissions. Endpoint Functionality {your-service}.azure-devices-provisioning.net/enrollments Provides device enrollment operations with the Device Provisioning Service. {your-service}.azure-devices-provisioning.net/enrollmentGroups Provides operations for managing device enrollment groups. {your-service}.azure-devices-provisioning.net/registrations/{id} Provides operations for retrieving and managing the status of device registrations. As an example, a service generated using a pre-created shared access policy named enrollmentread would create a token with the following parameters: resource URI: {mydps}.azure-devices-provisioning.net, signing key: one of the keys of the enrollmentread policy, policy name: enrollmentread, an expiration time The result, which would grant access to read all enrollment records, would be: SharedAccessSignature sr=mydps.azure-devices- provisioning.net&sig=JdyscqTpXdEJs49elIUCcohw2DlFDR3zfH5KqGJo4r4%3D&se=1456973447&skn=enrollmentread Permission Notes ServiceConfig Grants access to change the service configurations. This permissions is used by backend cloud services. EnrollmentRead Grants read access to the device enrollments and enrollment groups. This permission is used by backend cloud services. EnrollmentWrite Grants write access to the device enrollments and enrollment groups. This permission is used by backend cloud services. RegistrationStatusRead Grants read access to the device registration status. This permission is used by backend cloud services. RegistrationStatusWrite Grants delete access to the device registration status. This permission is used by backend cloud services. A verified X.509 Certificate Authority (CA) certificate is a CA certificate that has been uploaded and registered to your provisioning service and has gone through proof-of-possession with the service. Get a unique verification code generated by the provisioning service for your X.509 CA certificate. You can do this from the Azure portal. Create an X.509 verification certificate with the verification code as its subject and sign the certificate with the private key associated with your X.509 certificate. Upload the signed verification certificate to the service. The service validates the verification certificate using the public portion of the CA certificate to be verified, thus proving that you are in possession of the CA certificate’s private key. Verifying certificate ownership ensures the uploader of the certificate is in possession of the certificate’s private key. Verification prevents a malicious actor sniffing your traffic from extracting an intermediate certificate and using that certificate to create an enrollment group in their own provisioning service, effectively hijacking your devices. By proving ownership of the root or an intermediate certificate in a certificate chain, you are proving that you have permission to generate leaf certificates for the devices that will be registering as part of that enrollment group. For this reason, the root or intermediate certificate configured in an enrollment group must either be a verified certificate or must roll up to a verified certificate in the certificate chain a device presents when it authenticates with the service. In the Azure portal, navigate to your provisioning service and open Certificates from the left-hand menu. Select Add to add a new certificate. Enter a friendly display name for your certificate. Browse to your .cer or .pem file that represents the public part of your X.509 certificate. Select Upload. Once you get a notification that your certificate is successfully uploaded, Select Save. Select the certificate that you added in the previous step. In Certificate Details, select Generate Verification code. The provisioning service creates a verification code that you can use to validate the certificate ownership. Copy the code to your clipboard. You need to sign the Verification Code with the private key associated with your X.509 CA certificate, which generates a signature. This process is known as Proof of possession and results in a signed verification certificate. The Azure IoT Hub C SDK provides Powershell (Windows) and Bash (Linux) scripts to help you create CA and leaf certificates for development and to perform proof-of-possession using a verification code. You download the files relevant to your system to a working folder and follow the instructions in the Managing CA certificates readme to perform proof-of-possession on a CA certificate. The Azure IoT Hub C# SDK contains the Group Certificate Verification Sample, which you can use to do proof-of-possession. The Powershell and Bash scripts provided in the documentation and SDKs rely on OpenSSL. You may also use OpenSSL or other third-party tools to help you do proof-of-possession. Upload the resulting signature as a verification certificate to your provisioning service in the portal. In Certificate Details on the Azure portal, use the File Explorer icon next to the Verification Certificate .pem or .cer file field to upload the signed verification certificate from your system. Once the certificate is successfully uploaded, select Verify. The STATUS of your certificate changes to Verified in the Certificate Explorer list. Select Refresh if it does not update automatically. During the lifecycle of your IoT solution, you will need to roll certificates. It could be because of a security breach or certificate expirations. Rolling device certificates will involve updating the certificate stored on the device and the IoT hub. The device can then reprovision itself with the IoT hub using normal autoprovisioning with the DPS. Certificates on a device should always be stored in a safe place like a HSM. If you are managing your own device certificates, make sure both old and new leaf certificates have the same Common Name (CN). By having the same CN, the device can reprovision itself without creating a duplicate registration record. https://learn.microsoft.com/en-us/azure/iot-dps/how-to-roll-certificates You may find it necessary to deprovision devices that were previously autoprovisioned through the DPS. For example, a device may be sold or moved to a different IoT hub, or it may be lost, stolen, or otherwise compromised. Deprovisioning a device involves two steps: Disenroll the device from your provisioning service, to prevent future autoprovisioning. To learn how to disenroll a device, see https://learn.microsoft.com/en-us/azure/iot-dps/how-to-revoke-device-access-portal To learn how to disenroll a device programmatically using one of the provisioning SDKs, see https://learn.microsoft.com/en-us/azure/iot-dps/quick-enroll-device-x509?pivots=programming-language-csharp Deregister the device from your IoT Hub, to prevent future communications and data transfer. The exact steps you take to deprovision a device depends on its attestation mechanism and its applicable enrollment entry with your provisioning service. Deprovisioning enrollment groups requires you to consider two scenarios: To deprovision all of the devices that have been provisioned through an enrollment group: Disable the enrollment group to blocklist its signing certificate. Use the list of provisioned devices for that enrollment group to disable or delete each device from the identity registry of its respective IoT hub After disabling or deleting all devices from their respective IoT hubs, you can optionally delete the enrollment group. Be aware, though, that, if you delete the enrollment group and there is an enabled enrollment group for a signing certificate higher up in the certificate chain of one or more of the devices, those devices can re-enroll. To deprovision a single device from an enrollment group: Create a disabled individual enrollment for its leaf (device) certificate. This revokes access to the provisioning service for that device while still permitting access for other devices that have the enrollment group’s signing certificate in their chain. Do not delete the disabled individual enrollment for the device. Doing so will allow the device to re-enroll through the enrollment group. Use the list of provisioned devices for that enrollment group to find the IoT hub that the device was provisioned to and disable or delete it from theat hub’s identity registry. Enrollment in the DPS enables a device to be autoprovisioned. A provisioned device is one that has been registered with IoT Hub. This allows it to receive its initial device twin state and begin reporting telemetry data. Individual enrollments apply to a single device. It can use either X.509 certificates or SAS tokens as the attestation mechanism. Devices that use SAS tokens as their attestation mechanism can be provisioned only through an individual enrollment. To blocklist a device that has an individual enrollment, you can either disable or delete its enrollment entry. To temporarily blocklist the device by disabling its enrollment entry: Sign in to the Azure portal and select All resources from the left menu. In the list of resources, select the provisioning service that you want to blocklist your device from. In your provisioning service, select Manage enrollments, and then select the Individual Enrollments tab. Select the enrollment entry for the device that you want to blocklist. On your enrollment page, scroll to the bottom, and select Disable for the Enable entry switch, and then select Save. To permanently blocklist the device by deleting its enrollment entry: Sign in to the Azure portal and select All resources from the left menu. In the list of resources, select the provisioning service that you want to blocklist your device from. In your provisioning service, select Manage enrollments, and then select the Individual Enrollments tab. Select the check box next to the enrollment entry for the device that you want to blocklist. Select Delete at the top of the window, and then select Yes to confirm that you want to remove the enrollment. After you finish the procedure, you should see your entry removed from the list of individual enrollments. X.509 certificates are typically arranged in a certificate chain of trust. If a certificate at any stage in a chain becomes compromised, trust is broken. The certificate must be blocklisted to prevent Device Provisioning Service from provisioning devices downstream in any chain that contains that certificate. An enrollment group is an entry for devices that share a common attestation mechanism of X.509 certificates signed by the same intermediate or root CA. The enrollment group entry is configured with the X.509 certificate associated with the intermediate or root CA. The entry is also configured with any configuration values, such as twin state and IoT hub connection, that are shared by devices with that certificate in their certificate chain. To blocklist the certificate, you can either disable or delete its enrollment group. Devices that implement the X.509 attestation mechanism use the device’s certificate chain and private key to authenticate. When a device connects and authenticates with DPS, the service first looks for an individual enrollment that matches the device’s credentials. The service then searches enrollment groups to determine whether the device can be provisioned. If the service finds a disabled individual enrollment for the device, it prevents the device from connecting. The service prevents the connection even if an enabled enrollment group for an intermediate or root CA in the device’s certificate chain exists. The allocation policies defined by the provisioning service support various allocation scenarios. Geolocation/GeoLatency: This policy causes the DPS to evaluate device latency and determine the closest IoT hub out of the group of IoT hubs. Multi-tenancy: The solution may require all devices for a particular tenant to communicate with a specific group of IoT hubs. Provisioning devices for the multitenant scenario across regions, involves the following: Two (or more) regional IoT hubs. An enrollment group that uses a multitenant enrollment and specifies assigning devices based on lowest latency. Multiple devices provisioned in each region. With this configuration in place, you will see that devices in each region are provisioned to the same tenant in the closest region. To support seamleass interoperability across protocols, IoT Hub defines a common message format for all device-facing protocols. This message format is used for both device-to-cloud and cloud-to-device messages. IoT Hub implements device-to-cloud messaging using a streaming messaging pattern. IoT Hub’s device-to-cloud messages are more like Event Hubs events than Service Bus messages in that there is a high volume of events passing through the service that can be read by multiple readers. An IoT Hub message consists of: A predetermined set of system properties as listed below. A set of application properties. A dictionary of string properties that the application can define and access, without needing to deserialize the message body. IoT Hub never modifies these properties. An opaque binary body. Property name and values can only contain ASCII alphanumeric characters. {'!', '#', '$', '%, '&', ''', '*', '+', '-', '.', '^', '_', '’, '|', '~'} are also allowed. Device-to-cloud messaging with IoT Hub has the following characteristics: Device-to-cloud messages are durable and retained in an IoT Hub’s default messages/events endpoint for up to seven days. Device-to-cloud messages can be at most 256 KB, and can be grouped in batches to optimize sends. Batches can be at most 256 KB. IoT Hub does not allow arbitrary partitioning. Device-to-cloud messages are partitioned based on their originating deviceID. IoT Hub enables per-device authentication and access control. You can stamp messages with information that goes into the application properties. message-id A user settable identifier for the message used for request-reply patterns. A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters. Other characters allowed: ` {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}` It is user settable. The keyword for routing query is messageId. iothub-enqueuedtime Date and time the Device-to-Cloud message was received by IoT Hub. It is not user settable. The keyword for routing query is enqueuedTime. user-id An ID used to specify the origin of messages. When messages are generated by IoT Hub, it is set to {iot hub name}. It is user settable. The keyword for routing query is userId. iothub-connection-device-id An ID set by IoT Hub on device-to-cloud messages. It contains the deviceId of the device that sent the message. It is not user settable. The keyword for routing query is connectionDeviceId. iothub-connection-module-id And ID set by IoT Hub on device-to-cloud messages. It contains the moduleId of the device that sent the message. It is not user settable. The keyword for routing query is connectionModuleId. iothub-connection-auth-generation-id An ID set by IoT Hub on device-to-cloud messages. It contains the connectionDeviceGenerationId of the device that sent the message. It is not user settable. The keyword for routing query is connectionDeviceGenerationId. iothub-connection-auth-method An authentication method set by IoT Hub on device-to-cloud messages. This property contains information about the authentication method used to authenticate the device sending the message. It is not user settable. The keyword for routing query is connectionAuthMethod. dt-dataschema This value is set by IoT hub on device-to-cloud messages. It contains the device model ID set in the device connection. It is not user settable. The keyword for routing query is $dt-dataschema. dt-subject The name of the component that is sending the device-to-cloud messages. It is user settable. The keyword for routing query is $dt-subject. message-id A user settable identifier for the message used for request-reply patterns. A case-sensitive string (up to 128 characters long) of ASCII 7-bit alphanumeric characters. Other characters allowed: ` {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}` It is user settable. sequence-number A number (unique per device-queue) assigned by IoT hub to each cloud-to-device message. It is not user settable. to A destination specified in Cloud-to-Device messages. It is not user settable. absolute expiry time Date and time of message expiration It is user settable. correlation-id A string property in a response message that typically contains the MessageId of the request, in request-reply patterns. It is user settable. user-id An ID used to specify the origin of messages. When messages are generated by IoT Hub, it is set to {iot hub name} It is use settable. iothub-ack A feedback message generator. This property is used in cloud-to-device messages to request IoT Hub to generate feedback messages as a result of the consumption of the message by the device. Possible values: none(default) no feedback message is generated. positive receive a feedback message if the message was completed. negative receive a feedback message if the message expired without being completed by the device. full both positive and negative. IoT Hub measures message size in a protocol-agnostic way, considering only the actual payload. The size in bytes is calculated as the sum of the following values: The body size in bytes. The size in bytes of all the values of the message system properties. The size in bytes of all user property names and values. Property names and values are limited to ASCII characters, so the length of the strings equals the size in bytes. To avoid device spoofing in device-to-cloud messages, IoT Hub stamps all messages with the following properties: iothub-connection-device-id iothub-connection-auth-generation-id iothub-connection-auth-method The first two contain the deviceId and generationId of the originating device (device identity properties). The iothub-connection-auth-method property contains a json serialized object:- { \"scope\": \"{ hub | device }\", \"type\": \"{ symkey | sas | x509 }\", \"issuer\": \"iothub\" } IoT Hub Message Routing enables users to rout device-to-cloud messages to service-facing endpoints. Routing also provides a querying capability to filter the data before routing it to the endpoints. An IoT hub has a default built-in messaging endpoint (messages/events). Custom endpoints can be configured that link IoT hub to other services in your subscription. IoT Hub currently supports the following custom endpoints: Azure Storage containers Event Hubs Service Bus Queues Service Bus Topics There are two storage services IoT hub can route messages to: Azure Blob Storage and Azure Data Lake Storage Gen2. Both of these use blobs for their storage. Service Bus Queues and Service Bus Topics that have Sessions or Duplicate Detection enabled are not supported as custom endpoints. A single message may match the condition on multiple routing queries. The IoT hub delivers the message to the endpoint associated with each matched query. IoT hub automatically deduplicates message delivery. So if a message matches multiple queries that have the same destination, it is only written once to that destination. When you route message data to custom endpoints, messages are only delivered to the built-in endpoint if they do not match any query. To deliver messages to both the built-in endpoint and to a custom endpoint, add a route that sends messages to the built-in events endpoint. Each routing query you configure has the following properties: Name The unique name that identifies the query. Source The origin of the data stream to be acted upon. For example, device telemetry. Condition The query expression for the routing query that is run against the following to determine if it is a match for the endpoint: message application properties system properties message body device twin tags device twin properties Endpoint The name of the endpoint where IoT hub sends messages that match the query. We recommend that you choose an endpoint in the same region as your IoT hub. By default, messages are routed to the built-in service-facing endpoint which is compatible with Event Hubs. This endpoint is currently only exposed using the AMQP protocol on port 5671 and AMQP over WebSockets on port 443. An IoT hub exposes the following properties to enable you to control the built-in endpoint. Partition count Set this property at creation to define the number of partitions for device-to-cloud event ingestion. Retention time This property specifies how long in days messages are retained by IoT Hub. The default is one day, but it can be increased to seven days. IoT Hub enables you to manage consumer groups on the built-in device-to-cloud receive endpoint. You can have up to 20 consumer groups for each IoT Hub. If you are using message routing and the fallback route is enabled, all messages that do not match a query on any route go to the built-in endpoint. If you disable this fallback route, messages that don’t match any query are dropped. Retention time can modified programmatically or through the Azure portal. IoT Hub exposes the messages/events built-in endpoint for your back-end services to read the device-to-cloud messages. This endpoint is Event Hubs-compatible, which enables you to use any of the mechanisms the Event Hubs service supports for reading messages. For services that are aware of IoT Hub, you can use IoT hub service connection string to connect to the built-in endpoint. For services that are not aware of IoT Hub, you need an Event Hubs-compatible endpoint and Event Hubs-compatible name. You can retrieve these values from IoT hub service in the Azure portal by opening the Built-in endpoints blade. You can use any shared access policy that has the ServiceConnect permissions to connect to the specified Event Hubs. The following Azure products are aware of IoT Hub and you can easily create a service connection to them: Azure Functions. Azure Stream Analytics. Time Series Insights. Apache Storm spout. Apache Spark integration. Azure Databricks. Message routing can be used for: Sending device telemetry messages and events, namely device lifecycle events and device twin change events, to the built-in-endpoint and custom endpoints. Filtering data before routing it to various endpoints by applying queries. Message routing allows you to query on the message properties and message body as well as device twin tags and device twin properties. IoT Hub needs write access to these service endpoints for message routing to work. If you configure your endpoints through the Azure portal, the necessary permissions are added for you. Make sure you configure your services to support the expected throughput. For example, if you are using Event Hubs as a custom endpoint, you must configure the throughput units for that Event Hubs so it handle the ingress of events from IoT Hub. Similarly, when using a Service Bus Queue as an endpoint, you must configure the maximum size to ensure the queue can hold all the data ingressed. You many need to monitor your endpoints and make any necessary adjustments for the actual load. If a message matches multiple routes that point to the same endpoint, IoT Hub delivers the message to that endpoint only once. You do not need to configure deduplication on your Service Bus queue or topic. In partitioned queues, partition affinity guarantees message ordering. IoT hub supports Azure Storage containers, Event Hubs, Service Bus queues and Service Bus topics as custom endpoint. Azure Storage These are two storage services IoT Hub can route messages to — Azure Blob Storage and Azure Data Lake Storage Gen2 accounts. Both of these use blobs for their storage. Event Hubs Event Hubs is a service that processes large amounts of event data (telemetry) from devices and applications. After you collect data into Event Hubs, you can store the data using a storage cluster or transform it using a real-time analytics provider Service Bus Queues and Service Bus Topics Service Bus Queues and Topics must not have Sessions or Duplicate Detection enabled. If either of those options are enabled, the endpoint appears as Unreachable in the Azure portal. The fallback route sends all the messages that don’t satisfy query conditions on any of the existing routes to the built-in endpoint (message/events) that is compatible with Event Hubs. If message routing is turned on, you can enable the fallback route capability. Once a route is created, data stops flowing to the built-in endpoint, unless a route is created to that endpoint. If there are no routes to the built-in-endpoint and a fallback route is enabled, only messages that don’t match any query conditions on routes will be sent to the built-in-endpoint. Also, if all existing routes are deleted, fallback route must be enabled to receive all data the built-in-endpoint. You can enable/disable the fallback route in the Azure portal → Message Routing blade. You can also use Azure Resource Manager for FallbackRouteProperties to use a custom endpoint for fallback route. In additon to device telemetry, message routing also enables sending device twin change events, device lifecycle events, and digital twin change events. For example, if a route is created with data source set to device twin change events, IoT Hub sends messages to the endpoint that contain the change in the device twin. Similarly, if a route is created with data source set to device lifecycle events, IoT hub send a message indicating whether the device was deleted or created. When you route device-to-cloud telemetry messages using built-in endpoints, there is a slight increase in the end-to-end latency after the creation of the first route. In most cases, the average increase in latency is less than 500ms. You can monitor the latency using Routing: message latency for messages/events or d2c.endpoints.latency.builtIn.events IoT Hub metric. Creating or deleting any route after the first one does not impact the end-to-end latency. IoT Hub metrics lists all the metrics that are enabled by default for your IoT Hub. The Rest Api Get Endpoint Health can be used to get the health status of the endpoints. Message routing allows you to query on the message properties and message body as well as device twin tags and device twin properties. If the message body is not JSON, message routing can still route the message, but queries cannot be applied to the message body. Queries are boolean expression where a Boolean true makes the query succeed or fail. If the expression evaluates to null or undefined, it is treated as false and an error will be generated in diagnostic logs if there is a routing failure. The query syntax must be correct for the route to be saved and evaluated. The IoT Hub defines a common format for all device-to-cloud messaging for interoperability across protocols. IoT Hub assumes the following JSON representation of the message. System properties are added for all users and identify content of the message. Users can selectively add appplication properties to the message. IoT Hub device-to-cloud messaging is not case-sensitive. If you have multiple properties with the same name, IoT Hub will only send one of the properties. { \"message\": { \"systemProperties\": { \"contentType\": \"application/json\", \"contentEncoding\": \"UTF-8\", \"iothub-message-source\": \"deviceMessages\", \"iothub-enqueuedtime\": \"2017-05-08T18:55:31.8514657Z\" }, \"appProperties\": { \"processingPath\": \"{cold | warm | hot}\", \"verbose\": \"{true, false}\", \"severity\": 1-5, \"testDevice\": \"{true | false}\" }, \"body\": \"{\\\"Weather\\\":{\\\"Temperature\\\":50}}\" } } System properties help identify contents and source of the messages. Application properties are user-defined strings that can be added to the message. These fields are optional. A query on message system properties needs to be prefixed with the $ symbol. Queries on application properties are accessed with their name and should not be prefixed with the $ symbol. If an application property name begins with $, then IoT Hub will search for it in the system properties, and if it is not found, then it will look in the application properties. To query on system property contentEncoding: $contentEncoding = 'UTF-8' To query on application property processingPath: processingPath = 'hot' To combine these queries, you can use Boolean expressions and functions: $contentEncoding = 'UTF-8' AND processingPath = 'hot' To enable querying on message body, the message should be a JSON encoded in either UTF-8, UTF-16 or UTF-32. The contentType must be set to application/JSON and contentEncoding to one of the supported UTF encodings in the system properties. If these properties are not specified, IoT Hub will not evaluate the query expression on the message body. A query on the message body needs to be prefixed with the $body. Following are all valid query expressions: $body.Weather.HistoricalData[0].Month = 'Feb' $body.Weather.Temperature = 50 AND $body.Weather.IsEnabled length($body.Weather.Location.State) = 2 $body.Weather.Temperature = 50 AND processingPath = 'hot' Message routing enables you to query on Device Twin tags and properties, which are JSON objects. Querying on module twin is not supported. A sample of Device Twin tags and properties is shown below: { \"tags\": { \"deploymentLocation\": { \"building\": \"43\", \"floor\": \"1\" } }, \"properties\": { \"desired\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\" }, \"$metadata\" : {...}, \"$version\": 1 }, \"reported\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\", \"status\": \"success\" }, \"batteryLevel\": 55, \"$metadata\" : {...}, \"$version\": 4 } } } A query on device twin properties needs to be prefixed with the $twin. Use unique names in tags and properties as the query is not case-sensitive. Refrain from using twin, $twin, body, or $bosy, as a property names. Following are all valid query expressions: $twin.properties.desired.telemetryConfig.sendFrequency = '5m' $body.Weather.Temperature = 50 AND $twin.properties.desired.telemetryConfig.sendFrequency = '5m' $twin.tags.deploymentLocation.floor = 1 Message enrichment is the ability of the IoT Hub to stamp messages with additional information before the messages are sent to the designated endpoint. One reason to use message enrichments is to include data that can be used to simplify downstream processing. For example, enriching device telemetry messages with a device twin tag can reduce load on customers to make device twin API calls for this information. A message enrichment has three key elements: Enrichment name or key A value One or more endpoints for which the enrichment should be applied. The key is a string. A key can only contain alphanumeric characters or these special characters: hyphen(-), underscore (_), and period (.). The value can be any of the following examples: Any static string. The name of the IoT hub sending the message. This value is $iothubname. Information from the device twin, such as its path. Example would $twin.tags.field and $twin.tags.latitude. At this time, only $iothubname, $twin.tags, $twin.properties.desired, and $twin.properties.reported are supported variables for message enrichment. Message enrichments are added as application properties to messages sent to chosen endpoint(s). Enrichments are applied per endpoint. If you specify five enrichments to be stamped for a specific endpoint, all messages going to that endpoint are stamped with the same five enrichments. Limitations You can add up to 10 enrichments per IoT Hub. In the case of the free tier, only 2 enrichments are allowed. If you are applying an enrichment with a value set to a tag or property in the device twin, the value will be stamped as a string value. For example, if an enrichment value is set to $twin.tags.field, the messages will be stamped with the string “$twin.tags.field” rather than the value of that field from the twin. This happens in the following cases: Your IoT Hub is in the basic tier. Basic tier IoT hubs do not support device twins. Your IoT Hub is in the Standard tier, but the device sending the message has no device twin. Your IoT Hub is in the standared tier, but the device twin path used for the value of the enrichment does not exist. For example, if the enrichment value is set to $twin.tags.location, and the device twin does not have a location property under tags, the message is stamped with the string $twin.tags.location. Updates to a device twin can take up to five minutes to be reflected in the corresponding enrichment value. The total message size, including the enrichments, can’t exceed 256KB. If the message size exceeds 256 KB, the IoT Hub will drop the message. You can use IoT Hub metrics to identify and debug errors when messages are dropped. For example, you can monitor d2d.telemetry.egress.invalid. Message enrichments don’t apply to digital twin change events. Pricing Message enrichments are available at no extra charge. Currently, you are charged when you send a message to an IoT hub. You are only charged once for that message, even if the message goes to multiple endpoints. Each Azure subscription can have at most 50 IoT hubs, and at most one Free hub. Each IoT hub is provisioned with one or more units in a specific tier. The tier and number of units determine the maximum daily quota of messages that you send The message size used to calculate the daily quota is 0.5 KB for a free tier hub and 4 KB for all other tiers. The tier also determines the throttling limits that IoT Hub enforces on all operations. Operation throttles Operation throttles are rate limitations that are applied in minute ranges and are intended to prevent abuse. They are also subject to traffic shaping. Check this link to get the details of the throttles Azure IoT Edge enables you to scale out your IoT solution by packaging your business logic into standard containers. You can deploy these containers to any of your devices and monitor it all from the cloud. If you want to respond to emergencies as quickly as possible, you can run anomaly detection workloads at the edge. If you want to reduce bandwidth costs and avoid transferring terabytes of raw data, you can clean and aggregate the data locally then only send the insights to the cloud for analysis. Azure IoT Edge is made up of three components: * IoT Edge modules are containers that run Azure services, third-party services, or your own code. Modules are deployed to IoT Edge devices and execute locally on those devices. * The IoT Edge runtime runs on each IoT Edge device and manages the modules deployed to each device. * A cloud-based interface enables you to remotely monitor and manage IoT Edge devices. IoT Edge modules IoT Edge modules are units of execution, implemented as Docker compatible containers, that run your business logic at the edge. You can develop custom modules or package certain Azure services into modules that provide insights offline and at the edge. Azure services at the edge Azure IoT Edge allows you to deploy and execute complex azure services like Functions, Stream Analytics and Machine Learning on-premises. Bring your own code You can deploy you own code to your Azure IoT Edge devices. You can run the same code on a device or in the cloud. Azure IoT Edge supports both Linux and Windows so you can code to the platform of your choice. It supports Java, dotnet-core, node.js, C, and Python. IoT Edge runtime The Azure IoT Edge runtime sits on the IoT Edge device, and performs management and communication operations It supports both Linux and Windows operating systems and abstracts hardware details. Use a device smaller than a Raspberry Pi 3 if you are not processing much data, or use an industrial server to run resource-intensive workloads. IoT Edge Cloud Interface It is difficult to manage millions of devices of different makes and models and geographically scattered. Workloads are created and configured for a particular type of device, deployed to all of your devices, and monitored to catch any misbehaving devices. These activities cannot be done on a per device basis and must be done at scale. Cloud services allow you to: Create and configure a workload to be run on a specific type of device. Send a workload to a set of devices. Monitor workloads running on devices in the field. The IoT Edge runtime is a collection of programs that turn a device into an IoT Edge device. The IoT Edge runtime components enable IoT Edge devices to receive code to run at the edge and communicate the results. The IoT Edge Hub module of the runtime is responsible for communication. The IoT Edge Agent module deploys and monitors the modules. The IoT Edge Hub and the IoT Edge Agent modules are referred to as the runtime modules. IoT Edge Hub The IoT Edge hub acts as a local proxy for IoT Hub by exposing the same protocol endpoints as IoT Hub. This consistency means that clients can connect to the IoT Edge runtime just as they would to IoT Hub. IoT Edge hub supports clients that connect using MQTT or AMQP. It does not support clients that use HTTP. Module Communication IoT Edge hub facilitates module to module communication Using IoT Edge hub as a message broker keeps modules independent from each other. Modules only need to specify the inputs on which they accept messages and the outputs to which they write messages. A solution developer can stitch these inputs and outputs together so that the modules process data in the order specific to that solution. To send data to the IoT Edge hub, a module calls the SendEventAsync method. The first argument specifies on which output to send the message. The following pseudocode sends a message on output1: ModuleClient client = await ModuleClient.CreateFromEnvironmentAsync(transportSettings); await client.OpenAsync(); await client.SendEventAsync(\"output1\", message); To receive a message, register a callback that processes messages coming in on a specific input. The following pseudocode registers the function messageProcessor to be used for processing all messages received on input1: await client.SetInputMessageHandlerAsync(\"input1\", messageProcessor, userContext); The solution developer is responsible for specifying the rules that determine how IoT Edge passes messages between modules. Routing rules are defined in the cloud and pushed down to IoT Edge hub in its module twin. The IoT Edge agent is the other module that makes up the Azure IoT Edge runtime. It is responsible for instantiating modules, ensuring that they continue to run, and reporting the status of the modules back to IoT Hub. This configuration data is written as a property of the IoT Edge agent module twin. Deployment manifest The IoT Edge security daemon starts the IoT Edge agent on device startup. The agent retrieves its module twin from IoT Hub and inspects the deployment manifest. The deployment manifest is a JSON file that declares the modules that need to be started. Some interesting properties are: settings.image* - The container image that the IoT Edge agent uses to start the module. settings.createOptions - A string passed directly to the Moby container daemon when starting a module’s container. Adding options in this property allows for advanced configurations like port forwarding or mounting volumes into a module’s container. status - The state in which the IoT Edge agent places the module. The IoT Edge agent reports the status of each module back to the cloud in the reported properties. A difference between the desired property and the reported property is an indicator of a misbehaving device. The supported statuses are: Downloading Running Unhealthy Failed Stopped restartPolicy - How the IoT Edge agent restarts a module. Possible values include: Never - The IoT Edge agent nevers restarts the module. On-failure - If the module crashes, the IoT Edge agent restarts it. If the module shuts down cleanly, the IoT Edge agent does not restart it. On-unhealthy - If the module crashes or is considered unhealthy, the IoT Edge agent restarts it. Always - If the module crashes, is considered unhealthy, or shuts down in any way, the IoT Edge agent restarts it. imagePullPolicy* - Whether the IoT Edge agents attempts to pull the latest image for a module automatically or not. If you do not specify a value, the default is onCreate. Possible values includ: On-create - When starting a module or updating a module, the IoT Edge agent will attempt to pull the module image from the container registry. Never - The expectation is that the module image is cached on the device, and any module image updates are made manually or managed by a third party solution. Command-line tool The iotedge tool is a command-line tool that is used to manage the IoT Edge runtime. To view the available subcommands: iotedge help The iotedge command-line tool provides a number of commands to assist in the management of IoT Edge modules that are deployed to the device. To obtain a list of deployed modules sudo iotedge list To restart a specific module, sudo iotedge restart module-name To vies diagnostic logs related to a specific module, sudo iotedge logs module-name The iotedge tool is useful for troubleshooting configuration issues and performs a series of checks. To view a list of the available checks, iotedge check-list To execute the full list of checks, the iotedge tool must be run with elevated privileges: sudo iotedge check To understand how modules are developed, deployed, and maintained, it helps to think of the four conceptual elements of a module: A module image is a package containing the software that defines a module. A module instance is the specific unit of computation running the module image on an IoT Edge device. The module instance is started by the IoT Edge runtime. A module identity is a piece of informatio stored in IoT Hub, that is associated to each module instance. A module twin is a JSON document stored in IoT Hub, that contains state information for a module instance, including metadata, configurations, and conditions. Module images and instances IoT Edge module images contain applications that take advantage of the management, security, and communication features of the IoT Edge runtime. You can develop your own module images, or export one from a supported Azure service. The images exist in the cloud and they can be updated, changed, and deployed in different solutions. Each time a module image is deployed to a device and started by the IoT Edge runtime, a new instance of that module is created. Module images exist as container images in a repository, and module instances are containers on devices. Module identities When a new module instance is created by the IoT Edge runtime, the instance is associated with a corresponding module identity. The module identity is stored in the IoT Hub. It is used as the addressing and security scope for all local and cloud communications for that specific module instance. The identity associated with a module instance depends on the identity of the device on which the instance is running and the name you provide to that module in your solution. For example, if you deploy a module to a device called Hannover01, the IoT Edge runtime creates a corresponding module identity called /devices/Hannover01/modules/insight. Module Twins Each module instance also has a corresponding module twin that you can use to configure the module instance. The instance and the twin are associated with each other through the module identity. A module twin is a JSON document that stores module information and configuration properties. The structure of a module twin is the same as a device twin. // Create a ModuleClient object. This ModuleClient will act on behalf of a // module since it is created with a module's connection string instead // of a device connection string. ModuleClient client = new ModuleClient.CreateFromEnvironmentAsync(settings); await client.OpenAsync(); // Get the module twin Twin twin = await client.GetTwinAsync(); Offline Capabilities Azure IoT Edge modules can operate offline indefinitely after syncing with IoT Hub at least once. IoT Edge devices can also extend this offline capability to other IoT devices. The module twins for the IoT Edge hub and IoT Edge agent modules provide properties that can be used to manage module communication and lifecycle. Each module twin includes: Desired properties. - The solution backend can set desired properties, and the module can read them. The module can also receive notifications of changes in the desired properties. Desired properties are used along with reported properties to synchronize module configuration or conditions. Reported properties. - The module can set reported properties, and the solution backend can read and query them. Reported properties are used along with desired properties to synchronize module configuration or conditions. Edge Agent desired properties The module twin for the IoT Edge agent is called $edgeAgent and coordinates the communications between the IoT Edge agent running on a device and IoT Hub. The desired properties are set when applying a deployment manifest on a specific device as part of a single-device or at-scale deployment. You can find a list of properties and what they do at this location: https://learn.microsoft.com/en-us/training/modules/examine-azure-iot-edge-environment/5-module-twin-properties-of-edge-runtime-modules Edge Agent Reported Properties The IoT Edge agent reported properties include three main pieces of information: The status of the application of the last-seen desired properties; The status of the modules currently running on the device, as reported by the IoT Edge agent; and A copy of the desired properties currently running on the device. This last piece of information, a copy of the current desired properties, is useful to tell whether the device has applied the latest desired properties or is still running a previous deployment manifest. You can find a list of properties and what they do at this location: https://learn.microsoft.com/en-us/training/modules/examine-azure-iot-edge-environment/5-module-twin-properties-of-edge-runtime-modules EdgeHub desired properties The module twin for the IoT Edge hub is called $edgeHub` and coordinates the communications between the IoT Edge hub running on a device and IoT Hub. The desired properties are set when applying a deployment manifest on a specific device as part of a single-device or at-scale deployment. You can find a list of properties and what they do at this location: https://learn.microsoft.com/en-us/training/modules/examine-azure-iot-edge-environment/5-module-twin-properties-of-edge-runtime-modules The Azure IoT Edge security manager is a well-bounded security core for protecting the IoT Edge device and all its components by abstracting the secure silicon hardware. It is the focal point for security hardening and provides technology integration point to original equipment manufacturers (OEM). Figure 17. Microsoft Learn The responsibilities of the IoT Edge security manager include, but aren’t limited to: * Secured and measured bootstrapping of the Azure IoT Edge device. * Device identity provisioning and transition of trust where applicable. * Host and protect device components of cloud services like Device Provisioning Service. * Securely provision IoT Edge modules with unique identities. * Gatekeeper to device hardware root of trust through notary services. * Monitor the integrity of IoT Edge operations at runtime. IoT Edge security manager includes three components: * IoT Edge security daemon. * Hardware security module platform abstraction Layer (HSM PAL). * Optional but highly recommended hardware silicon root of trust or HSM. The IoT Edge security daemon is responsible for the logical operations of IoT Edge security manager. The IoT Edge security daemon follows two core principles: maximize operational integrity, and minimize bloat and churn. Physical access is always a threat to IoT devices. Hardware root of trust plays an important role in defending the integrity of the IoT Edge security daemon. Hardware root of trust come in two varieties: Secure elements for the protection of sensitive information like secrets and cryptographic keys. Secure enclaves for the protection of secrets like keys, and sensitive workloads like metering and billing. Two kinds of execution environments exist to use hardware root of trust: * The standard or rich execution environment (REE) that relies on the use of secure elements to protect sensitive information. * The trusted execution environment (TEE) that relies on the use of secure enclave technology to protect sensitive information and offer protection to software execution. For devices using secure enclaves as hardware root of trust, sensitive logic within IoT Edge security daemon should be inside the enclave. Non-sensitive portions of the security daemon can be outside of the TEE. For the highest level of trust, the IoT Edge security daemon can tightly couple with the device hardware root of trust and operate as native code. The IoT Edge security daemon takes advantage of any available hardware root of trust technology for security hardening. It also allows for split-world operation between a standard/rich execution environment (REE) and a trusted execution environment (TEE) when hardware technologies offer trusted execution environments. Role-specific interfaces enable the major components of IoT Edge to assure the integrity of the IoT Edge device and its operations The cloud interface allows the IoT Edge security daemon to access cloud services such as cloud compliments to device security like security renewal. For example, the IoT Edge security daemon currently uses this interface to access the Azure IoT Hub Device Provisioning Service for device identity lifecycle management. IoT Edge security daemon offers a management API, which is called by the IoT Edge agent when creating/starting/stopping/removing an IoT Edge module. The security daemon stores “registrations” for all active modules. These registrations map a module’s identity to some properties of the module. A few examples for these properties are the process identifier (pid) of the process running in the container or the hash of the docker container’s contents. These properties are used by the workload API to verify that the caller is authorized to perform an action. The management API is a privileged API, callable only from the IoT Edge agent. Since the IoT Edge security daemon bootstraps and starts the IoT Edge agent, it can create an implicit registration for the IoT Edge agent, after it has attested that the IoT Edge agent has not been tampered with. The same attestation process that the workload API uses also restricts access to the management API to only the IoT Edge agent. The container API interacts with the container system in use for module management, like Moby or Docker. The workload API is accessible to all modules. It provides proof of identity, either as an HSM rooted signed token or an X509 certificate, and the corresponding trust bundle to a module. The trust bundle contains CA certificates for all the other servers that the modules should trust. The IoT Edge security daemon uses an attestation process to guard this API. When a module calls this API, the security daemon attempts to find a registration for the identity. If successful, it uses the properties of the registration to measure the module. If the result of the measurement process matches the registration, a new proof of identity is generated. The corresponding CA certificates (trust bundle) are returned to the module. The module uses this certificate to connect to IoT Hub, other modules, or start a server. When the signed token or certificate nears expiration, it’s the responsibility of the module to request a new certificate. Microsoft maintains the main code base for the IoT Edge security daemon on GitHub. Installation and updates of the IoT Edge security daemon are managed through the operating system’s package management system. IoT Edge devices with hardware root of trust should provide extra hardening to the integrity of the daemon by managing its lifecycle through the secure boot and updates management systems. The IoT Edge runtime tracks and reports the version of the IoT Edge security daemon. The version is reported as the runtime.platform.version attribute of the IoT Edge agent module reported property. The HSM PAL abstracts all root of trust hardware to isolate the developer or user of IoT Edge from their complexities. It includes a combination of application programming interface (API) and trans-domain communication procedures, for example communication between a standard execution environment and a secure enclave. The actual implementation of the HSM PAL depends on the specific secure hardware in use. Its existence enables the use of virtually any secure silicon hardware. Secure silicon is necessary to anchor trust inside the IoT Edge device hardware. Secure silicon come in variety to include Trusted Platform Module (TPM), embedded Secure Element (eSE), Arm TrustZone, Intel SGX, and custom secure silicon technologies. The use of secure silicon root of trust in devices is recommended given the threats associated with physical accessibility of IoT devices. The IoT Edge security manager aims to identify and isolate the components that defend the security and integrity of the Azure IoT Edge platform for custom hardening. Third parties, like device makers, should make use of custom security features available with their device hardware. To establish a secure TLS connection, the IoT Edge hub module presents a server certificate chain to connecting clients in order for them to verify its identity. The IoT Edge certificates discussed in this topic and the Azure IoT Hub certificates that the hub uses to authenticate devices are two different things. This topic discusses the certificates that are used to secure connections between the different components on an IoT Edge device or between an IoT Edge device and any leaf devices. You may also use certificates to authenticate your IoT Edge device to IoT Hub. Those authentication certificates are different There are two common scenarios for setting up certificates on an IoT Edge device. Sometimes the end user, or operator, of a device purchases a generic device made by a manufacturer then manages the certificates themselves. Other times, the manufacturer works under contract to build a custom device for the operator and does some initial certificate signing before handing off the device. The IoT Edge certificate design attempts to take both scenarios into account. There may be zero, one, or many intermediate signing certificates between the root CA certificate and the device CA certificate, depending on the number of entities involved. The certificate authority, or 'CA' for short, is an entity that issues digital certificates. A certificate authority acts as a trusted third party between the owner, and the receiver of the certificate. A digital certificate certifies the ownership of a public key by the receiver of the certificate. The certificate chain of trust works by initially issuing a root certificate, which is the basis for trust in all certificates issued by the authority. Afterwards, the owner can use the root certificate to issue more intermediate certificates ('leaf' certificates). A root CA certificate is the root of trust of the entire process. In production scenarios, this CA certificate can be purchased from a trusted commercial certificate authority like Baltimore, Verisign, or DigiCert. Should you have complete control over the devices connecting to your IoT Edge devices, it’s possible to use a corporate level certificate authority. In either event, the entire certificate chain from the IoT Edge hub up rolls up to it, so the leaf IoT devices must trust the root certificate. You can store the root CA certificate either in the trusted root certificate authority store, or provide the certificate details in your application code. In a typical manufacturing process for creating secure devices, root CA certificates are rarely used directly, primarily because of the risk of leakage or exposure. The root CA certificate creates and digitally signs one or more intermediate CA certificates. There may only be one, or there may be a chain of these intermediate certificates. Scenarios that would require a chain of intermediate certificates include: A hierarchy of departments within a manufacturer. Multiple companies involved serially in the production of a device. A customer buying a root CA and deriving a signing certificate for the manufacturer to sign the devices they make on that customer’s behalf. In any case, the manufacturer uses an intermediate CA certificate at the end of this chain to sign the device CA certificate placed on the end device. Generally, these intermediate certificates are closely guarded at the manufacturing plant. They undergo strict processes, both physical and electronic for their usage. The edge (device) CA certificate is generated from and signed by the final intermediate CA certificate in the process. This certificate is installed on the IoT Edge device itself, preferably in secure storage such as a hardware security module (HSM). In addition, an edge CA certificate uniquely identifies an IoT Edge device. The edge CA certificate can sign other certificates. The IoT Edge hub server certificate is the actual certificate presented to leaf devices and modules for identity verification during establishment of the TLS connection required by IoT Edge. This certificate presents the full chain of signing certificates used to generate it up to the root CA certificate, which the leaf IoT device must trust. When generated by IoT Edge, the common name (CN), of this IoT Edge hub certificate is set to the 'hostname' property in the config file after conversion to lower case. A reasonable question might be \"why does IoT Edge need the 'workload CA' extra certificate? Couldn’t it use the device CA certificate to directly generate the IoT Edge hub server certificate?\". Technically, it could. However, the purpose of this \"workload\" intermediate certificate is to separate concerns between the device manufacturer and the device operator. Imagine a scenario where an IoT Edge device is sold or transferred from one customer to another. You would likely want the device CA certificate provided by the manufacturer to be immutable. However, the \"workload\" certificates specific to operation of the device should be wiped and recreated for the new deployment. Because manufacturing and operation processes are separated, consider the following implications when preparing production devices: With any certificate-based process, the root CA certificate and all intermediate CA certificates should be secured and monitored during the entire process of rolling out an IoT Edge device. The IoT Edge device manufacturer should have strong processes in place for proper storage and usage of their intermediate certificates. In addition, the device CA certificate should be kept in as secure storage as possible on the device itself, preferably a hardware security module. The IoT Edge hub server certificate is presented by IoT Edge hub to the connecting client devices and modules. The common name (CN) of the device CA certificate must not be the same as the \"hostname\" that will be used in the config file on the IoT Edge device. The name used by clients to connect to IoT Edge (for example, via the GatewayHostName parameter of the connection string or the CONNECT command in MQTT) can’t be the same as the common name used in the device CA certificate. This restriction is because the IoT Edge hub presents its entire certificate chain for verification by clients. If the IoT Edge hub server certificate and the device CA certificate both have the same CN, you get in a verification loop and the certificate invalidates. Because the device CA certificate is used by the IoT Edge security daemon to generate the final IoT Edge certificates, it must itself be a signing certificate, meaning it has certificate signing capabilities. Applying \"V3 Basic constraints CA:True\" to the device CA certificate automatically sets up the required key usage properties. To ease development and test scenarios, Microsoft provides a set of convenience scripts for generating non-production certificates suitable for IoT Edge in the transparent gateway scenario. The following commands generate the \"root CA certificate\" and a single \"intermediate CA certificate\": ./certGen.sh create_root_and_intermediate New-CACertsCertChain rsa Likewise, these commands generate the \"Device CA Certificate\". ./certGen.sh create_edge_device_ca_certificate \"\" New-CACertsEdgeDeviceCA \"\" To illustrate an example of this certificate path, the following screenshot is from a working IoT Edge device set up as a transparent gateway. OpenSSL is used to connect to the IoT Edge hub, validate, and dump out the certificates. You can see the hierarchy of certificate depth represented in the screenshot: Table 1. Heirarchy Root CA Certificate Azure IoT Hub CA Cert Test Only Intermediate CA Certificate Azure IoT Hub intermediate certification test only. Edge CA Certificate iotgateway.ca (\"iotgateway\" was passed in as the to the convenience scripts). IoT Edge Hub Server Certificate iotedgegw.local (matches the 'hostname' from config.yaml). Azure IoT Edge devices follow a device lifecycle that is similar to other types of IoT devices: Provision new IoT Edge devices by imaging a device with an OS and installing the IoT Edge runtime. Configure the devices to run IoT Edge modules, and then monitor their health. Finally, retire devices when they are replaced or become obsolete. Azure IoT Edge provides two ways to configure the modules to run on IoT Edge devices: One for development and fast iterations on a single device. One for managing large fleets of IoT Edge devices. Both approaches can be implemented either programmatically or by using the Azure portal. We use the term IoT Edge automatic deployments to refer to configuration and monitoring stages for fleets of devices. When targeting groups or a large number of devices, you can use tags in the device twins to specify which devices you’d like your modules deployed to. At a high level, IoT Edge automatic deployments include the following steps: An operator defines a deployment that describes a set of modules and the target devices. Each deployment has a deployment manifest that reflects this information. The IoT Hub service communicates with all targeted devices to configure them with the desired modules. The IoT Hub service retrieves status from the IoT Edge devices and makes them available to the operator. For example, an operator can see when an IoT Edge device is not configured successfully or if a module fails during runtime. At any time, new IoT Edge devices that meet the targeting conditions are configured for the deployment. For example, a deployment that targets all IoT Edge devices in Washington State automatically configures a new IoT Edge device once it is provisioned and added to the Washington State device group. An IoT Edge automatic deployment works by configuring an IoT Edge deployment manifest to include a list of modules with the corresponding initialization parameters. Once an IoT Edge device receives a deployment manifest, it downloads and installs the container images from the respective container repositories, and configures them accordingly. Once a deployment is created, an operator can monitor the deployment status to see whether targeted devices are correctly configured. Only IoT Edge devices can be configured with a deployment. The following prerequisites must be on the device before it can receive the deployment: The base operating system. A container management system, like Moby or Docker. Provisioning of the IoT Edge runtime. A deployment manifest is a JSON document that describes the modules to be configured on the targeted IoT Edge devices. It contains the configuration metadata for all the modules, including the required system modules. The configuration metadata for each module includes: Version. Type. Status (for example, running or stopped). Restart policy. Image and container registry. Routes for data input and output. If the module image is stored in a private container registry, the IoT Edge agent holds the registry credentials. The target condition is continuously evaluated throughout the lifetime of the deployment. Any new devices that meet the requirements are included, and any existing devices that no longer do are removed. The deployment is reactivated if the service detects any target condition change. Use any Boolean condition on device twins tags or deviceId to select the target devices. If you want to use condition with tags, you need to add \"tags\":{} section in the device twin under the same level as properties. Target condition examples: deviceId ='linuxprod1' tags.environment ='prod' tags.environment = 'prod' AND tags.location = 'westus' tags.environment = 'prod' OR tags.location = 'westus' tags.operator = 'John' AND tags.environment = 'prod' AND NOT deviceId = 'linuxprod1' properties.reported.devicemodel = '4000x' Here are some constraints when you construct a target condition: In device twin, you can only build a target condition using tags, reported properties, or deviceId. Double quotes aren’t allowed in any portion of the target condition. Use single quotes. Single quotes represent the values of the target condition. Therefore, you must escape the single quote with another single quote if it’s part of the device name. For example, to target a device called \"operator’s Device\", write deviceId='operator''sDevice'. Numbers, letters, and the following characters are allowed in target condition values: -:.+%_#*?!(),=@;$. A priority defines whether a deployment should be applied to a targeted device relative to other deployments. A deployment priority is a positive integer, with larger numbers denoting higher priority. If an IoT Edge device is targeted by more than one deployment, the deployment with the highest priority applies. Deployments with lower priorities are not applied, nor are they merged. If a device is targeted with two or more deployments with equal priority, the most recently created deployment (determined by the creation timestamp) applies. Labels are string key/value pairs that you can use to filter and group deployments. A deployment may have multiple labels. Labels are optional and do no impact the actual configuration of IoT Edge devices. By default, all deployments report on four metrics: Targeted shows the IoT Edge devices that match the Deployment targeting condition. Applied shows the targeted IoT Edge devices that are not targeted by another deployment of higher priority. Reporting Success shows the IoT Edge devices that have reported that the modules have been deployed successfully. Reporting Failure shows the IoT Edge devices that have reported that one or more modules haven’t been deployed successfully. To further investigate the error, connect remotely to those devices and view the log files. You can define your own custom metrics to help monitor and manage the deployment. Metrics provide summary counts of the various states that devices may report back as a result of applying a deployment configuration. Metrics can query edgeHub module twin reported properties, like lastDesiredStatus or lastConnectTime. A phased rollout is an overall process whereby an operator deploys changes to a broadening set of IoT Edge devices. The goal is to make changes gradually to reduce the risk of making wide scale breaking changes. A phased rollout is executed in the following phases and steps: Establish a test environment of IoT Edge devices by provisioning them and setting a device twin tag like tag.environment='test'. The test environment should mirror the production environment that the deployment will eventually target. Create a deployment including the desired modules and configurations. The targeting condition should target the test IoT Edge device environment. Validate the new module configuration in the test environment. Update the deployment to include a subset of production IoT Edge devices by adding a new tag to the targeting condition. Also, ensure that the priority for the deployment is higher than other deployments currently targeted to those devices. Verify that the deployment succeeded on the targeted IoT Devices by viewing the deployment status. Update the deployment to target all remaining production IoT Edge devices. Layered deployments are automatic deployments that can be combined together to reduce the number of unique deployments that need to be created. Layered deployments are useful in scenarios where the same modules are reused in different combinations in many automatic deployments. Layered deployments target devices based on tags in the device twins. Layered deployments also have priorities assigned to them, but instead of using the priority to determine which deployment is applied to a device, the priority determines how multiple deployments are ranked on a device. For example, if two layered deployments have a module or a route with the same name, the layered deployment with the higher priority will be applied while the lower priority is overwritten. The system runtime modules, edgeAgent and edgeHub, are not configured as part of a layered deployment. Any IoT Edge device targeted by a layered deployment needs a standard automatic deployment applied to it first. The automatic deployment provides the base upon which layered deployments can be added. An IoT Edge device can apply one and only one standard automatic deployment, but it can apply multiple layered automatic deployments. Any layered deployments targeting a device must have a higher priority than the automatic deployment for that device. For example, consider the following scenario of a company that manages buildings. With standard automatic deployments, the company needs to create individual deployments for all the module combinations that their buildings need. image https://learn.microsoft.com/en-us/training/wwl-azure/examine-iot-edge-device-deployment/media/m06-l03-layered-deployment-1-a39f9bda.png However, once the company switches to layered automatic deployments they find that they can create the same module combinations for their buildings with fewer deployments to manage. Each module has its own layered deployment, and the device tags identify which modules get added to each building. Deployments can be rolled back if you receive errors or misconfigurations. Deleting a deployment doesn’t remove the modules from targeted devices. There must be another deployment that defines a new configuration for the devices, even if it’s an empty deployment. Perform rollbacks in the following sequence: Confirm that a second deployment is also targeted at the same device set. If the goal of the rollback is to remove all modules, the second deployment should not include any modules. Modify or remove the target condition expression of the deployment you wish to roll back so that the devices no longer meet the targeting condition. Verify that the rollback succeeded by viewing the deployment status. The rolled-back deployment should no longer show status for the devices that were rolled back. The second deployment should now include deployment status for the devices that were rolled back. The deployment manifest tells your device which modules to install and how to configure them to work together. The deployment manifest is a JSON document that describes: The IoT Edge agent module twin, which includes three components. The container image for each module that runs on the device. The credentials to access private container registries that contain module images. Instructions for how each module should be created and managed. The IoT Edge hub module twin, which includes how messages flow between modules and eventually to IoT Hub. Optionally, the desired properties of any other module twins. All IoT Edge devices must be configured with a deployment manifest. A newly installed IoT Edge runtime reports an error code until configured with a valid manifest. You can create a deployment manifest using the Azure IoT Edge portal, REST APIs, or the IoT Hub Service SDK. At a high level, a deployment manifest is a list of module twins that are configured with their desired properties. A deployment manifest tells an IoT Edge device (or a group of devices) which modules to install and how to configure them. Deployment manifests include the desired properties for each module twin. IoT Edge devices report back the reported properties for each module. Two modules are required in every deployment manifest: $edgeAgent, and $edgeHub. These modules are part of the IoT Edge runtime that manages the IoT Edge device and the modules running on it. In addition to the two runtime modules, you can add up to 50 modules of your own to run on an IoT Edge device. A deployment manifest that contains only the IoT Edge runtime (edgeAgent and edgeHub) is valid. Deployment manifests follow this structure: { \"modulesContent\": { \"$edgeAgent\": { // required \"properties.desired\": { // desired properties of the Edge agent // includes the image URIs of all modules // includes container registry credentials } }, \"$edgeHub\": { //required \"properties.desired\": { // desired properties of the Edge hub // includes the routing information between modules, and to IoT Hub } }, \"module1\": { // optional \"properties.desired\": { // desired properties of module1 } }, \"module2\": { // optional \"properties.desired\": { // desired properties of module2 } } } } The IoT Edge agent is the runtime component that manages installation, updates, and status reporting for an IoT Edge device. Therefore, the $edgeAgent module twin requires the configuration and management information for all modules. For a complete list of properties that can or must be included, see Properties of the IoT Edge agent and IoT Edge hub module twins. The $edgeAgent properties follow this structure: \"$edgeAgent\": { \"properties.desired\": { \"schemaVersion\": \"1.1\", \"runtime\": { \"settings\":{ \"registryCredentials\":{ // give the edge agent access to // container images that aren't public } } }, \"systemModules\": { \"edgeAgent\": { // configuration and management details }, \"edgeHub\": { // configuration and management details } }, \"modules\": { \"module1\": { // optional // configuration and management details }, \"module2\": { // optional // configuration and management details } } } }, The IoT Edge hub manages communication between modules, IoT Hub, and any leaf devices. Therefore, the $edgeHub module twin contains a desired property called routes that declares how messages are passed within a deployment. You can have multiple routes within the same deployment. Routes are declared in the $edgeHub desired properties with the following syntax: \"$edgeHub\": { \"properties.desired\": { \"routes\": { \"route1\": \"FROM WHERE INTO \", \"route2\": \"FROM WHERE INTO \" }, } } Every route needs a source and a sink, but the condition is an optional piece that you can use to filter messages. The source specifies where the messages come from. IoT Edge can route messages from modules or leaf devices. Using the IoT SDKs, modules can declare specific output queues for their messages using the ModuleClient class. Output queues aren’t necessary, but are helpful for managing multiple routes. Leaf devices can use the DeviceClient class of the IoT SDKs to send messages to IoT Edge gateway devices in the same way that they would send messages to IoT Hub. The source property can be any of the following values: Source Description /* All device-to-cloud messages or twin change notifications from any module or leaf device. /twinChangeNotifications Any twin change (reported properties) coming from any module or leaf device. /messages/* Any device-to-cloud message sent by a module through some or no output, or by a leaf device. /messages/modules/* Any device-to-cloud message sent by a module through some or no output. /messages/modules//* Any device-to-cloud message sent by a specific module through some or no output. /messages/modules//outputs/* Any device-to-cloud message sent by a specific module through some output. /messages/modules//outputs/ Any device-to-cloud message sent by a specific module through a specific output. The condition is optional in a route declaration. If you want to pass all messages from the source to the sink, just leave out the WHERE clause entirely. Or you can use the IoT Hub query language to filter for certain messages or message types that satisfy the condition. IoT Edge routes don’t support filtering messages based on twin tags or properties. The messages that pass between modules in IoT Edge are formatted the same as the messages that pass between your devices and Azure IoT Hub. All messages are formatted as JSON and have systemProperties, appProperties, and body parameters. You can build queries around any of the three parameters with the following syntax: System properties: $ or \\{$} Application properties: Body properties: $body. An example that is specific to IoT Edge is when you want to filter for messages that arrived at a gateway device from a leaf device. Messages that come from modules include a system property called connectionModuleId. So if you want to route messages from leaf devices directly to IoT Hub, use the following route to exclude module messages: FROM /messages/* WHERE NOT IS_DEFINED($connectionModuleId) INTO $upstream The sink defines where the messages are sent. Only modules and IoT Hub can receive messages. Messages can’t be routed to other devices. There are no wildcard options in the sink property. The sink property can be any of the following values: Sink Description $upstream Send the message to IoT Hub. BrokeredEndpoint(\"/modules//inputs/\") Send the message to a specific input of a specific module. IoT Edge provides at-least-once guarantees. The IoT Edge hub stores messages locally in case a route can’t deliver the message to its sink. For example, if the IoT Edge hub can’t connect to IoT Hub, or the target module isn’t connected. IoT Edge hub stores the messages up to the time specified in the storeAndForwardConfiguration.timeToLiveSecs property of the IoT Edge hub desired properties. The deployment manifest specifies desired properties for each module deployed to the IoT Edge device. Desired properties in the deployment manifest overwrite any desired properties currently in the module twin. If you do not specify a module twin’s desired properties in the deployment manifest, IoT Hub won’t modify the module twin in any way. Instead, you can set the desired properties programmatically. The same mechanisms that allow you to modify device twins are used to modify module twins. The following example shows what a valid deployment manifest document may look like. { \"modulesContent\": { \"$edgeAgent\": { \"properties.desired\": { \"schemaVersion\": \"1.1\", \"runtime\": { \"type\": \"docker\", \"settings\": { \"minDockerVersion\": \"v1.25\", \"loggingOptions\": \"\", \"registryCredentials\": { \"ContosoRegistry\": { \"username\": \"myacr\", \"password\": \"\", \"address\": \"myacr.azurecr.io\" } } } }, \"systemModules\": { \"edgeAgent\": { \"type\": \"docker\", \"settings\": { \"image\": \"mcr.microsoft.com/azureiotedge-agent:1.1\", \"createOptions\": \"{}\" } }, \"edgeHub\": { \"type\": \"docker\", \"status\": \"running\", \"restartPolicy\": \"always\", \"settings\": { \"image\": \"mcr.microsoft.com/azureiotedge-hub:1.1\", \"createOptions\": \"{\\\"HostConfig\\\":{\\\"PortBindings\\\":{\\\"443/tcp\\\":[{\\\"HostPort\\\":\\\"443\\\"}],\\\"5671/tcp\\\":[{\\\"HostPort\\\":\\\"5671\\\"}],\\\"8883/tcp\\\":[{\\\"HostPort\\\":\\\"8883\\\"}]}}}\" } } }, \"modules\": { \"SimulatedTemperatureSensor\": { \"version\": \"1.0\", \"type\": \"docker\", \"status\": \"running\", \"restartPolicy\": \"always\", \"settings\": { \"image\": \"mcr.microsoft.com/azureiotedge-simulated-temperature-sensor:1.0\", \"createOptions\": \"{}\" } }, \"filtermodule\": { \"version\": \"1.0\", \"type\": \"docker\", \"status\": \"running\", \"restartPolicy\": \"always\", \"settings\": { \"image\": \"myacr.azurecr.io/filtermodule:latest\", \"createOptions\": \"{}\" } } } } }, \"$edgeHub\": { \"properties.desired\": { \"schemaVersion\": \"1.0\", \"routes\": { \"sensorToFilter\": \"FROM /messages/modules/SimulatedTemperatureSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\\\"/modules/filtermodule/inputs/input1\\\")\", \"filterToIoTHub\": \"FROM /messages/modules/filtermodule/outputs/output1 INTO $upstream\" }, \"storeAndForwardConfiguration\": { \"timeToLiveSecs\": 10 } } } } } When you’re ready to take your IoT Edge solution from development into production, having a checklist will help you to ensure that your solution is configured for ongoing performance. Each section below begins by dividing associated work into two sections: important to complete before going to production, or helpful for you to know. This distinction is helpful when prioritizing efforts. IoT Edge devices can be anything from a Raspberry Pi to a laptop to a virtual machine running on a server. You may have access to the device either physically or through a virtual connection, or it may be isolated for extended periods of time. Either way, you want to make sure that it’s configured to work appropriately. Important Install production certificates. Have a device management plan. Use Moby as the container engine. Helpful Choose upstream protocol. Every IoT Edge device in production needs a device certificate authority (CA) certificate installed on it. That CA certificate is then declared to the IoT Edge runtime in the config.yaml file. To make development and testing easier, the IoT Edge runtime creates temporary certificates if no certificates are declared in the config.yaml file. However, these temporary certificates expire after three months and aren’t secure for production scenarios. The steps for configuring the certificates are the same whether the device is going to be used as a gateway or not. You can generate sample certificates for testing, but never use sample certificates in production. Before you put any device in production you should know how you’re going to manage future updates. For an IoT Edge device, the list of components to update may include: Device firmware. Operating system libraries. Container engine, like Moby. IoT Edge daemon. CA certificates. The current methods for updating the IoT Edge daemon require physical or SSH access to the IoT Edge device. If you have many devices to update, consider adding the update steps to a script or use an automation tool like Ansible. A container engine is a prerequisite for any IoT Edge device. Only moby-engine is supported in production. Other container engines, like Docker, do work with IoT Edge and it’s ok to use these engines for development. The moby-engine can be redistributed when used with Azure IoT Edge, and Microsoft provides servicing for this engine. The protocol (and therefore the port used) for upstream communication to IoT Hub can be configured for both the IoT Edge agent and the IoT Edge hub. The default protocol is AMQP, but you may want to change that depending on your network setup. The two runtime modules both have an UpstreamProtocol environment variable. The valid values for the variable are: MQTT AMQP MQTTWS AMQPWS Configure the UpstreamProtocol variable for the IoT Edge agent in the config.yaml file on the device itself. For example, if your IoT Edge device is behind a proxy server that blocks AMQP ports, you may need to configure the IoT Edge agent to use AMQP over WebSocket (AMQPWS) to establish the initial connection to IoT Hub. Once your IoT Edge device connects, be sure to continue configuring the UpstreamProtocol variable for both runtime modules in future deployments. An example of this process is provided in Configure an IoT Edge device to communicate through a proxy server. For your Deployment checklist, the following items fall into the helpful category. If you configured the IoT Edge agent on your IoT Edge device to use a different protocol than the default AMQP, then you should declare the same protocol in all future deployments. For example, if your IoT Edge device is behind a proxy server that blocks AMQP ports, you probably configured the device to connect over AMQP over WebSocket (AMQPWS). When you deploy modules to the device, configure the same AMQPWS protocol for the IoT Edge agent and IoT Edge hub, or else the default AMQP will override the settings and prevent you from connecting again. You only have to configure the UpstreamProtocol environment variable for the IoT Edge agent and IoT Edge hub modules. Any other modules adopt whatever protocol is set in the runtime modules. The IoT Edge hub and agent modules use local storage to maintain state and enable messaging between modules, devices, and the cloud. For better reliability and performance, configure the system modules to use storage on the host filesystem. If you’re deploying constrained devices with limited memory available, you can configure IoT Edge hub to run in a more streamlined capacity and use less disk space. These configurations do limit the performance of the IoT Edge hub, however, so find the right balance that works for your solution. Three guidelines that you can follow are: Don’t optimize for performance on constrained devices. Disable unused protocols. Do not use debug versions of module images. For your Container management checklist, the following items fall into the important category. A tag is a docker concept that you can use to distinguish between versions of docker containers. Tags are suffixes like 1.0 that go on the end of a container repository. For example, mcr.microsoft.com/azureiotedge-agent:1.0. Tags are mutable and can be changed to point to another container at any time, so your team should agree on a convention to follow as you update your module images moving forward. Tags also help you to enforce updates on your IoT Edge devices. When you push an updated version of a module to your container registry, increment the tag. Then, push a new deployment to your devices with the tag incremented. The container engine will recognize the incremented tag as a new version and will pull the latest module version down to your device. The IoT Edge agent and IoT Edge hub images are tagged with the IoT Edge version that they are associated with. here are two different ways to use tags with the runtime images: Rolling tags - Use only the first two values of the version number to get the latest image that matches those digits. For example, 1.1 is updated whenever there’s a new release to point to the latest 1.1.x version. If the container runtime on your IoT Edge device pulls the image again, the runtime modules are updated to the latest version. Deployments from the Azure portal default to rolling tags. This approach is suggested for development purposes. Specific tags - Use all three values of the version number to explicitly set the image version. For example, 1.1.0 won’t change after its initial release. You can declare a new version number in the deployment manifest when you’re ready to update. This approach is suggested for production purposes. For your Networking checklist, the following items fall into the helpful category. Communication channels between Azure IoT Hub and IoT Edge are always configured to be outbound. For most IoT Edge scenarios, only three connections are necessary. The container engine needs to connect with the container registry (or registries) that holds the module images. The IoT Edge runtime needs to connect with IoT Hub to retrieve device configuration information, and to send messages and telemetry. And if you use automatic provisioning, the IoT Edge daemon needs to connect to the Device Provisioning Service. If your networking setup requires that you explicitly permit connections made from IoT Edge devices, review the following list of IoT Edge components: IoT Edge agent opens a persistent AMQP/MQTT connection to IoT Hub, possibly over WebSockets. IoT Edge hub opens a single persistent AMQP connection or multiple MQTT connections to IoT Hub, possibly over WebSockets. IoT Edge daemon makes intermittent HTTPS calls to IoT Hub. In all three cases, the DNS name would match the pattern *.azure-devices.net. Additionally, the Container engine makes calls to container registries over HTTPS. To retrieve the IoT Edge runtime container images, the DNS name is mcr.microsoft.com. The container engine connects to other registries as configured in the deployment. If your devices are going to be deployed on a network that uses a proxy server, they need to be able to communicate through the proxy to reach IoT Hub and container registries. For your Solution management checklist, the following items fall into the helpful category. On Linux, the IoT Edge daemon uses journals as the default logging driver. You can use the command-line tool journalctl to query the daemon logs. On Windows, the IoT Edge daemon uses PowerShell diagnostics. Use Get-IoTEdgeLog to query logs from the daemon. IoT Edge modules use the JSON driver for logging, which is the default. When you’re testing an IoT Edge deployment, you can usually access your devices to retrieve logs and troubleshoot. In a deployment scenario, you may not have that option. Consider how you’re going to gather information about your devices in production. One option is to use a logging module that collects information from the other modules and sends it to the cloud. By default the Moby container engine does not set container log size limits. Over time this can lead to the device filling up with logs and running out of disk space. For the most efficient IoT Edge deployment scenario, consider integrating your production deployment into your testing and CI/CD pipelines. Azure IoT Edge supports multiple CI/CD platforms, including Azure DevOps. Gateways in IoT Edge solutions provide device connectivity and edge analytics to IoT devices that otherwise wouldn’t have those capabilities. Azure IoT Edge can be used to satisfy all needs for an IoT gateway regardless of whether they are related to connectivity, identity, or edge analytics. Gateway patterns refer to characteristics of downstream device connectivity and device identity, not how device data is processed on the gateway. There are three patterns for using an IoT Edge device as a gateway: transparent, protocol translation, and identity translation: Transparent Devices that theoretically could connect to IoT Hub can connect to a gateway device instead. The downstream devices have their own IoT Hub identities and are using any of the MQTT, AMQP, or HTTP protocols. The gateway simply passes communications between the devices and IoT Hub. The devices are unaware that they are communicating with the cloud via a gateway, and a user interacting with the devices in IoT Hub is unaware of the intermediate gateway device. Thus, the gateway is transparent. Protocol translation Also known as an opaque gateway pattern, devices that do not support MQTT, AMQP, or HTTP can use a gateway device to send data to IoT Hub on their behalf. The gateway understands the protocol used by the downstream devices and is the only device that has an identity in IoT Hub. All information looks like it is coming from one device, the gateway. Downstream devices must embed extra identifying information in their messages if cloud applications want to analyze the data on a per-device basis. Additionally, IoT Hub primitives like twins and methods are only available for the gateway device, not downstream devices. Identity translation Devices that cannot connect to IoT Hub directly can connect to a gateway device instead. The gateway provides IoT Hub identity and protocol translation on behalf of the downstream devices. The gateway is smart enough to understand the protocol used by the downstream devices, provide them identity, and translate IoT Hub primitives. Downstream devices appear in IoT Hub as first-class devices with twins and methods. A user can interact with the devices in IoT Hub and is unaware of the intermediate gateway device. image https://learn.microsoft.com/en-us/training/wwl-azure/examine-iot-edge-gateway-device-configuration/media/m06-l03-iot-edge-gateway-8836b3a3.png All gateway patterns provide the following benefits: Analytics at the edge Use AI services locally to process data coming from downstream devices without sending full-fidelity telemetry to the cloud. Find and react to insights locally and only send a subset of data to IoT Hub. Downstream device isolation The gateway device can shield all downstream devices from exposure to the Internet. It can sit in between an OT network that does not have connectivity and an IT network that provides access to the web. Connection multiplexing All devices connecting to IoT Hub through an IoT Edge gateway use the same underlying connection. Traffic smoothing The IoT Edge device will automatically implement exponential backoff if IoT Hub throttles traffic, while persisting the messages locally. This benefit makes your solution resilient to spikes in traffic. Offline support The gateway device stores messages and twin updates that cannot be delivered to IoT Hub. https://learn.microsoft.com/en-us/training/modules/examine-iot-edge-gateway-device-configuration/3-authenticate-downstream-device https://learn.microsoft.com/en-us/training/modules/examine-iot-edge-gateway-device-configuration/4-configure-connection-for-downstream-device The IoT Edge runtime provides the infrastructure to integrate the functionality of multiple IoT Edge modules and to deploy them onto IoT Edge devices. At a high level, any program can be packaged as an IoT Edge module. However, to take full advantage of IoT Edge communication and management functionalities, a program running in a module can use the Azure IoT Device SDK to connect to the local IoT Edge hub. Connecting to the local IoT Edge hub from a module involves two steps: Create a ModuleClient instance in your application. Make sure your application accepts the certificate presented by the IoT Edge hub on that device. To use IoT Edge routing over AMQP or MQTT, you can use the ModuleClient from the Azure IoT SDK. Create a ModuleClient instance to connect your module to the IoT Edge hub running on the device, similar to how DeviceClient instances connect IoT devices to IoT Hub. IoT Hub sees a module instance analogously to a device, in the sense that: It has a module twin that is distinct and isolated from the device twin and the other module twins of that device. It can send device-to-cloud messages. It can receive direct methods targeted specifically at its identity. Currently, modules cannot receive cloud-to-device messages or use the file upload feature. When writing a module, you can connect to the IoT Edge hub and use IoT Hub primitives as you would when using IoT Hub with a device application. The only difference between IoT Edge modules and IoT device applications is that you have to refer to the module identity instead of the device identity. An IoT Edge module can send messages to the cloud via the IoT Edge hub that acts as a local broker and propagates messages to the cloud. To enable complex processing of device-to-cloud messages, an IoT Edge module can also intercept and process messages sent by other modules or devices to its local IoT Edge hub and send new messages with processed data. Chains of IoT Edge modules can thus be created to build local processing pipelines. To send device-to-cloud telemetry messages using routing, use the ModuleClient of the Azure IoT SDK. With the Azure IoT SDK, each module has the concept of module input and output endpoints, which map to special MQTT topics. Use the ModuleClient.sendMessageAsync method and it will send messages on the output endpoint of your module. Then configure a route in edgeHub to send this output endpoint to IoT Hub. To process messages using routing, first set up a route to send messages coming from another endpoint (module or device) to the input endpoint of your module, then listen for messages on the input endpoint of your module. Each time a new message comes back, a callback function is triggered by the Azure IoT SDK. Process your message with this callback function and optionally send new messages on your module endpoint queue. Twins are one of the primitives provided by IoT Hub. There are JSON documents that store state information including metadata, configurations, and conditions. Each module or device has its own twin. To get a module twin with the Azure IoT SDK, call the ModuleClient.getTwin method. To get a module twin with any MQTT client, slightly more work is involved since getting a twin is not a typical MQTT pattern. To receive a module twin patch with the Azure IoT SDK, implement a callback function and register it with the ModuleClient.moduleTwinCallback method from the Azure IoT SDK so that your callback function is triggered each time that a twin patch comes in. To receive a module twin patch with any MQTT client, the process is similar to receiving full twins: a client needs to subscribe to special IoT Hub topic $iothub/twin/PATCH/properties/desired/#. After the subscription is made, when IoT Hub sends a change of the desired section of the twin, the client receives it. To receive a direct method with the Azure IoT SDK, implement a callback function and register it with the ModuleClient.methodCallback method from the Azure IoT SDK so that your callback function is triggered each time that a direct method comes in. To receive a direct method with any MQTT client, the process is similar to receiving twin patches. The client needs to confirm back that it has received the call and can send back some information at the same time. It is important to understand which systems and components are supported by IoT Edge, whether officially or in preview. For the full list of IoT Edge releases and support documentation, see: Azure IoT Edge supported systems Container Engines Azure IoT Edge modules are implemented as containers, so IoT Edge needs a container engine to launch them. Microsoft provides a container engine, moby-engine, to fulfill this requirement. This container engine is based on the Moby open-source project. Operating Systems Operating systems are grouped into tiers that represent the level of support users can expect. Tier 1 systems are supported. For tier 1 systems, Microsoft: * Has this operating system in automated tests. * Provides installation packages for them. Tier 2 systems are compatible with Azure IoT Edge and can be used relatively easily. For tier 2 systems: * Microsoft has done some preliminary testing on the platforms or knows of a partner successfully running Azure IoT Edge on the platform. * Installation packages for other platforms may work on these platforms. The family of the host OS must always match the family of the guest OS used inside a module’s container. image https://learn.microsoft.com/en-us/training/wwl-azure/examine-iot-edge-module-development/media/m07-l01-edge-modules-containers-edge-device-8fc429bd.png Virtual Machines Azure IoT Edge can be run in virtual machines. Using a virtual machine as an IoT Edge device is common when customers want to augment existing infrastructure with edge intelligence. The family of the host VM OS must match the family of the guest OS used inside a module’s container. Azure IoT Edge is agnostic of the underlying virtualization technology and works in VMs powered by platforms like Hyper-V and vSphere. Minimum system requirements Azure IoT Edge runs great on devices as small as a Raspberry Pi3 to server grade hardware. Choosing the right hardware for your scenario depends on the workloads that you want to run. Making the final device decision can be complicated; however, you can easily start prototyping a solution on traditional laptops or desktops. Experience while prototyping will help guide your final device selection. Questions you should consider include: How many modules are in your workload? How many layers do your modules’ containers share? In what language are your modules written? How much data will your modules be processing? Do your modules need any specialized hardware for accelerating their workloads? What are the desired performance characteristics of your solution? What is your hardware budget? Azure IoT Edge moves your existing business logic to devices operating at the edge. To prepare your applications and workloads to run as IoT Edge modules, you need to build them as containers. In any IoT Edge solution, there are at least two machines to consider. One is the IoT Edge device (or devices) itself, which runs the IoT Edge module. The other is the development machine that you use to build, test, and deploy modules. For testing purposes, the two machines can be the same. You can run IoT Edge on your development machine and deploy modules to it. Operating Systems For developing for IoT Edge, you can use most operating systems that can run a container engine. The container engine is a requirement on the development machine to build your modules as containers and push them to a container registry. The operating system of your development machine doesn’t have to match the operating system of your IoT Edge device. However, the container operating system must be consistent between development machine and IoT Edge device. For example, you can develop modules on a Windows machine and deploy them to a Linux device. The Windows machine needs to run Linux containers to build the modules for the Linux device. Container Engine The central concept of IoT Edge is that you can remotely deploy your business and cloud logic to devices by packaging it into containers. To build containers, you need a container engine on your development machine. The only supported container engine for IoT Edge devices in production is Moby. However, any container engine compatible with the Open Container Initiative, like Docker, is capable of building IoT Edge module images. Development Tools Both Visual Studio and Visual Studio Code have add-on extensions to help develop IoT Edge solutions. These extensions provide language-specific templates to help create and deploy new IoT Edge scenarios. The Azure IoT Edge extensions for Visual Studio and Visual Studio Code help you code, build, deploy, and debug your IoT Edge solutions. You can create an entire IoT Edge solution that contains multiple modules, and the extensions automatically update a deployment manifest template with each new module addition. With the extensions, you can also manage your IoT devices from within Visual Studio or Visual Studio Code. Deploy modules to a device, monitor the status, and view messages as they arrive at IoT Hub. Both extensions use the IoT EdgeHub dev tool to enable local running and debugging of modules on your development machine as well. IoT Edge Dev Tools The Azure IoT Edge dev tool simplifies IoT Edge development with command-line abilities. This tool provides CLI commands to develop, debug, and test modules. The IoT Edge dev tool works with your development system, whether you've manually installed the dependencies on your machine or are using the IoT Edge dev container. https://github.com/Azure/iotedgedev/wiki Testing Tools Several testing tools exist to help you simulate IoT Edge devices or debug modules more efficiently. Only the IoT Edge runtime is supported for production deployments, but the following tools allow you to simulate or easily create IoT Edge devices for development and testing purposes. These tools aren’t mutually exclusive, but can work together for a complete development experience. IoT EdgeHub dev tool The Azure IoT EdgeHub dev tool provides a local development and debug experience. The tool helps start IoT Edge modules without the IoT Edge runtime so that you can create, develop, test, run, and debug IoT Edge modules and solutions locally. You don’t have to push images to a container registry and deploy them to a device for testing. The IoT EdgeHub dev tool was designed to work in tandem with the Visual Studio and Visual Studio Code extensions, and it works with the IoT Edge dev tool. It supports inner loop development and outer loop testing, so it integrates with the DevOps tools. https://pypi.org/project/iotedgehubdev/ IoT Edge dev container The Azure IoT Edge dev container is a Docker container that has all the dependencies that you need for IoT Edge development. This container makes it easy to get started with whichever language you want to develop in, including C#, Python, Node.js, and Java. All you need to install is a container engine, like Docker or Moby, to pull the container to your development machine. https://hub.docker.com/r/microsoft/iotedgedev/ IoT Edge runtime in a container The IoT Edge runtime in a container provides a complete runtime that takes your device connection string as an environment variable. This container enables you to test IoT Edge modules and scenarios on a system that may not support the runtime natively, like macOS. Any modules that you deploy will be started outside of the runtime container. If you want the runtime and any deployed modules to exist within the same container, consider the IoT Edge device container instead. https://github.com/toolboc/azure-iot-edge-device-container IoT Edge device container The IoT Edge device container is a complete IoT Edge device, ready to be launched on any machine with a container engine. The device container includes the IoT Edge runtime and a container engine itself. Each instance of the container is a fully functional self-provisioning IoT Edge device. The device container supports remote debugging of modules, as long as there is a network route to the module. The device container is good for quickly creating large numbers of IoT Edge devices to test at-scale scenarios or Azure Pipelines. It also supports deployment to kubernetes via helm. https://github.com/toolboc/azure-iot-edge-device-container Module Development Process https://learn.microsoft.com/en-us/training/modules/examine-iot-edge-module-development/6-develop-custom-modules-visual-studio-code Module Debugging Process https://learn.microsoft.com/en-us/training/modules/examine-iot-edge-module-development/7-debug-edge-modules Azure IoT Edge supports extended offline operations on your IoT Edge devices, and enables offline operations on non-IoT Edge child devices too. As long as an IoT Edge device has had one opportunity to connect to IoT Hub, it and any child devices can continue to function with intermittent or no Internet connection. When an IoT Edge device goes into offline mode, the IoT Edge hub takes on three roles. First, it stores any messages that would go upstream and saves them until the device reconnects. Second, it acts on behalf of IoT Hub to authenticate modules and child devices so that they can continue to operate. Third, it enables communication between child devices that normally would go through IoT Hub. The following example shows how an IoT Edge scenario operates in offline mode: Configure devices IoT Edge devices automatically have offline capabilities enabled. To extend that capability to other IoT devices, you need to declare a parent-child relationship between the devices in IoT Hub. Then, you configure the child devices to trust their assigned parent device and route the device-to-cloud communications through the parent as a gateway. Sync with IoT Hub At least once after installation of the IoT Edge runtime, the IoT Edge device needs to be online to sync with IoT Hub. In this sync, the IoT Edge device gets details about any child devices assigned to it. The IoT Edge device also securely updates its local cache to enable offline operations and retrieves settings for local storage of telemetry messages. Go offline While disconnected from IoT Hub, the IoT Edge device, its deployed modules, and any children IoT devices can operate indefinitely. Modules and child devices can start and restart by authenticating with the IoT Edge hub while offline. Telemetry bound upstream to IoT Hub is stored locally. Communication between modules or between child IoT devices is maintained through direct methods or messages. Reconnect and resync with IoT Hub Once the connection with IoT Hub is restored, the IoT Edge device syncs again. Locally stored messages are delivered in the same order in which they were stored. Any differences between the desired and reported properties of the modules and devices are reconciled. The IoT Edge device updates any changes to its set of assigned child IoT devices. Restrictions and limits The extended offline capabilities described here are available in IoT Edge version 1.0.7 or higher. Existing IoT Edge devices that don’t have extended offline capabilities can’t be upgraded by changing the runtime version, but must be reconfigured with a new IoT Edge device identity to gain these features. IoT Edge devices and their assigned child devices can function indefinitely offline after the initial, one-time sync. However, storage of messages depends on the time to live (TTL) setting and the available disk space for storing the messages. For an IoT Edge device to extend its extended offline capabilities to child IoT devices, you need to complete two steps. First, declare the parent-child relationships in the Azure portal. Second, create a trust relationship between the parent device and any child devices, then configure device-to-cloud communications to go through the parent as a gateway. Assign Child Devices Child devices can be any non-IoT Edge device registered to the same IoT Hub. Parent devices can have multiple child devices, but a child device only has one parent. There are three options to set child devices to an edge device: through the Azure portal, using the Azure CLI, or using the IoT Hub service SDK. Option 1: IoT Hub Portal You can declare the parent-child relationship when creating a new device. Or for existing devices, you can declare the relationship from the device details page of either the parent IoT Edge device or the child IoT device. Option 2: Use the az command-line tool Using the Azure command-line interface with IoT extension (v0.7.0 or newer), you can manage parent child relationships with the device-identity subcommands. # Set IoT Edge parent device egde_device=\"edge-device1\" # Get All IoT Devices device_list=$(az iot hub query \\ --hub-name replace-with-hub-name \\ --subscription replace-with-sub-name \\ --resource-group replace-with-rg-name \\ -q \"SELECT * FROM devices WHERE capabilities.iotEdge = false\" \\ --query 'join(`, `, [].deviceId)' -o tsv) # Add all IoT devices to IoT Edge (as child) az iot hub device-identity add-children \\ --device-id $egde_device \\ --child-list $device_list \\ --hub-name replace-with-hub-name \\ --resource-group replace-with-rg-name \\ --subscription replace-with-sub-name Option 3: Use IoT Hub Service SDK Finally, you can manage parent child relationships programmatically using either C#, Java or Node.js IoT Hub Service SDK. Set up the parent device as a gateway You can think of a parent/child relationship as a transparent gateway, where the child device has its own identity in IoT Hub but communicates through the cloud via its parent. For secure communication, the child device needs to be able to verify that the parent device comes from a trusted source. Otherwise, third-parties could set up malicious devices to impersonate parents and intercept communications. Specify DNS servers To improve robustness, it is highly recommended you specify the DNS server addresses used in your environment. To set your DNS server for IoT Edge, either set DNS server address in container engine settings or per module in the IoT Edge deployment. For more information, see the resolution for Edge Agent module continually reports 'empty config file' and no modules start on device in the troubleshooting article Troubleshoot your IoT Edge device. Optional offline settings If your devices go offline, the IoT Edge parent device stores all device-to-cloud messages until the connection is reestablished. The IoT Edge hub module manages the storage and forwarding of offline messages. For devices that may go offline for extended periods of time, optimize performance by configuring two IoT Edge hub settings. First, increase the time to live setting so that the IoT Edge hub will keep messages long enough for your device to reconnect. Then, add more disk space for message storage. Time to live The time to live setting is the amount of time (in seconds) that a message can wait to be delivered before it expires. The default is 7200 seconds (two hours). The maximum value is only limited by the maximum value of an integer variable, which is around 2 billion. This setting is a desired property of the IoT Edge hub, which is stored in the module twin. You can configure it in the Azure portal or directly in the deployment manifest. \"$edgeHub\": { \"properties.desired\": { \"schemaVersion\": \"1.0\", \"routes\": {}, \"storeAndForwardConfiguration\": { \"timeToLiveSecs\": 7200 } } } There are several things to consider when configuring the Message Time-to-Live (TTL) for theEdge Hub ($edgeHub) module. When the IoT Edge Device is disconnected, the messages are stored on the local device. You need to calculate how much data will be stored during the TTL period, and make sure there is enough storage on the device for that much data. The amount of storage and TTL configured will need to meet the solutions requirements if you want to avoid the loss of important data. The storage location can be configured using a HostConfig object. Host storage for system modules Messages and module state information are stored in the IoT Edge hub’s local container filesystem by default. For improved reliability, especially when operating offline, you can also dedicate storage on the host IoT Edge device. Azure Blob Storage on IoT Edge provides a block blob storage solution at the edge. A blob storage module on your IoT Edge device behaves like an Azure block blob service, except the block blobs are stored locally on your IoT Edge device. You can access your blobs using the same Azure storage SDK methods or block blob API calls that you’re already used to. A blob storage module is useful in the following scenarios: Where data needs to be stored locally until it can be processed or transferred to the cloud. This data can be videos, images, finance data, hospital data, or any other unstructured data. When devices are located in a place with limited connectivity. When you want to efficiently process the data locally to get low latency access to the data, such that you can respond to emergencies as quickly as possible. When you want to reduce bandwidth costs and avoid transferring terabytes of data to the cloud. You can process the data locally and send only the processed data to the cloud. Azure SQL Edge is another local storage option for IoT Edge devices. Azure SQL Edge is an optimized relational database engine geared for IoT and IoT Edge deployments. To understand how to setup and configure Azure Blob Storage follow the link Module access to local storage In addition to storing data using Azure storage services or in your device’s container storage, you can also dedicate storage on the host IoT Edge device itself for improved reliability, especially when operating offline. To understand how to use and configure module access to local storage. Please read the link here In addition to using the container create options to enable access to local/host storage, scenarios that come up most often when building IoT Edge solutions include: * Map host port to module port * Restrict module memory and CPU usage You can find detailed information for implementing these scenarios here: How to configure container create options for IoT Edge modules. You can find more details about create options from docker docs https://docs.docker.com/engine/api/v1.32/#operation/ContainerCreate Back-end apps can use Azure IoT Hub primitives, such as device twins and direct methods, to remotely start and monitor device management actions on devices. IoT Hub enables the following set of device management patterns. Reboot The back-end app informs the device through a direct method that it has initiated a reboot. The device uses the reported properties to update the reboot status of the device. Factory Reset The back-end app informs the device through a direct method that it has initiated a factory reset. The device uses the reported properties to update the factory reset status of the device. Configuration The back-end app uses the desired properties to configure software running on the device. The device uses the reported properties to update configuration status of the device. Firmware update The back-end app uses an automatic device management configuration to select the devices to receive the update, to tell the devices where to find the update, and to monitor the update process. The device initiates a multistep process to download, verify, and apply the firmware image, and then reboot the device before reconnecting to the IoT Hub service. Throughout the multistep process, the device uses the reported properties to update the progress and status of the device. Reporting progress and status The solution back end runs device twin queries, across a set of devices, to report on the status and progress of actions running on the devices. You can use a direct method to initiate device management actions (such as reboot, factory reset, and firmware update) from a back-end app in the cloud. The device is responsible for: * Handling the method request sent from IoT Hub. * Initiating the corresponding device-specific action on the device. * Providing status updates through reported properties to IoT Hub. You can use a back-end app in the cloud to run device twin queries to set a device twin desired property or to report on the progress of your device management actions. The device is responsible for: * Handling the property changed event and updating the local variables that correspond to the device twin desired property. * Communicating the device twin reported property setting to IoT hub after the updated desired property has been implemented successfully. Configuring devices from your back-end service is a core component of most device management solutions. To synchronize state information between a device and an IoT hub, you use device twins. A desired property is set by a back-end application and read by a device. A reported property is set by a device and read by a back-end application. Device Twins also include a tag that is set by a back-end application, but is never sent to the device. You use tags to provide descriptive information, such as location, or to help organize/differentiate your devices. Consider the following \"properties\" section of a device twin document: \"properties\": { \"desired\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\" }, \"$metadata\" : {…​}, \"$version\": 1 }, \"reported\": { \"telemetryConfig\": { \"sendFrequency\": \"5m\", \"status\": \"success\" }, \"$metadata\" : {…​}, \"$version\": 4 } } The telemetryConfig device twin desired and reported properties are used by the solution back end and the device app to synchronize the telemetry configuration for this device. An update to the device configuration could be implemented as follows: The solution back end sets the desired property with the desired configuration value. The device app is notified of the change immediately if connected, or at the first reconnect. The device app then reports the updated configuration (or an error condition using the status property). The solution back end can track the results of the configuration operation across many devices by querying device twins. The solution back end operates on the device twin using the following atomic operations, exposed through HTTPS: Retrieve device twin by ID. This operation returns the device twin document, including tags and desired and reported system properties. Partially update device twin This operation enables the solution back end to partially update the tags or desired properties in a device twin. The partial update is expressed as a JSON document that adds or updates any property. Properties set to null are removed. The following example creates a new desired property with value {\"newProperty\": \"newValue\"}, overwrites the existing value of existingProperty with \"otherNewValue\", and removes otherOldProperty. No other changes are made to existing desired properties or tags: { \"properties\": { \"desired\": { \"newProperty\": { \"nestedProperty\": \"newValue\" }, \"existingProperty\": \"otherNewValue\", \"otherOldProperty\": null } } } Replace desired properties This operation enables the solution back end to completely overwrite all existing desired properties and substitute a new JSON document for properties/desired. Replace tags This operation enables the solution back end to completely overwrite all existing tags and substitute a new JSON document for tags. Receive twin notifications. This operation allows the solution back end to be notified when the twin is modified. To do so, your IoT solution needs to create a route and to set the Data Source equal to twinChangeEvents. By default, no such routes pre-exist, so no twin notifications are sent. If the rate of change is too high, or for other reasons such as internal failures, the IoT Hub might send only one notification that contains all changes. Therefore, if your application needs reliable auditing and logging of all intermediate states, you should use device-to-cloud messages. The twin notification message includes properties and body. Properties The properties for a twin notification message are shown in the following table. In addition to these operations, the solution back end can: * Query the device twins using the SQL-like IoT Hub query language. * Perform operations on large set of device twins using jobs. The device app operates on the device twin using the following atomic operations: * Retrieve device twin.","title":"Azure IoT","component":"studynotes","version":"","name":"overview","url":"/studynotes/azure_iot/overview.html","titles":[{"text":"Core Subsystems of IoT","hash":"_core_subsystems_of_iot","id":1},{"text":"Optional Subsystems of IoT","hash":"_optional_subsystems_of_iot","id":2},{"text":"Data flow and Processing","hash":"_data_flow_and_processing","id":3},{"text":"Data flow Scenarios","hash":"_data_flow_scenarios","id":4},{"text":"Cross-cutting Architectural Needs","hash":"_cross_cutting_architectural_needs","id":5},{"text":"IoT Hardware Components","hash":"_iot_hardware_components","id":6},{"text":"IP-enabled IoT Devices","hash":"_ip_enabled_iot_devices","id":7},{"text":"Non-IP enabled Devices","hash":"_non_ip_enabled_devices","id":8},{"text":"Sensors","hash":"_sensors","id":9},{"text":"IoT Edge Devices and Field Gateways","hash":"_iot_edge_devices_and_field_gateways","id":10},{"text":"Review Azure IoT Technologies","hash":"_review_azure_iot_technologies","id":11},{"text":"Managed aPaaS Solutions","hash":"_managed_apaas_solutions","id":12},{"text":"Flexible PaaS Solutions","hash":"_flexible_paas_solutions","id":13},{"text":"IoT Edge and Azure Sphere","hash":"_iot_edge_and_azure_sphere","id":14},{"text":"IoT Hub","hash":"_iot_hub","id":15},{"text":"Azure Digital Twins","hash":"_azure_digital_twins","id":16},{"text":"Azure Stream, Azure Data Explorer and Azure Maps","hash":"_azure_stream_azure_data_explorer_and_azure_maps","id":17},{"text":"IoT Device Software Options","hash":"_iot_device_software_options","id":18},{"text":"Cloud Service Components of an IoT solution","hash":"_cloud_service_components_of_an_iot_solution","id":19},{"text":"Cloud Gateways","hash":"_cloud_gateways","id":20},{"text":"Data Storage Options","hash":"_data_storage_options","id":21},{"text":"Analytics","hash":"_analytics","id":22},{"text":"Data visualization","hash":"_data_visualization","id":23},{"text":"IoT Hub","hash":"_iot_hub_2","id":24},{"text":"Security","hash":"_security","id":25},{"text":"Routing","hash":"_routing","id":26},{"text":"Integration","hash":"_integration","id":27},{"text":"Device Management","hash":"_device_management","id":28},{"text":"Developer","hash":"_developer","id":29},{"text":"Device Provisioning Service","hash":"_device_provisioning_service","id":30},{"text":"Provisioning Process","hash":"_provisioning_process","id":31},{"text":"Features","hash":"_features","id":32},{"text":"When to use","hash":"_when_to_use","id":33},{"text":"IoT Hub Tiers","hash":"_iot_hub_tiers","id":34},{"text":"Basic Tier","hash":"_basic_tier","id":35},{"text":"Standard Tier","hash":"_standard_tier","id":36},{"text":"Message Throughtput Basics","hash":"_message_throughtput_basics","id":37},{"text":"Partition Basics","hash":"_partition_basics","id":38},{"text":"IoT Hub Endpoint Basics","hash":"_iot_hub_endpoint_basics","id":39},{"text":"Built-in endpoints","hash":"_built_in_endpoints","id":40},{"text":"Custom endpoints","hash":"_custom_endpoints","id":41},{"text":"Security Concepts","hash":"_security_concepts","id":42},{"text":"Access Control and Permissions","hash":"_access_control_and_permissions","id":43},{"text":"Authentication","hash":"_authentication","id":44},{"text":"Security tokens","hash":"_security_tokens","id":45},{"text":"Supported X.509 certificates","hash":"_supported_x_509_certificates","id":46},{"text":"IoT Device Lifecycle Terms and Concepts","hash":"_iot_device_lifecycle_terms_and_concepts","id":47},{"text":"Device Identity and Registration","hash":"_device_identity_and_registration","id":48},{"text":"Identity Registry","hash":"_identity_registry","id":49},{"text":"Module Identity","hash":"_module_identity","id":50},{"text":"Identity registry operations","hash":"_identity_registry_operations","id":51},{"text":"Device Creation","hash":"_device_creation","id":52},{"text":"Device Twins Concept","hash":"_device_twins_concept","id":53},{"text":"Usage","hash":"_usage","id":54},{"text":"Module Identity and Module Twins","hash":"_module_identity_and_module_twins","id":55},{"text":"Device Monitoring","hash":"_device_monitoring","id":56},{"text":"Device Retirements","hash":"_device_retirements","id":57},{"text":"Device Configuration and Communication Protocols","hash":"_device_configuration_and_communication_protocols","id":58},{"text":"Protocols","hash":"_protocols","id":59},{"text":"Ports","hash":"_ports","id":60},{"text":"Devices and Device Provisioning","hash":"_devices_and_device_provisioning","id":61},{"text":"Provisioning Process","hash":"_provisioning_process_2","id":62},{"text":"Manufacturing Process Phase","hash":"_manufacturing_process_phase","id":63},{"text":"Cloud setup phase","hash":"_cloud_setup_phase","id":64},{"text":"Linked IoT Hubs","hash":"_linked_iot_hubs","id":65},{"text":"Allocation policy","hash":"_allocation_policy","id":66},{"text":"Enrollment","hash":"_enrollment","id":67},{"text":"Registration","hash":"_registration","id":68},{"text":"Operations","hash":"_operations","id":69},{"text":"Device Enrollment Concepts","hash":"_device_enrollment_concepts","id":70},{"text":"ID Scope","hash":"_id_scope","id":71},{"text":"Registration ID","hash":"_registration_id","id":72},{"text":"Device ID","hash":"_device_id","id":73},{"text":"Attestation mechanism","hash":"_attestation_mechanism","id":74},{"text":"Device Enrollment Types","hash":"_device_enrollment_types","id":75},{"text":"Individual Enrollments","hash":"_individual_enrollments","id":76},{"text":"Group Enrollments","hash":"_group_enrollments","id":77},{"text":"X.509 Certificate Attestation Process","hash":"_x_509_certificate_attestation_process","id":78},{"text":"Root Certificate","hash":"_root_certificate","id":79},{"text":"Intermediate Certificate","hash":"_intermediate_certificate","id":80},{"text":"End-entity \"leaf\" certificate","hash":"_end_entity_leaf_certificate","id":81},{"text":"Controlling device access to the provisioning service with X.509 certificates","hash":"_controlling_device_access_to_the_provisioning_service_with_x_509_certificates","id":82},{"text":"Process","hash":"_process","id":83},{"text":"Hardware Security Module","hash":"_hardware_security_module","id":84},{"text":"Trusted Platform Module","hash":"_trusted_platform_module","id":85},{"text":"Endorsement key","hash":"_endorsement_key","id":86},{"text":"Storage root key","hash":"_storage_root_key","id":87},{"text":"Trusted Platform Module (TPM) Attestation Process","hash":"_trusted_platform_module_tpm_attestation_process","id":88},{"text":"High-level Attestation Process","hash":"_high_level_attestation_process","id":89},{"text":"Detailed Attestation Process","hash":"_detailed_attestation_process","id":90},{"text":"Nonce challenge","hash":"_nonce_challenge","id":91},{"text":"Validate the nonce and receive credentials","hash":"_validate_the_nonce_and_receive_credentials","id":92},{"text":"Symmetric Key Attestation","hash":"_symmetric_key_attestation","id":93},{"text":"Symmetric Key Creation","hash":"_symmetric_key_creation","id":94},{"text":"SAS tokens","hash":"_sas_tokens","id":95},{"text":"The Device Provisioning Process","hash":"_the_device_provisioning_process","id":96},{"text":"The Autoprovisioning Operation","hash":"_the_autoprovisioning_operation","id":97},{"text":"The Reprovisioning Process","hash":"_the_reprovisioning_process","id":98},{"text":"Reprovisioning Scenarios","hash":"_reprovisioning_scenarios","id":99},{"text":"Device State Data","hash":"_device_state_data","id":100},{"text":"Reprovisioning policies","hash":"_reprovisioning_policies","id":101},{"text":"Azure CLI Commands for DPS","hash":"_azure_cli_commands_for_dps","id":102},{"text":"DPS Service Commands","hash":"_dps_service_commands","id":103},{"text":"Access Policy Commands","hash":"_access_policy_commands","id":104},{"text":"Certificate Commands","hash":"_certificate_commands","id":105},{"text":"Device Provisioning SDK","hash":"_device_provisioning_sdk","id":106},{"text":"Provisioning Device SDK","hash":"_provisioning_device_sdk","id":107},{"text":"Provisioning Service SDK","hash":"_provisioning_service_sdk","id":108},{"text":"Trusted Platform Module (TPM) Simulator","hash":"_trusted_platform_module_tpm_simulator","id":109},{"text":"X.509 certificate Generator","hash":"_x_509_certificate_generator","id":110},{"text":"Access control to DPS","hash":"_access_control_to_dps","id":111},{"text":"Authentication","hash":"_authentication_2","id":112},{"text":"Security tokens","hash":"_security_tokens_2","id":113},{"text":"Security Token Structure","hash":"_security_token_structure","id":114},{"text":"Use security tokens from service components","hash":"_use_security_tokens_from_service_components","id":115},{"text":"Device Provisioning Service","hash":"_device_provisioning_service_2","id":116},{"text":"Configure Verified CA Certificates","hash":"_configure_verified_ca_certificates","id":117},{"text":"Proof-of-Possession Process","hash":"_proof_of_possession_process","id":118},{"text":"Register and get the verification code","hash":"_register_and_get_the_verification_code","id":119},{"text":"Digitally sign the verification code to create a verification certificate","hash":"_digitally_sign_the_verification_code_to_create_a_verification_certificate","id":120},{"text":"Upload the signed verification certificate","hash":"_upload_the_signed_verification_certificate","id":121},{"text":"Roll Device Certificates","hash":"_roll_device_certificates","id":122},{"text":"Roll the certificate on the device","hash":"_roll_the_certificate_on_the_device","id":123},{"text":"The Deprovisioning process","hash":"_the_deprovisioning_process","id":124},{"text":"Manage Disenrollment","hash":"_manage_disenrollment","id":125},{"text":"Blocklist devices by using an individual enrollment entry","hash":"_blocklist_devices_by_using_an_individual_enrollment_entry","id":126},{"text":"Blocklist an X.509 intermediate or root CA certificate by using an enrollment group.","hash":"_blocklist_an_x_509_intermediate_or_root_ca_certificate_by_using_an_enrollment_group","id":127},{"text":"Blocklist specific devices in an enrollment group","hash":"_blocklist_specific_devices_in_an_enrollment_group","id":128},{"text":"How to provision for multitenancy","hash":"_how_to_provision_for_multitenancy","id":129},{"text":"Common Message Format","hash":"_common_message_format","id":130},{"text":"System properties of D2C IoT hub messages","hash":"_system_properties_of_d2c_iot_hub_messages","id":131},{"text":"System Properties of C2D IoT hub messages","hash":"_system_properties_of_c2d_iot_hub_messages","id":132},{"text":"Message size","hash":"_message_size","id":133},{"text":"Anti-spoofing properties","hash":"_anti_spoofing_properties","id":134},{"text":"Message Routing","hash":"_message_routing","id":135},{"text":"Routing endpoints","hash":"_routing_endpoints","id":136},{"text":"Routing queries","hash":"_routing_queries","id":137},{"text":"IoT Hub built-in endpoint","hash":"_iot_hub_built_in_endpoint","id":138},{"text":"Reading from the Built-in endpoint","hash":"_reading_from_the_built_in_endpoint","id":139},{"text":"Routing to multiple endpoints","hash":"_routing_to_multiple_endpoints","id":140},{"text":"Custom endpoint","hash":"_custom_endpoint","id":141},{"text":"Fallback route","hash":"_fallback_route","id":142},{"text":"Non-telemetry events","hash":"_non_telemetry_events","id":143},{"text":"Latency","hash":"_latency","id":144},{"text":"Monitoring and Troubleshooting","hash":"_monitoring_and_troubleshooting","id":145},{"text":"Message Routing Query Syntax","hash":"_message_routing_query_syntax","id":146},{"text":"Message properties based routing","hash":"_message_properties_based_routing","id":147},{"text":"Query expressions","hash":"_query_expressions","id":148},{"text":"Message body based routing","hash":"_message_body_based_routing","id":149},{"text":"Query expressions","hash":"_query_expressions_2","id":150},{"text":"Device Twin based routing","hash":"_device_twin_based_routing","id":151},{"text":"Query expressions","hash":"_query_expressions_3","id":152},{"text":"Message processing options and constraints","hash":"_message_processing_options_and_constraints","id":153},{"text":"Message Enrichments","hash":"_message_enrichments","id":154},{"text":"IoT Hub quotas and throttling","hash":"_iot_hub_quotas_and_throttling","id":155},{"text":"Azure IoT Edge","hash":"_azure_iot_edge","id":156},{"text":"IoT Edge Runtime","hash":"_iot_edge_runtime","id":157},{"text":"IoT Edge Agent","hash":"_iot_edge_agent","id":158},{"text":"Azure IoT Edge modules","hash":"_azure_iot_edge_modules","id":159},{"text":"Module Twin Properties","hash":"_module_twin_properties","id":160},{"text":"IoT Edge Security Manager","hash":"_iot_edge_security_manager","id":161},{"text":"IoT Edge security daemon","hash":"_iot_edge_security_daemon","id":162},{"text":"Maximize operational integrity","hash":"_maximize_operational_integrity","id":163},{"text":"Minimize bloat and churn","hash":"_minimize_bloat_and_churn","id":164},{"text":"Architecture of IoT Edge security daemon","hash":"_architecture_of_iot_edge_security_daemon","id":165},{"text":"Cloud Interface","hash":"_cloud_interface","id":166},{"text":"Management API","hash":"_management_api","id":167},{"text":"Container API","hash":"_container_api","id":168},{"text":"Workload API","hash":"_workload_api","id":169},{"text":"Integration and maintenance","hash":"_integration_and_maintenance","id":170},{"text":"Installation and updates","hash":"_installation_and_updates","id":171},{"text":"Versioning","hash":"_versioning","id":172},{"text":"Hardware security module platform abstraction layer (HSM PAL)","hash":"_hardware_security_module_platform_abstraction_layer_hsm_pal","id":173},{"text":"Secure silicon root of trust hardware","hash":"_secure_silicon_root_of_trust_hardware","id":174},{"text":"IoT Edge security manager integration and maintenance","hash":"_iot_edge_security_manager_integration_and_maintenance","id":175},{"text":"IoT Edge certificates and module identity","hash":"_iot_edge_certificates_and_module_identity","id":176},{"text":"IoT Edge certificates","hash":"_iot_edge_certificates","id":177},{"text":"Certificate authority","hash":"_certificate_authority","id":178},{"text":"Root CA certificate","hash":"_root_ca_certificate","id":179},{"text":"Intermediate certificates","hash":"_intermediate_certificates","id":180},{"text":"Edge CA certificate","hash":"_edge_ca_certificate","id":181},{"text":"IoT Edge hub server certificate","hash":"_iot_edge_hub_server_certificate","id":182},{"text":"Production Implications","hash":"_production_implications","id":183},{"text":"Dev/Test implications","hash":"_devtest_implications","id":184},{"text":"Example of IoT Edge certificate hierarchy","hash":"_example_of_iot_edge_certificate_hierarchy","id":185},{"text":"IoT Edge Deployment Concepts","hash":"_iot_edge_deployment_concepts","id":186},{"text":"Deployment","hash":"_deployment","id":187},{"text":"Deployment manifest","hash":"_deployment_manifest","id":188},{"text":"Target condition","hash":"_target_condition","id":189},{"text":"Priority","hash":"_priority","id":190},{"text":"Labels","hash":"_labels","id":191},{"text":"Metrics","hash":"_metrics","id":192},{"text":"Phased rollout","hash":"_phased_rollout","id":193},{"text":"Layered deployment","hash":"_layered_deployment","id":194},{"text":"Rollback","hash":"_rollback","id":195},{"text":"IoT Edge deployment manifest","hash":"_iot_edge_deployment_manifest","id":196},{"text":"Create a deployment manifest","hash":"_create_a_deployment_manifest","id":197},{"text":"Configure modules","hash":"_configure_modules","id":198},{"text":"Declare routes","hash":"_declare_routes","id":199},{"text":"Source","hash":"_source","id":200},{"text":"Condition","hash":"_condition","id":201},{"text":"Sink","hash":"_sink","id":202},{"text":"Define or update desired properties","hash":"_define_or_update_desired_properties","id":203},{"text":"Deployment manifest example","hash":"_deployment_manifest_example","id":204},{"text":"Examine pre-deployment considerations","hash":"_examine_pre_deployment_considerations","id":205},{"text":"Device Configuration","hash":"_device_configuration","id":206},{"text":"Install production certificates","hash":"_install_production_certificates","id":207},{"text":"Have a device management plan","hash":"_have_a_device_management_plan","id":208},{"text":"Use Moby as the container engine","hash":"_use_moby_as_the_container_engine","id":209},{"text":"Choose upstream protocol","hash":"_choose_upstream_protocol","id":210},{"text":"Deployment","hash":"_deployment_2","id":211},{"text":"Be consistent with upstream protocol","hash":"_be_consistent_with_upstream_protocol","id":212},{"text":"Set up host storage for system modules","hash":"_set_up_host_storage_for_system_modules","id":213},{"text":"Reduce memory space used by IoT Edge hub","hash":"_reduce_memory_space_used_by_iot_edge_hub","id":214},{"text":"Container management","hash":"_container_management","id":215},{"text":"Use tags to manage versions","hash":"_use_tags_to_manage_versions","id":216},{"text":"Tags for the IoT Edge runtime","hash":"_tags_for_the_iot_edge_runtime","id":217},{"text":"Networking","hash":"_networking","id":218},{"text":"Review outbound/inbound configuration","hash":"_review_outboundinbound_configuration","id":219},{"text":"Allow connections from IoT Edge devices","hash":"_allow_connections_from_iot_edge_devices","id":220},{"text":"Configure communication through a proxy","hash":"_configure_communication_through_a_proxy","id":221},{"text":"Solution Management","hash":"_solution_management","id":222},{"text":"Set up logs and diagnostics","hash":"_set_up_logs_and_diagnostics","id":223},{"text":"Place limits on log size","hash":"_place_limits_on_log_size","id":224},{"text":"Consider tests and CI/CD pipelines","hash":"_consider_tests_and_cicd_pipelines","id":225},{"text":"IoT Edge Gateway Device Configuration","hash":"_iot_edge_gateway_device_configuration","id":226},{"text":"IoT Edge device gateway patterns","hash":"_iot_edge_device_gateway_patterns","id":227},{"text":"Use Cases","hash":"_use_cases","id":228},{"text":"downstream device authentication","hash":"_downstream_device_authentication","id":229},{"text":"Examine a transparent gateway configuration scenario","hash":"_examine_a_transparent_gateway_configuration_scenario","id":230},{"text":"IoT Edge Module Development","hash":"_iot_edge_module_development","id":231},{"text":"IoT Edge runtime environment","hash":"_iot_edge_runtime_environment","id":232},{"text":"Connecting to IoT Edge hub from a module","hash":"_connecting_to_iot_edge_hub_from_a_module","id":233},{"text":"IoT Hub primitives","hash":"_iot_hub_primitives","id":234},{"text":"Device-to-cloud messages","hash":"_device_to_cloud_messages","id":235},{"text":"Twins","hash":"_twins","id":236},{"text":"Receive direct methods","hash":"_receive_direct_methods","id":237},{"text":"IoT Edge runtime supported systems","hash":"_iot_edge_runtime_supported_systems","id":238},{"text":"Module Development and Testing","hash":"_module_development_and_testing","id":239},{"text":"Offline and Local Storage Capabilities","hash":"_offline_and_local_storage_capabilities","id":240},{"text":"Set up parent and child devices","hash":"_set_up_parent_and_child_devices","id":241},{"text":"Azure Blob Storage on IoT Edge","hash":"_azure_blob_storage_on_iot_edge","id":242},{"text":"Manage IoT devices by using IoT Hub and apps","hash":"_manage_iot_devices_by_using_iot_hub_and_apps","id":243},{"text":"Device Management Patterns","hash":"_device_management_patterns","id":244},{"text":"Patterns","hash":"_patterns","id":245},{"text":"Approaches","hash":"_approaches","id":246},{"text":"Device Configuration using Device Twins","hash":"_device_configuration_using_device_twins","id":247},{"text":"Device Twin Properties","hash":"_device_twin_properties","id":248},{"text":"Back-end operations","hash":"_back_end_operations","id":249},{"text":"Device operations","hash":"_device_operations","id":250}]},"42":{"id":42,"text":"What are the keystrokes that help exit to normal mode from insert/visual/normal mode? Ctrl+c, Ctrl+[, Esc. Which keystroke starts the line wise visual mode? Shift+v. Which keystroke starts the block wise visual mode? Ctrl+v or Ctrl+Alt+v. Which command opens Vim’s help? :help Which command quits the current window? :q Which command quits the current window without saving? :q! Which command saves or writes your changes? :w. Which command writes and quits the buffer window? :wq or :x Which command opens a file for editing? :e How do you start searching a word within a buffer? / Which key finds the next occurence of the search? n Which key finds the previous occurence of the search? N When in normal mode, which key searches the word under the cursor forwards? * When in normal mode, which key searches the word under the cursor backswards? # Which key will undo your last edit? u Which key will redo your last change? Ctrl+r Which key will move the cursor forward to the next word? w Which key will move the cursor back to the previous word? b Which key will move the cursor to the beginning of the current line? 0 Which key will move the cursor to the first non blank character on the current line? ^ Which key will move the cursor to the end of the current line? $ Which key will move the cursor to the matching bracket when the cursor is already on a bracket? % Which key will help find a character after your cursor? f Which key will help find a character before your cursor? F Which key will move the cursor to a character after your cursor? t Which key will move the cursor to a character before your cursor? T Which key will move the cursor to the next character? ; Which key will move the cursor to the previous character? , Which key will move the cursor to the beginning of the arbitrary line? G Which key will move the cursor to the last line of the file? G Which key will move the cursor to the first line of the file? 1G or gg Which key will scroll the window downwards? Ctrl+e Which key will move your cursor upward half the screen? Ctrl+u Which key will move your cursor downward half the screen? Ctrl+d In normal mode, which key is the operator for delete? d In normal mode, which key is the operator for change? c In normal mode, which key is the operator for yank (copy)? y In normal mode, which key is the operator for pasting what you copied? p or P Which key combination will help delete characters from your cursor to the end of the line? d$ or D Which key combination will delete everything from your cursor to the beginning of the file? dgg Which key combination will delete everything in the file? ggdG Which key combination will delete the current word under the cursor? diw Which key combination will delete the current word under the cursor and switch to insert mode? ciw Which key combination will delete inside the paragraph? dip Which command unsets an option? :set no Which command toggles the option? :set ! Which command returns the option’s value? :set ? Which command sets the option’s value? :set = Which command subtracts (in case of number) or deletes (in case of string) an option’s value? :set -= Which command resets the option to its default value? :set & Which command displays the filetype of the current open file? :set filetype? Which help command will display more information about options? :help options Which help command will display more information about options-list? :help options-list What is a buffer? A buffer is an open file in memory. What happens when you close a buffer? It goes into hidden state. When you close a buffer, does it close the file too? No. When you close a buffer it does not close the file. The buffer just moves to hidden state. What are the three different types of buffer states? active, hidden, inactive What is the inactive state of a buffer? The buffer is not linked to any file and is not displayed and is empty. Which command displays the list of open buffers? :buffers Which command displays a buffer with a certain name or id? :buffer Which command displays the next buffer? :bnext or :bn Which command displays the previous buffer? :bprevious or :bp Which command displays the first buffer? :bfirst or :bf Which command displays the last buffer? :blast or :bl What is an alternate buffer? It is indicated in your buffer list with the symbol #. Which command switches to the alternate buffer? :Ctrl+^ Which command helps switch to a specific buffer ID? Ctrl+^ Which command will you use to switch to a buffer with an ID of 75? 75Ctrl+^ Which command helps apply a command to all buffers? :bufdo Which command displays a list of unlisted buffers? :buffers! or :ls! How do you create a new file in a buffer? :badd How do you delete a buffer with an ID or name? :bdelete Write a command that will delete a buffers from ID 1 to ID 10? 1,10bdelete Write a command that will delete all buffers? %bdelete Which help command will display information about buffers? :help buffers and :help :buffers What is a window? It is a space you can use to display the contents of a buffer. How can you split the current window horizontally? Ctrl+W s How can you split the current window vertically? Ctrl+W v or Ctrl+Alt+W v How can you split the current window with the alternate file? Ctrl+W ^ How will split the current window with the buffer of id ? Ctrl+W How will you move the cursor to the bottom window? Ctrl+W j How will you move the cursor to the top window? Ctrl+W k How will you move the cursor to the left window? Ctrl+W h How will you move the cursor to the right window? Ctrl+W l How will you rotate the window? Ctrl+W r How will you exchange with the next window? Ctrl+W x How will you resize windows for them to fit on the screen with the same size? Ctrl+W = How will you decrease a window’s height? Ctrl+W - How will you increase a window’s height? Ctrl+W + How will you quit the current window? :q How will you quit the current window with an unsaved buffer? :q! What are tabs? Tabs are a container for a bunch of windows. Are tabs in nvim the same as tabs in an IDE? No they are a different concept. How do you open a new tab? :tabnew or :tabe How do you close the current tab? :tabclose or :tabc How do you close every other tab except the current one? :tabonly or :tabo How do you go to the next tab? gt How do you go to the previous tab? gT How do you go to the first tab? 1gT What is an argument list? The argument list allows you to organize your open files. How can you create a new keystroke mapping for NORMAL mode? :nmap How will you create a new keystroke mapping for INSERT mode? :imap How will you create a new keystroke mapping for VISUAL mode? :xmap How will you create a new keystroke mapping for COMMAND-LINE mode? :cmap How will you create a non recursive keystroke mapping for NORMAL mode? :nnoremap How will you create a non recursive keystroke mapping for INSERT mode? :inoremap How will you create a non recursive keystroke mapping for VISUAL mode? :vnoremap How will you create a non recursive keystroke mapping for COMMAND-LINE mode? :cnoremap How will you define the character Space while creating keystroke mappings? How will you define Ctrl+W while creating keystroke mappings? c-w How will you define carriage return (Enter) while creating keystroke mappings? How will you define the escape character while creating keystroke mappings? What is the help command that will give more information about keys? :help key-notation How will you jump to the previous cursor position in the jump list? Ctrl+o How will you jump to the next cursor position in the jump list? Ctrl+i How can you display your jump list? :jumps What is a jump list? Each time we use a jump motion, the position of the cursor before the jump is saved in the jump list. What is a change list? Each time you insert something the position of the cursor is saved in the change list. How will you jump to the next change in the change list? g; How will you jump to the previous change in the change list? g, How will you jump to the start of a method? [m How will you jump to the end of a method? ]m How will you repeat the last change? . How will you repeat the last command executed? @: What are the steps to create a macro? q - Begins the capturing of keystrokes. q - stops the capture of keystrokes. @ - Executes the keystrokes. How will you repeat the previous command? @@ What is the suggested best practice to create a new mapping? To use a special key called the leader key. How do you set a leader key? Set the variable mapleader to your leader key. :let mapleader = \"\" Remap the :bn command to use the leader key ? :let mapleader = \"\" :nnoremap bn :bn What is the command to open the help file for more information on mapping? :help mapping What is the command to open the help file for more information on leader? :help leader Which command opens the command line history? q: Which command opens the search feature for the history? q/ and q? Which command opens a command line history while in COMMAND LINE mode? Ctrl+f Which command also opens the command line history? :history Which command opens the help for the command line window? :help cmdline-window Which command opens the help for the history command? :help 'history' How can you represent a line number range? - Any number in your range refers to a line number. How can you represent the current line in a range? . - represents a current line in a range. How can you represent the last line of the current buffer in a range? $ - represents the last line of the current buffer. How can you represent the entire file in a range? % - represents the entire file (same as 1,$). How can you represent the last selection you made during the last VISUAL mode in a range? * - use the last selection you’ve made during the last VISUAL mode. Write a command that will delete lines 1 to 40? :1,40d Write a command that will delete from the second line till the end of the file? :2,$d Write a command that will delete from the current line till the end of the file? :.,$d Write a command that will delete every line of a file? :%d What are quickfix lists? A quickfix list is a set of positions in one or multiple files. What happens when you run the command :vimgrep hello *? It will search the pattern \"hello\" in every file of your working directory. It will populate a quickfix list with every position matching your pattern \"hello\". It will move your cursor to the first position of the quickfix list. What is a quickfix list often used for? The quickfix list is often used to display specific errors in a codebase, often spit out from a compiler or a linter. Which command will display the current quickfix list? :cl or :clist Which command will move to the entry of the current quickfix list? :cc Which command will move to the next entry of the current quickfix list? cnext or :cn Which command will move to the previous entry of the current quickfix list? :cprevious or :cp Which command will move to the first entry of the current quickfix list? :cfirst or :cfir Which command will move to the last entry of the current quickfix list? :clast or :clas How will you execute a command on each valid entry of the current quickfix list? :cdo How can you create a quickfix list using the result of a Vimscript extension ? :cexpr or :cex Which command will empty your current quickfix list? :cex [] Which command will populate your quickfix list with the output of any shell command like ls? :cex system(\"ls\") How can you append the result of a vimscript expression to the current quickfix list? :caddexpr or :cadde Which command opens the current quickfix list in a new buffer window? :copen or :cope What is a location list? A location list is similar to a quickfix list, except that a location list is local to a window and a quickfix list is global to your Vim instance. You can have one location list per open window. You can have access to only one quickfix list. What is a register?? Registers are places where you can read and write some text. Think of them as Vim’s clipboard. How will you display the contents of a register? :registers or :reg Which keystroke specifies the register to be read or written? \" How will you write to a register? To write to a register: Hit \"a in NORMAL mode to specify what register you want to write on. Yank, change or delete some content to write it to register a. for example, by using dd in normal mode. How will you read from a register a? Hit \"a in NORMAL mode to specify what register you want to read. Use a put keystroke in NORMAL mode to spit out the content of the register in your current buffer. An example of a put keystroke is a P or p command. How many types of registers are there in Vim? There are 10 different types of registers. What does the unnamed register contain? It contains the last deleted, changed, or yanked content even if one register is specified. How will you paste content present in the unnamed register? \"\"p What does the 0 numbered register contain? The content of the last yank. How will you paste content present in the last yank using a register? \"0 What do the numbered registers 1 to 9 contain? They contain the content you have deleted or changed. Each time you delete or change content, it will be added to register 1. The previous content of the register 1 will be assigned to register 2, the previous content of 2 to 3…​ When something is added to the register 1, the content of the register 9 is lost. None of these registers are written if you’ve specified one before with the keystroke \". What is the small delete register? The - register. It contains any deleted or changed content smaller than one line. It is not written if you specified a register with \". What are named registers? They range from a to z. Vim will never write to them if you do not specify the keystroke \". You can use the uppercase name of each register to append to it (instead of over-writing it). What are read only registers? They are \"., \"% and \":. . contains the last inserted text. % contains the name of the current file. : contains the most recent command line executed. What is an alternate buffer register? It is #. It contains the alternate buffer for the current window. What is an expression register? It is \"=. It stores the result of an expression. What are the selection registers? They are \"+ and \"*. + is synchronized with the system clipboard. * is synchronized with the selection clipboard (only on *nix systems). What is a black hole register? It is the \"_ register. Everything written in there will disappear forever. What is the last search pattern register? This register contains your last search. It is the \"/ register. What gets output when the put command is used without specifying the register? It will output the unnamed register by default. What happens when you add the line clipboard+=unnamedplus to your vimrc? In this case, the content you change, delete, or yank will go directly in the unnamed register and the + register. Using the put commands will directly output the + register too. Many find it useful to access the OS clipboard more easily, without the need to specify the + register for reading and writing it. How can you append to your macro recording? Hit qa and record whatever keystrokes you want. Stop the recording by hitting q again. You realize that you forgot a couple of keystrokes. Execute your keystrokes to be sure you are at the last position of your recording. Hit qA to append to your register a. When you are done, hit q again. How can you paste or use the content of a register in INSERT mode or COMMAND LINE mode? Ctrl+R to put the content of in your current buffer. What is an expression register? It can evaluate custom functions that you have defined while staying in insert mode. Give an example of how you can use an expression register? Switch to INSERT mode and hit keystroke Ctrl+r =. You will move to the Vim’s command line. Type any vimscript expression you want, like system(\"ls\") or 4+4. Hit Enter to run the expression. The output of the shell command ls is directly inserted in the buffer. How can you clear a register? qaq Beginning a recording also deletes everything which is in this register. So you need to just stop the recording by hitting q again to have an empty register. What is a substitution? A substitution is a way to replace some content with some other content, using a range and a count. The count will decide how many lines is affected by your substitution from the last line of your range. What is the default range of a substitution command? The default range is the current line if you do not specify it. What is the pattern of the substitution command? :s/pattern/replacement/flags pattern is the search you want to match. replacement will replace the first match of the pattern on each line. flag modify the behaviour of the command. Is the replacement mandatory in a substitution command? No, if you omit it, the substitute command will delete the pattern matched.","title":"Vim Questions","component":"studynotes","version":"","name":"questions","url":"/studynotes/azure_iot/questions.html","titles":[]},"43":{"id":43,"text":"Key Mappings Ctrl+c or Ctrl+[ or Esc to exit from insert mode or visual mode to normal mode. Shift+v to start visual mode line wise. Ctrl+v or Ctrl+Alt+v to start visual mode block wise. Commands :help to open Vim’s help. :q to quit the current window. :q! to quit without saving. :w to write. :wq to write and quit or just use :x a character after your cursor. :e to edit a file. Key Mappings / for searching. n for the next found occurence. N for the previous found occurence. * in normal mode searches the word under the cursor forwards. # in normal mode searches the word under the cursor backwards. Key Mappings u will undo your last edit. Ctrl+r will redo. Basic movements w will move forward to the next word. b will move back your cursor to the previous word. 0 will move to the beginning of the current line. ^ will move to the first non blank character on the current line. $ will move to the end of the current line. % will move to the matching bracket when the cursor is already on the bracket. Find character inline f will find a character after your cursor on the current line. F will find a character before your cursor on the current line. t will move to a character after your cursor on the current line. T will move to a character before your cursor on the current line. ; will move on the character to go forward on the current line. , will move on the character to go backward on the current line. Jump movement G will move the cursor to the beginning of the arbitrary line. 10G will move the cursor to line 10. G will move the cursor to the last line of the file. 1G or gg will move the cursor to the first line of the file. Scrolling Ctrl+e will scroll the window downwards. Ctrl+u will move your cursor upward half the screen. Ctrl+d will move your cursor downward half the screen. Key Mappings d is the operator for delete. c is the operator for change. y is the operator for yank (copy). p or P is the operator for pasting what you copied (yanked). d$ will delete from your cursor to the end of the line. D will do the same as above. dgg will delete everything from your cursor to the beginning of the file. ggdG will delete everything in the file. Concept In Vim, a word is a text object, as well as a sentence or a paragraph. diw will delete inside the word. It will delete the current word under the cursor. ciw will change inside the word. It will delete the current word under the cursor and switch to insert mode. dip will delete inside the paragraph. Commands :set no - Unset the option. :set ! - Toggle the option. :set ? - Return the option’s value. :set = - Set a (string or number). :set += - Add the value for a number option, append a string for a string option. :set -= - Subtract the value for a number option, delete the string for a string option. :set & - Reset the option to its default value. :set filetype? - display the filetype of the current open file. Vimrc Drop the prefix : to set these options in your vimrc file. Help Commands :help options - displays the help file for options :help option-list - displays the help file for the list of options. Concept A buffer is an open file in memory. If you close a buffer, it does not close the file, the buffer is still there, hidden. It can have three different states. active - The buffer is displayed in the window. hidden - The buffer is not displayed, but it exists and the file is still open. inactive - The buffer is not displayed and empty. It is not linked to any file. Commands :buffers displays the buffer list. Each line contains: The buffer id. Indicators - a for active. h for hidden. (space) for inactive. The name of the buffer. It can be the filepath of the file linked to the buffer. The line number where the cursor is. Key Mappings :buffer - Move to the buffer using its ID or its name. :bnext or :bn - Move to the next buffer. :bprevious or :bp - Move to the previous buffer. :bfirst or :bf - Move to the first buffer. :blast or :bl - Move to the last buffer. :Ctrl+^ - switch to alternate buffer. It is indicated in your buffer list with the symbol #. Ctrl+^ - switch to a specific buffer with ID . For example, 75Ctrl+^ switch to the buffer with ID 75. :bufdo - applies a command to all buffers. :buffers! or :ls! - displays unlisted buffers u is displayed as an indicator for an unlisted buffer. :badd - Add a filename to a buffer. Creates a file if it does not exist. :bdelete - Delete a buffer by ID or name. You can specify more than one ID or name (comma-seperated) :1,10bdelete - Delete buffers from ID 1 to 10 included. %bdelete - Delete all buffers. Help Commands :help buffers - displays the help file for buffers :help :buffers - displays the help file for buffers. Concept A window is a space you can use to display the contents of a buffer. When you close the window, the buffer stays open. When you open vim, one window with one empty buffer is automatically created. Key Mappings Ctrl+W s - Split the current window horizontally. Ctrl+Alt+W v - Split the current window vertically. Ctrl+W n - Split the current window horizontally and edit a new file. Ctrl+W ^ - Split the current window with the alternate file. The alternate file is the file with the # indicator in the buffer list. Ctrl+W ^ Split window with buffer of id . For example, 75 Ctrl+W ^ will open a window with the buffer of ID 75. Ctrl+W j - moves the cursor to the bottom window. Ctrl+W k - moves the cursor to the top window. Ctrl+W h - moves the cursor to the left window. Ctrl+W l - moves the cursor to the right window. Ctrl+W r - Rotate the windows. Ctrl+W x - Exchange with the next window. Ctrl+W = - Resize windows for them to fit on the screen with the same size. Ctrl+W - - Decrease windows’s height. Ctrl+W + - Increase windows’s height. Ctrl+W - Increase window’s width. :q - to quit the current window. :q! - to quit the current window with an unsaved buffer. Help commands :help windows - opens the help file for windows. :help opening-window - opens the help file for opening windows. :help window-move-cursor - opens the help file for moving the cursor between windows. :help window-moving - opens the help file for moving the windows. :help window-resize - opens the help file for resizing windows. Concept Tabs is a container for a bunch of windows. It’s very different from the concept of tabs in a standard IDE. Key Mappings :tabnew or :tabe - Opens a new tab. :tabclose or :tabc - Close the current tab. :tabonly or :tabo - Close every other tab except the current one. gt - go to the next tab. gT - go to the previous tab. 1gT - go to the first tab. Help Commands :help tab-page - opens the help file for tab page. The argument list is the fourth and last container allowing you to organize your open files. It is a stable subset of the buffer list. It follows these two rules: Every file in the arglist will be in the buffer list. Some buffers in the buffer list won’t be in the arg list. The arglist can be useful to isolate some files from the buffer list to do some operations on them. :args - Display the arglist. :argsadd - Add file to the arglist. :argdo - Execute a command on every file in the arglist. :next - Move to the next file in the arglist for editing. :prev - Move to the previous file in the arglist for editing. :first - Move to the first file in the arglists. :help arglist - opens the help file for arglists. :nmap - Create a new mapping for NORMAL mode. :imap - Create a new mapping for INSERT mode. :xmap - Create a new mapping for VISUAL mode. :cmap - Create a new mapping for COMMAND-LINE mode. :nmap w dd - This will map dd which deletes a line in normal mode to w. :nmap v w - Now v will also delete line. v maps to w which maps to dd. This is called a recursive mapping. It would be nice to: * Map w to dd * Map v to the motion made by w before its mapping with dd. :nnoremap - Create mapping for NORMAL mode (non recursive). :inoremap - Create mapping for INSERT mode (non recursive). :vnoremap - Create mapping for VISUAL mode (non recursive). :cnoremap - Create mapping for COMMAND-LINE mode (non recursive). :nnoremap w dd :nnoremap v w This time, w deletes a line and v moves from word to word. You can use special characters in your mapping * for Space. * c-w for Ctrl+W. * for carriage return (Enter). * for escape. * :help key-notation - opens the help file that gives more information of the keys. As a best practice, do not change the default key mappings. To create new mappings, use a special key called the leader key. It is a way to create mapping namespaces. First, you use your leader key, then you use your keystroke. Thanks to the leader key, the new keystroke will never conflict with the default Vim keystrokes. :let mapleader = \"bn :bn - bn will move to the next buffer. :nnoremap tn gt - tn will move to the next tab. When you want to map a keystroke to a command, you need to add at the end exactly like you would type ENTER. :help mapping - opens the help file for more information on mapping. :help leader - opens the help file for more information on leader. Each time we use a jump motion, the position of the cursor before the jump is saved in the jump list. Ctrl+o - Go to the previous cursor position. Ctrl+i - Go to the next cursor position. :jumps - Displays your jump list. Each time you insert something the position of your cursor is saved in the change list. g; - Jump to the next change. g, - Jump to the previous change. [m - move to start of a method. ]m - move to the end of a method. :help jump-motions :help jump-list :help changelist . - Repeat the last change. @: - Repeat the last command executed. :help single-repeat q - Begin recording keystrokes in a register. Every keystroke you do onwards will be saved. q - Stop the recording. @ - Execute the keystrokes you have recorded. Example: Hit qa. Do what you have to do. For example: ^cawhello Hit q again. To execute your series of keystrokes, hit @a. For the example above, go on a new line. @@ - repeats your previous @ command. q: - Open command line history q/ and q? - Open search history Ctrl+f - Open command line history while in COMMAND LINE mode. :history - Also opens command line history :help cmdline-window - opens the help for the command line window. :help 'history' - opens the help for the history command. Vim allows you to save all undos in a file, for each file you modify. It means that even after closing vim, you will have access to your last change by \"undoing\" them. You need to configure it in you vimrc file, by adding the following: \"save undo trees in files set undofile set undodir=~/.vim/undo \"number of undo saved set undolevels=10000 The option undolevels=10000 saves a maximum of 10,000 undos per file. Vim not only saves a list of undos, it saves a whole undo tree. :help undo-redo :help undo-persistence :help undo-tree gf - Edit the file located at the filepath under your cursor. You can use Ctrl+W Ctrl+F to open the file in a new window. It can open the url under your cursor if you have the plugin netrw. gx - Open the file located at the filepath under your cursor. It will use the default application used by your OS for this filetype. It will also open the file in your favourite browser and load the website, if you have the netrw plugin. gi - Move to the last insertion you did and switch to INSERT mode. Pretty useful if you stopped editing to look at some other file. gv - Start VISUAL mode and use the selection made during the last VISUAL mode. gn - Select the match of your last search: Move to the last searched match. Switch to VISUAL mode. Select the match. Continue to hit n (or gn) to select the area between the current match and the next match. gI - Insert text at the beginning of the line, no matter what the first characters are. ga - Print the ascii value of the character under the cursor in decimal, hexadecimal or octal. gu - Lowercase using a motion. for example, guiw. gU - Uppercase using a motion. for example, gUiw. :help reference :help g :1,40d - Delete line 1 to 40 included. :2,$d - Delete every line from the second one till the end of the file. :.,$d - Delete every line from the current one till the end of the file. :%d - Delete every line. :help [range] - opens the help file for range. :help v_: - opens the help file for range. :help ' - opens the help file for visual range. :cl or :clist - Display all valid entries of the current quickfix list. You can add a range as an argument (only numbers). :cc - Move to the entry of the current quickfix list. :cnext or :cn - Move to the next entry of the current quickfix list. :cprevious or :cp - Move to the previous entry of the current quickfix list. :cfirst or :cfir - Move to the first entry of the current quickfix list. :clast or :clas - Move to the last entry of the current quickfix list. :cdo - Execute a command on each valid entry of the current quickfix list. :cexpr or :cex - Create a quickfix list using the result of evaluating the Vimscript expression . for example, :cex [] will empty the current quickfix list. for example, :cex system(\"\") will populate your quickfix list with any shell command like ls. :caddexpr or :cadde - Appends the result of evaluating the Vimscript expression to the current quickfix list. :copen or :cope - Opens the current quickfix list in a new buffer window. :lli or :llist - Display all valid entries of the current location list. You can add a range as an argument (only numbers). :ll - Move to the entry of the current location list. :lnext or :lne - Move to the next entry of the current quickfix list. :lvimgrep or :lmake - will populate the location lists. Vim users will use the quickfix list for errors in their codebase, and the location list for search results. :help quickfix :help quickfix-window :help location-list :help location-list-window :help expr :help system() Registers are places where you can read and write some text. Think of them as Vim’s clipboard. :registers or :reg - Display the content of your registers. \" - This keystroke specifies the register to be read or written. To write to register a: Hit \"a in NORMAL mode to specify what register you want to write on. Yank, change or delete some content to write it to register a. for example, by using dd in normal mode. To read from a register a: Hit \"a in NORMAL mode to specify what register you want to read. Use a put keystroke in NORMAL mode to spit out the content of the register in your current buffer. An example of a put keystroke is a P or p command. Ctrl+R - to paste the content of register in insert mode or command line mode. Ctrl+r = - In insert mode, you will move to the command line where you can execute vimscript expressions. qaq - clears a register. :help registers :help clipboard :help clipboard-unnamed :help clipboard-unnamedplus :s/pattern/replacement/ - Substitute the first occurrence of pattern on the current line with replacement. :s#pattern#replacement# - Equivalent substitution to the one above. Handy if you have some urls in your pattern or your replacement. :s/pattern/ - Delete the first occurence of pattern on the current line. :s/pattern/replacement/g - Substitute every occurrence of pattern on the current line. :%s/pattern/replacement/ - Substitute every first occurrence of pattern on each line of the current buffer. :%s/pattern/replacement/g - Substitute every of pattern on each line of the current buffer. :1,10s/pattern/replacement/ - Substitute every first occurrence of pattern on the first ten lines of the current buffer. :s/pattern/replacement/ 10 - Substitute every first occurrence of pattern for the current line and the 10 next lines. :1,10s/pattern/replacement/ 5 - Substitute every first occurrence of pattern on the first ten lines and on the five lines below. :s g 10 - Repeat the last substitution without its flag, and add a new flag g. It will affect the 10 lines after the last line of the last substitute command.","title":"Vim Commands","component":"studynotes","version":"","name":"vimcommand","url":"/studynotes/azure_iot/vimcommand.html","titles":[{"text":"Moving between modes","hash":"_moving_between_modes","id":1},{"text":"Working with the buffer window","hash":"_working_with_the_buffer_window","id":2},{"text":"Searching","hash":"_searching","id":3},{"text":"Undo-Redo","hash":"_undo_redo","id":4},{"text":"Cursor movement","hash":"_cursor_movement","id":5},{"text":"Operators and Text Objects","hash":"_operators_and_text_objects","id":6},{"text":"Options","hash":"_options","id":7},{"text":"Buffers","hash":"_buffers","id":8},{"text":"Windows","hash":"_windows","id":9},{"text":"Tabs","hash":"_tabs","id":10},{"text":"Argument List","hash":"_argument_list","id":11},{"text":"Mapping Keystrokes","hash":"_mapping_keystrokes","id":12},{"text":"Jump Motion","hash":"_jump_motion","id":13},{"text":"Jump List","hash":"_jump_list","id":14},{"text":"Change List","hash":"_change_list","id":15},{"text":"Methods Jumping","hash":"_methods_jumping","id":16},{"text":"Repeating Keystrokes","hash":"_repeating_keystrokes","id":17},{"text":"Single Repeat","hash":"_single_repeat","id":18},{"text":"Macro","hash":"_macro","id":19},{"text":"Command Line Window","hash":"_command_line_window","id":20},{"text":"Undo Tree","hash":"_undo_tree","id":21},{"text":"Useful \"g\" keystrokes","hash":"_useful_g_keystrokes","id":22},{"text":"Ranges","hash":"_ranges","id":23},{"text":"Quickfix Lists","hash":"_quickfix_lists","id":24},{"text":"Location Lists","hash":"_location_lists","id":25},{"text":"Registers","hash":"_registers","id":26},{"text":"Expression Register","hash":"_expression_register","id":27},{"text":"Substitute Commands","hash":"_substitute_commands","id":28},{"text":"Vim patterns","hash":"_vim_patterns","id":29}]},"44":{"id":44,"text":"Table of Contents Azure Active Directory Azure AD Editions Roles in Azure AD Available Roles Azure AD Domain Services Create and Manage Azure AD users Manage users with Azure AD groups Configure Azure AD Administrative Units Passwordless authentication methods Azure Active Directory (Azure AD) is Microsoft’s cloud-based identity and access management service, which helps your employees sign in and access resources in: External resources, such as Microsoft 365, the Azure portal, and thousands of other SaaS applications Internal resources, such as apps on your corporate network and intranet, along with any cloud apps developed by your own organization. A security engineer uses Azure AD to manage identities. A security engineer’s task includes: Create users, groups, and administrative units to securely access resources and services. Configure access to systems to be passwordless. Define a strategy for using Azure AD and Azure AD Domain Services to lock down access to your solutions. Azure Active Directory comes in four editions - Free, Microsoft 365 Apps, Premium P1, and Premium P2. The free edition is included with an Azure subscription. The premium editions are available through a Microsoft Enterprise Agreement, the Open Volume License Program, and the Cloud Solution Providers program. Azure and Microsoft 365 subscribers can also buy Azure Active Directory Premium P1 and P2 online. Provides user and group management, on-premises directory synchronization, basic reports, and single sign-on across Azure, Microsoft 365, and amany popular SaaS apps. This edition is included with O365. In addition to the Free features, this edition provides IDAM for Microsoft 365 apps including Branding, MFA, group access management, and self-service password reset for cloud users. In addition to the Free features, P1 also lets your hybrid users access both on-premises and cloud resources. It also supports advanced administration, such as dynamic groups, self-service group management, Microsoft Identity Manager (an on-premises IDAM suite) and cloud write-back capabilities, which allow self-service password reset for your on-premises users. In addition to the Free and P1 features, P2 also offers Azure AD Identity Protection to help provide risk-based Conditional Access to your apps and critical company data and Privileged Identity Management to help discover, restrict, and monitor administrators and their access to resources and provide just-in-time access when needed. Azure AD Pricing Users who are assigned to the Global administrator role can read and modify every administrative setting in your Azure AD organization. By default, the person who signs up for an Azure subscription is assigned the Global Administrator role for the Azure AD organization. Only Global administrators and Privileged Role administrators can delegate administrator roles. As a best practice, we recommend that you assign this role to fewer than five people in your organization. Application Administrator Users in this role can create and manage all aspects of enterprise applications, application registrations, and application proxy settings. Application Developer Can create application registrations independent of the \"Users can register applications\" setting. Authentication Administrator Users with this role can set or reset any authentication method for non-administrators and some roles. Azure DevOps Administrator Users with this role can manage the Azure DevOps policy to restrict new Azure DevOps organization creation to a set of configurable users or groups. Azure Information Protection Administrator Users with this role have all permissions in the Azure Information Protection Service. B2C User Flow Administrator Users with this role can create and manage B2C User Flows (also called \"built-in\" policies) in the Azure portal. B2C User Flow Attribute Administrator Users with this role add or delete custom attributes available to all user flows in the tenant. B2C IEF Keyset Administrator User can create and manage policy keys and secrets for token encryption, token signatures, and claim encryption/decryption. B2C IEF Policy Administrator Users in this role can create, read, update, and delete all custom policies in Azure AD B2C and therefore have full control over the Identity Experience Framework in the relevant Azure B2C tenant. Billing Administrator Makes purchases, manages subscriptions, manages support tickets, and monitors service health. Cloud Application Administrator Users in this role have the same permissions as the Application Administrator role, excluding the ability to manage application proxy. Cloud Device Administrator Users in this role can enable, disable, and delete devices in Azure AD and read Windows 10 BitLocker keys (if present) in the Azure portal. Compliance Administrator Users in this role have permissions to manage compliance-related features in the compliance portal, Microsoft 365 admin center, Azure, and Microsoft 365 Security and compliance portal. Compliance Data Administrator Users with this role have permissions to track data in the compliance portal, Microsoft 365 admin center, Azure, and Microsoft 365 Security and compliance portal. Conditional Access Administrator Users with this role have the ability to manage Azure AD Conditional Access settings. Exchange Administrator Users with this role have global permissions within Microsoft Exchange Online when the service is present. Directory Readers Users in this rile can read basic directory information. Global Administrator / Company Adminstrator Users with this role have access to all administrative features in Azure AD. Groups Administrator Users in this role can create/manage groups and its settings like naming and expiration policies. Security Administrator Users with this role have permissions to manage security-related features in the Microsoft 365 security center, Azure AD Identity Protection, Azure Information Protection, and Microsoft 365 Security and Compliance Center. Azure Active Directory Domain Services (Azure AD DS) provides managed domain services such as group policy, LDAP, and Kerberos / NTLM authentication that is fully compatible with Windows Server Active Directory. Azure AD DS integrates with your existing Azure AD tenant, which makes it possible for users to sign in using their existing credentials. Azure AD DS replicates identity information from Azure AD. The same set of Azure AD DS features exist for both environments. If you have an existing on-premises AD DS environment, you can synchronize user account information to provided a consistent identity for users. For cloud-only environments, you do not need a traditional on-premises AD DS environment to use the centralized identity services of Azure AD DS. Simplified deployment experience Azure AD DS is enabled for your Azure AD tenant using a single wizard in the Azure portal. Integrated with Azure AD User accounts, group memberships, and credentials are automatically available from your Azure AD tenant. New users, groups, or changes to attributes from your Azure AD tenant or your on-premises AD DS environment are automatically synchronized to Azure AD DS. Use your corporate credentials/passwords Passwords for users in Azure AD DS are the same as in your Azure AD tenant. Users can use their corporate credentials to domain-join machines, sign in interactively or over remote desktop, and authenticate agains the Azure AD DS managed domain. NTLM and Kerberos authentication With support for NTLM and Kerberos authentication, you can deploy applications that rely on Windows-integrated authentication. High availability Azure AD DS includes multiple domain controllers, which provide high availability for your managed domain. This high availability guarantees service uptime and resilience to failures. In regions that support Azure Availability Zones, these domain controllers are also distributed across zones for additional resiliency. Azure AD DS integrates with Azure AD, which itself can synchronize with an on-premises AD DS environment. This ability extends central identity use cases to traditional web applications that run in Azure as part of a lift-and-shift strategy. In Azure AD, every user who needs access to resources needs a user account. A user account is a synced Active Directory Domain Services (AD DS) object or an Azure AD user object that contains all the infomation needed to authenticate and authorize the user during the sign-on process and to build the user’s access token. Azure AD defines users in three ways: Cloud Identities These users exist only in Azure AD. Examples are administrator accounts and users that you manage yourself. Their source is Azure AD. Directory-synchronized identites These users exist in on-premises Active Directory. A synchronization activity that occurs via Azure AD Connect brings these users in to Azure. Guest users These users exist outside Azure. Examples are accounts from other cloud providers and Microsoft accounts. Azure AD allows you to define two different types of groups Security groups These are used to manage member and computer access to shared resources for a group of users. For example, you can create a security group for a specific security policy. You can give a set of permissions to all the members at once, instead of having to add permissions to each member individually. This option requires an Azure AD administrator. Microsoft 365 groups These groups provide collaboration opportunites by giving members access to a shared mailbox, calendar, files, SharePoint site, and more. This option also lets you give people outside of your organization access to a group. This option is available to users as well as admins. There are different ways you can assign group access rights: Assigned Lets you add specific users to be members of this group and to have unique permissions. Dynamic User Lets you use dynamic membership rules to automatically add and remove members. If a member’s attributes change, the system reviews your dynamic group rules for the directory to determine if the member meets the rule requirements or no longer meets the rules requirements. Dynamic Device (Security groups only) Lets you use dynamic group rules to automatically add and remove devices. If a device’s attributes change, the system reviews your dynamic group rules for the directory to determine if the device meets the rule requirements or no longer meets the rules requirements. An administrative unit is an Azure AD resource that can be a container for other Azure AD resources. An administrative unit can contain only users and groups. Administrative units restrict permissions in a role to any portion of your organization that you define. For example, use administrative units to delegate the Helpdesk Administrator role to regional support specialists, so they can manage users in the region that they support. Sign-in without ever using a password. With passwordless, the password is replaced with something you have plus something you are or something you know. For example, Windows Hello for Business can use a biometric gesture like a face or fingerprint, or a device-specific PIN that isn’t transmitted over a network. Windows Hello for Business Biometric and PIN credentials are directly tied to the user’s PC, which prevents access from anyone other than the owner. FIDO2 Security Keys Generally stored on a USB stick, FIDO2 security keys are an unphishable standards-based passwordless authentication method that can come in any form factor. Microsoft Authenticator App Authenticator App turns any iOS or Android phone into a strong, passwordless credential. Users can sign in to any platform or browser by getting a notification to their phone, matching an number displayed on screen to the one on their phone, and then using their biometric (touch or face) or PIN to confirm. FIDO2 Smartcards (preview) New method to use FIDO2 keys for passwordless login via a smartcard. Temporary Access Pass (preview) Time-limited passcode allows you to set up security keys and the Microsoft Authenticator without ever needing to use, much less know, your password!","title":"Azure Security Engineer","component":"studynotes","version":"","name":"overview","url":"/studynotes/azure_security_engineer/overview.html","titles":[{"text":"Azure Active Directory","hash":"_azure_active_directory","id":1},{"text":"Azure AD Editions","hash":"_azure_ad_editions","id":2},{"text":"Azure Active Directory Free","hash":"_azure_active_directory_free","id":3},{"text":"Azure Active Directory Microsoft 365 apps","hash":"_azure_active_directory_microsoft_365_apps","id":4},{"text":"Azure Active Directory Premium P1","hash":"_azure_active_directory_premium_p1","id":5},{"text":"Azure Active Directory Premium P2","hash":"_azure_active_directory_premium_p2","id":6},{"text":"Pricing Page","hash":"_pricing_page","id":7},{"text":"Roles in Azure AD","hash":"_roles_in_azure_ad","id":8},{"text":"Available Roles","hash":"_available_roles","id":9},{"text":"Azure AD Domain Services","hash":"_azure_ad_domain_services","id":10},{"text":"Azure AD DS features and benefits","hash":"_azure_ad_ds_features_and_benefits","id":11},{"text":"Create and Manage Azure AD users","hash":"_create_and_manage_azure_ad_users","id":12},{"text":"Manage users with Azure AD groups","hash":"_manage_users_with_azure_ad_groups","id":13},{"text":"Configure Azure AD Administrative Units","hash":"_configure_azure_ad_administrative_units","id":14},{"text":"Passwordless authentication methods","hash":"_passwordless_authentication_methods","id":15}]}},"components":{},"componentVersions":{"homesite/1.0.0":{"displayVersion":"1.0.0","title":"Home page","version":"1.0.0","name":"homesite","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorscript","site-url":"https://tremorscript.com","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/homesite/current/index.html","navigation":[{"items":[{"content":"Home","url":"/homesite/current/index.html","urlType":"internal"},{"content":"Azure Architecture Starter Pack","url":"/azurearchitecturestarterpack/current/index.html","urlType":"internal"},{"content":"Project Starter Pack","url":"/projectstarterpack/current/inline-text-formatting.html","urlType":"internal"},{"content":"Study Notes","url":"/studynotes/index.html","urlType":"internal"}],"root":true,"order":0}]},"projectstarterpack/1.0.0":{"displayVersion":"1.0.0","title":"New Project Starter Pack","version":"1.0.0","name":"projectstarterpack","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorscript","site-url":"https://tremorscript.com","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/projectstarterpack/current/inline-text-formatting.html","navigation":[{"items":[{"content":"Project Starter Pack","url":"/projectstarterpack/current/inline-text-formatting.html","urlType":"internal"},{"content":"Special Characters and Symbols","url":"/projectstarterpack/current/special-characters.html","urlType":"internal"},{"content":"Admonition","url":"/projectstarterpack/current/admonition.html","urlType":"internal"},{"content":"Sidebar","url":"/projectstarterpack/current/sidebar.html","urlType":"internal"},{"content":"User Interface Macros","url":"/projectstarterpack/current/ui-macros.html","urlType":"internal"},{"content":"Lists","items":[{"content":"Ordered Lists","url":"/projectstarterpack/current/lists/ordered-list.html","urlType":"internal"},{"content":"Unordered Lists","url":"/projectstarterpack/current/lists/unordered-list.html","urlType":"internal"},{"content":"Unordered Lists","url":"/projectstarterpack/current/lists/unordered-list.html","urlType":"internal"}]}],"root":true,"order":0}]},"azurearchitecturestarterpack/1":{"displayVersion":"1-beta.1","title":"Azure Architecture Starter Pack","version":"1","name":"azurearchitecturestarterpack","prerelease":"-beta.1","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorscript","site-url":"https://tremorscript.com"},"sourcemap":false},"url":"/azurearchitecturestarterpack/current/index.html","navigation":[{"items":[{"content":"Azure Architecture Starter Pack","url":"/azurearchitecturestarterpack/current/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Module One Overview","url":"/azurearchitecturestarterpack/current/module-one/overview.html","urlType":"internal"}],"root":true,"order":1}]},"studynotes/":{"displayVersion":"default","title":"Study Notes","version":"","name":"studynotes","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Tremorscript","site-url":"https://tremorscript.com"},"sourcemap":false},"url":"/studynotes/index.html","navigation":[{"items":[{"content":"Study Notes","url":"/studynotes/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"FSharp Notes","url":"/studynotes/FSharp/overview.html","urlType":"internal","items":[{"content":"Computation Expressions","items":[{"content":"Log Builder","url":"/studynotes/FSharp/LogBuilder.html","urlType":"internal"},{"content":"Maybe Builder","url":"/studynotes/FSharp/MaybeBuilder.html","urlType":"internal"},{"content":"OrElse Builder","url":"/studynotes/FSharp/OrElseBuilder.html","urlType":"internal"},{"content":"Introducing Bind","url":"/studynotes/FSharp/IntroducingBind.html","urlType":"internal"},{"content":"Wrapper Types","url":"/studynotes/FSharp/WrapperTypes.html","urlType":"internal"},{"content":"Rules for workflows that use wrapper types","url":"/studynotes/FSharp/WorkflowRulesForWrapperTypes.html","urlType":"internal"},{"content":"Composition of computation expression","url":"/studynotes/FSharp/ComputationExpressionComposition.html","urlType":"internal"},{"content":"List Wrapper Types","url":"/studynotes/FSharp/ListWrapperTypes.html","urlType":"internal"},{"content":"Identity Wrapper Types","url":"/studynotes/FSharp/IdentityWrapperTypes.html","urlType":"internal"},{"content":"Do Method","url":"/studynotes/FSharp/DoMethod.html","urlType":"internal"},{"content":"Yield Method","url":"/studynotes/FSharp/YieldMethod.html","urlType":"internal"},{"content":"Combine method","url":"/studynotes/FSharp/CombineMethod.html","urlType":"internal"},{"content":"Delay and Run Method","url":"/studynotes/FSharp/DelayRunMethod.html","urlType":"internal"}]}]}],"root":true,"order":1},{"items":[{"content":"Git Notes","url":"/studynotes/Git/overview.html","urlType":"internal"}],"root":true,"order":2},{"items":[{"content":"Devops for Asp.Net Core developers","url":"/studynotes/Devops/devopsfordevelopers.html","urlType":"internal"}],"root":true,"order":4},{"items":[{"content":"Azure IoT","url":"/studynotes/azure_iot/overview.html","urlType":"internal","items":[{"content":"Working With IoT Hub","url":"/studynotes/azure_iot/iothub.html","urlType":"internal"},{"content":"Azure Digital Twins","url":"/studynotes/azure_iot/azuredigitaltwins.html","urlType":"internal"},{"content":"IoT Monitoring and Logging","url":"/studynotes/azure_iot/iotmonitoring.html","urlType":"internal"},{"content":"Vim Questions","url":"/studynotes/azure_iot/questions.html","urlType":"internal"},{"content":"Vim Commands","url":"/studynotes/azure_iot/vimcommand.html","urlType":"internal"}]}],"root":true,"order":5},{"items":[{"content":"Azure Security Engineer","url":"/studynotes/azure_security_engineer/overview.html","urlType":"internal"}],"root":true,"order":6},{"items":[{"content":"CSharp Notes","url":"/studynotes/CSharp/overview.html","urlType":"internal","items":[{"content":"Bitwise Operators","url":"/studynotes/CSharp/bitwiseoperators.html","urlType":"internal"}]}],"root":true,"order":7}]}}}})